{"version":3,"sources":["components/Calendar/CalendarRow/CalendarBox/CalendarBox.module.css","components/Navigation/Navigation.module.css","components/TodoContainer/Todo/Todo.module.css","components/TodoContainer/TodoContainer.module.css","components/TodoContainer/TodoForm/TodoForm.module.css","components/DateChanger/DateChanger.module.css","components/TodoContainer/TodoLabels/Label/Label.module.css","components/Login/Login.module.css","components/Register/Register.module.css","components/Overview/MonthBox/WeekRow/DayBox/DayBox.module.css","components/Spinner/Spinner.module.css","components/Calendar/Calendar.module.css","components/Calendar/SideBar/SideBar.module.css","components/Calendar/CalendarRow/CalendarRow.module.css","components/Calendar/CalendarRow/CalendarBox/CalendarTodo/CalendarTodo.module.css","components/TodoContainer/TodoLabels/TodoLabels.module.css","components/Overview/MonthRow/MonthRow.module.css","components/Overview/MonthBox/MonthBox.module.css","components/Overview/MonthBox/WeekRow/WeekRow.module.css","axios.js","services/authService.js","components/Navigation/Navigation.js","components/Alert/Alert.js","components/Spinner/Spinner.js","components/Login/Login.js","components/Register/Register.js","services/calendarService.js","services/moodService.js","services/todoService.js","components/DateChanger/DateChanger.js","components/Calendar/SideBar/SideBar.js","components/Calendar/CalendarRow/CalendarBox/CalendarTodo/CalendarTodo.js","components/Calendar/CalendarRow/CalendarBox/CalendarBox.js","components/Calendar/CalendarRow/CalendarRow.js","components/Calendar/Calendar.js","components/TodoContainer/Todo/Todo.js","components/TodoContainer/TodoForm/TodoForm.js","services/labelService.js","components/TodoContainer/TodoLabels/Label/Label.js","components/TodoContainer/TodoLabels/TodoLabels.js","components/TodoContainer/TodoContainer.js","components/Overview/MonthBox/WeekRow/DayBox/DayBox.js","components/Overview/MonthBox/WeekRow/WeekRow.js","components/Overview/MonthBox/MonthBox.js","components/Overview/MonthRow/MonthRow.js","components/Overview/Overview.js","App.js","index.js"],"names":["module","exports","axios","defaults","baseURL","data","a","post","response","result","successfull","persistUserData","authToken","localStorage","setItem","authService","isUserAuthenticated","getItem","register","login","logout","removeItem","Navigation","state","showMobile","redirect","page","props","history","setState","toggleMobileButtons","mobileButtons","this","isAuthenticated","onClick","className","classes","MobileLink","buttons","NavigationButton","to","mobileButtonsStyle","display","Logo","Burger","Slice","style","MobileButtons","Component","withRouter","Alert","alert","role","message","Spinner","Loader","Login","event","preventDefault","email","emailInput","current","value","trim","password","passwordInput","length","isLoading","errorMessages","React","createRef","spinner","alerts","map","index","push","LoginContainer","Slogan","type","placeholder","ref","Register","username","usernameInput","repeatPassword","repeatPasswordInput","RegisterContainer","dayjs","require","weekday","weekOfYear","getCalendarDays","year","month","currentDate","totalDays","daysInMonth","start","day","max","active","date","prevDate","prevMonthDays","previousDifference","previous","from","next","dateObject","days","Number","previousYear","previousMonth","i","parseInt","currentMonth","isActive","todos","currentDateObject","nextYear","nextMonth","transformToArray","extend","calendarService","convertFromNumber","stringDate","toString","substr","getCurrentDate","format","getCurrentYear","getMonthRange","monthDays","getMonthData","convertedMonth","requestData","buildRequestData","mood","startDate","endDate","moodService","getForDay","updateMood","getForRange","getMoodColor","todosResponse","todoId","newCheckState","title","description","todoService","changeTodoCheckedState","getTodosForDates","getDailyTodos","deleteTodo","updateTodo","create","DateChanger","DateContainer","dateLabel","icon","faAngleLeft","Button","updateDate","dateValue","faAngleRight","SideBar","updateYear","updateMonth","CalendarTodo","backgroundColor","TodoRow","CalendarBox","showPopover","moodColor","showPopoverHandler","hidePopoverHandler","updateMoodHanlder","stopPropagation","newMoodColor","forEach","todo","label","boxClass","Current","Box","numberClass","Active","popover","Popover","PopoverBox","Miserable","Bad","Average","Good","Excellent","FirstRow","LeftBox","onMouseLeave","onMouseOver","ColorBox","RightBox","SecondRow","CalendarRow","boxArray","Row","Calendar","updateCalendar","currentDays","find","rawDayMoodsResponse","dayMoodsResponse","dateMoods","dateMood","prevProps","prevState","calendarRows","currentRowDays","j","sideBarDateObject","Todo","changeCheckedHandler","isChecked","id","toggleDescriptionHandler","showDescription","editTodoHandler","isEditable","saveChangesHandler","titleInput","descriptionTextArea","cancelHandler","deleteTodoHandler","onDelete","nextCheckIcon","faCheckSquare","faSquare","descriptionElement","todoElement","defaultValue","DescriptionTextArea","rows","EditInput","faTimes","Icon","faPen","EditButtonsContainer","EditButton","SaveChanges","Cancel","TodoDescription","color","TodoText","TodoForm","createTodoHandler","htmlFor","TitleLabel","TitleInput","Textarea","CreateButton","get","labelsResponse","labelService","getAll","Label","isSelected","changeLabelHandler","text","change","checkedElement","faCheck","LabelText","TodoLabels","labels","labelsCopy","slice","selectedLabel","labelCopy","labelsService","TodoContainer","labelText","createTodoResponse","todoResponse","createdTodo","showCreateForm","changeTodoLabelHandler","toggleCreateFormVisibility","updateCurrentMood","selectedMood","target","currentMood","todosCopy","todoIndex","findIndex","splice","match","params","rawMoodResponse","moodResponse","moodText","createForm","Form","element","noTodosElement","NoTodos","CurrentDate","MoodContainer","MoodText","onChange","moodSelect","MoodSelect","TodoSection","TodoSectionText","faPlusCircle","Add","Todos","DayBox","showPopup","hoverHandler","hoverLeaveHandler","popup","WeekRow","dayBoxes","dayMoods","dayMood","key","MonthBox","currentDateMood","undefined","weekRows","counter","week","MonthRow","monthBoxes","Overview","currentYear","App","authenticate","sessionStorage","requireAuthentication","requireAnonymous","path","exact","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4369f7e9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Box\":\"CalendarBox_Box__1ED4f\",\"Current\":\"CalendarBox_Current__yueFT\",\"FirstRow\":\"CalendarBox_FirstRow__W-j9j\",\"SecondRow\":\"CalendarBox_SecondRow__-mX90\",\"LeftBox\":\"CalendarBox_LeftBox__3cclX\",\"RightBox\":\"CalendarBox_RightBox__3ltx7\",\"ColorBox\":\"CalendarBox_ColorBox__29Yol\",\"Number\":\"CalendarBox_Number__3nKFd\",\"Active\":\"CalendarBox_Active__3RoRU\",\"PopoverBox\":\"CalendarBox_PopoverBox__268Of\",\"Excellent\":\"CalendarBox_Excellent__ZHLVq\",\"Good\":\"CalendarBox_Good__1vH9E\",\"Average\":\"CalendarBox_Average__3vevP\",\"Bad\":\"CalendarBox_Bad__3WIZq\",\"Miserable\":\"CalendarBox_Miserable__2zP-X\",\"Popover\":\"CalendarBox_Popover__3uMHp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navigation\":\"Navigation_Navigation__1Vx2F\",\"Logo\":\"Navigation_Logo__3Eu3z\",\"NavigationButton\":\"Navigation_NavigationButton__12GEc\",\"Burger\":\"Navigation_Burger__29LEy\",\"Slice\":\"Navigation_Slice__2Dnj5\",\"MobileButtons\":\"Navigation_MobileButtons__2D0E8\",\"MobileLink\":\"Navigation_MobileLink__3Rr1p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Todo\":\"Todo_Todo__3LhXE\",\"TodoText\":\"Todo_TodoText__22hl_\",\"Icon\":\"Todo_Icon__3TMrt\",\"TodoDescription\":\"Todo_TodoDescription__2Uhnl\",\"EditInput\":\"Todo_EditInput__G8AHs\",\"DescriptionTextArea\":\"Todo_DescriptionTextArea__3zKDl\",\"EditButtonsContainer\":\"Todo_EditButtonsContainer__2gA2h\",\"EditButton\":\"Todo_EditButton__1VFwh\",\"SaveChanges\":\"Todo_SaveChanges__34s_T\",\"Cancel\":\"Todo_Cancel__w8dth\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TodoContainer\":\"TodoContainer_TodoContainer__3xrV0\",\"CurrentDate\":\"TodoContainer_CurrentDate__1TW6R\",\"MoodContainer\":\"TodoContainer_MoodContainer__2TApF\",\"MoodSelect\":\"TodoContainer_MoodSelect__3D3iD\",\"MoodText\":\"TodoContainer_MoodText__1IoWT\",\"TodoSection\":\"TodoContainer_TodoSection__1-F2X\",\"TodoSectionText\":\"TodoContainer_TodoSectionText__FImEJ\",\"Add\":\"TodoContainer_Add__3DI_n\",\"Form\":\"TodoContainer_Form__3MBQY\",\"NoTodos\":\"TodoContainer_NoTodos__j-5_6\",\"Todos\":\"TodoContainer_Todos__2-biz\",\"Excellent\":\"TodoContainer_Excellent__1KVxE\",\"Good\":\"TodoContainer_Good__QvE5l\",\"Average\":\"TodoContainer_Average__2kNV6\",\"Bad\":\"TodoContainer_Bad__FvaR8\",\"Miserable\":\"TodoContainer_Miserable__2oO2g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TodoForm\":\"TodoForm_TodoForm__3C5Q3\",\"TitleInput\":\"TodoForm_TitleInput__MeHx8\",\"Textarea\":\"TodoForm_Textarea__veZm4\",\"CreateButton\":\"TodoForm_CreateButton__3gqr3\",\"TitleLabel\":\"TodoForm_TitleLabel__LSMj_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DateContainer\":\"DateChanger_DateContainer__tYqO2\",\"Button\":\"DateChanger_Button__2XsG0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"Label_Label__24Mwg\",\"LabelText\":\"Label_LabelText__3s5R5\",\"Icon\":\"Label_Icon__2voTx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LoginContainer\":\"Login_LoginContainer__2XBSw\",\"Slogan\":\"Login_Slogan__1-Ycq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RegisterContainer\":\"Register_RegisterContainer__6PBdG\",\"Slogan\":\"Register_Slogan__2dRki\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DayBox\":\"DayBox_DayBox__3H4-k\",\"Popover\":\"DayBox_Popover__tJP0z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__20KFu\",\"load6\":\"Spinner_load6__1yPFY\",\"round\":\"Spinner_round__aTn4h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Calendar\":\"Calendar_Calendar__2_V_5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideBar\":\"SideBar_SideBar__t1vIZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Row\":\"CalendarRow_Row__1J3Va\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TodoRow\":\"CalendarTodo_TodoRow__1e8U0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TodoLabels\":\"TodoLabels_TodoLabels__2Ms7t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MonthRow\":\"MonthRow_MonthRow__zIp01\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MonthBox\":\"MonthBox_MonthBox__3lkh8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"WeekRow\":\"WeekRow_WeekRow__p0GTj\"};","import axios from 'axios';\r\n\r\n// * production\r\naxios.defaults.baseURL = 'https://reactive-calendar.glitch.me';\r\n\r\n// * development\r\n//axios.defaults.baseURL = 'http://localhost:5000';\r\n\r\nexport default axios;","import axios from '../axios.js';\r\n\r\nasync function register(data) {\r\n    // send post request with data to the back-end api\r\n    // if the response is successfull then the authentication token\r\n    // is saved to the localStorage\r\n\r\n    const response = await axios.post('/users/register', data);\r\n    const result = response.data.response;\r\n    if(result.successfull) {\r\n        const authToken = result.data.authToken;\r\n        persistUserData(authToken);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nasync function login(data) {\r\n    // send post request with data to the back-end api\r\n    // if the response is successfull then the authentication token\r\n    // is saved to the localStorage\r\n\r\n    const response = await axios.post('/users/login', data);\r\n    const result = response.data.response;\r\n    if(result.successfull) {\r\n        const authToken = result.data.authToken;\r\n        persistUserData(authToken);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction persistUserData(authToken) {\r\n    // save authentication token to the localStorage\r\n    localStorage.setItem('authToken', authToken);\r\n}\r\n\r\nfunction logout() {\r\n    // remove the authentication token from the localStorage\r\n    localStorage.removeItem('authToken');\r\n}\r\n\r\nfunction isUserAuthenticated() {\r\n    // check if the localStorage contains authentication token\r\n    const authToken = localStorage.getItem('authToken');\r\n    return authToken !== null;\r\n}\r\n\r\nconst authService = {\r\n    isUserAuthenticated,\r\n    register,\r\n    login,\r\n    logout\r\n};\r\n\r\nexport default authService;","import React, { Component } from 'react';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport authService from '../../services/authService.js';\r\n\r\nimport classes from './Navigation.module.css';\r\n\r\nclass Navigation extends Component {\r\n    state = {\r\n        showMobile: false\r\n    }\r\n\r\n    redirect = (page) => {\r\n        this.props.redirect(this.props.history, page);\r\n    }\r\n\r\n    logout = () => {\r\n        this.setState({ showMobile: false });\r\n        authService.logout();\r\n        this.props.redirect(this.props.history, '/Login', false);\r\n    }\r\n\r\n    toggleMobileButtons = () => {\r\n        this.setState({ showMobile: !this.state.showMobile });\r\n    }\r\n\r\n    render() {\r\n        let mobileButtons = null;\r\n        if (this.props.isAuthenticated) {\r\n            mobileButtons = (\r\n                <span>\r\n                    <div onClick={() => this.redirect('/Calendar')} className={classes.MobileLink}>Calendar</div>\r\n                    <div onClick={() => this.redirect('/Overview')} className={classes.MobileLink}>Overview</div>\r\n                    <div onClick={this.logout} className={classes.MobileLink}>Logout</div>\r\n                </span>\r\n            );\r\n        } else {\r\n            mobileButtons = (\r\n                <span>\r\n                    <div onClick={() => this.redirect('/Login')} className={classes.MobileLink}>Login</div>\r\n                    <div onClick={() => this.redirect('/Register')} className={classes.MobileLink}>Register</div>\r\n                </span>\r\n            );\r\n        }\r\n\r\n        let buttons = null;\r\n        if (this.props.isAuthenticated) {\r\n            buttons = (\r\n                <span>\r\n                    <button onClick={this.logout} className={classes.NavigationButton}>Logout</button>\r\n                    <button onClick={() => this.redirect('/Overview')} className={classes.NavigationButton}>Overview</button>\r\n                    <button onClick={() => this.redirect('/Calendar')} className={classes.NavigationButton}>Calendar</button>\r\n                </span>\r\n            );\r\n        } else {\r\n            buttons = (\r\n                <span>\r\n                    <NavLink to='/Register' className={classes.NavigationButton}>Register</NavLink>\r\n                    <NavLink to='/Login' className={classes.NavigationButton}>Login</NavLink>\r\n                </span>\r\n            );\r\n        }\r\n\r\n        const mobileButtonsStyle = {\r\n            display: this.state.showMobile ? 'block' : 'none'\r\n        };\r\n\r\n        return (\r\n            <nav className={classes.Navigation}>\r\n                <span onClick={() => this.redirect('/')} to='/' className={classes.Logo}>Reactive Calendar</span>\r\n                {buttons}\r\n\r\n                <div onClick={this.toggleMobileButtons} className={classes.Burger}>\r\n                    <div className={classes.Slice}></div>\r\n                    <div className={classes.Slice}></div>\r\n                    <div className={classes.Slice}></div>\r\n                </div>\r\n\r\n                <div style={mobileButtonsStyle} className={classes.MobileButtons}>\r\n                    {mobileButtons}\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Navigation);","import React from 'react';\r\n\r\nconst Alert = (props) => {\r\n    return (\r\n        <div className={`alert alert-${props.alert}`} role=\"alert\">\r\n            {props.message}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Alert;","import React from 'react';\r\nimport classes from './Spinner.module.css';\r\n\r\nconst Spinner = () => <div className={classes.Loader}>Loading...</div>;\r\n\r\nexport default Spinner;","import React, { Component } from 'react';\r\nimport authService from '../../services/authService.js';\r\nimport classes from './Login.module.css';\r\n\r\nimport Alert from '../Alert/Alert';\r\nimport Spinner from '../Spinner/Spinner';\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isLoading: false,\r\n            errorMessages: []\r\n        };\r\n\r\n        this.emailInput = React.createRef(null);\r\n        this.passwordInput = React.createRef(null);\r\n    }\r\n\r\n    login = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const email = this.emailInput.current.value.trim();\r\n        const password = this.passwordInput.current.value.trim();\r\n\r\n        // * validations\r\n        if(!email || email.length < 5) {\r\n            alert('Email is required!');\r\n            return;\r\n        }\r\n\r\n        if(!password || password.length < 6) {\r\n            alert('Password must be at least 6 symbols!');\r\n            return;\r\n        }\r\n\r\n        this.setState({ isLoading: true });\r\n\r\n        const result = await authService.login({ email, password });\r\n\r\n        if (result.successfull) {\r\n            this.setState({ isLoading: false });\r\n            this.props.redirect(this.props.history, '/Calendar', true);\r\n        } else {\r\n            this.setState({\r\n                errorMessages: [...result.errorMessages],\r\n                isLoading: false\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const spinner = this.state.isLoading ? <Spinner /> : null;\r\n\r\n        const alerts = [];\r\n        this.state.errorMessages.map((message, index) =>\r\n            alerts.push(<Alert alert='danger' message={message} key={index} />));\r\n\r\n        return (\r\n            <div className={classes.LoginContainer}>\r\n                {spinner}\r\n                <p className={classes.Slogan}>Log in to your reactive account</p>\r\n                <form>\r\n                    {alerts}\r\n                    <div className=\"form-group\">\r\n                        <label>Email address</label>\r\n                        <input type=\"email\" className=\"form-control\" placeholder=\"Enter your email\" ref={this.emailInput} />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Password</label>\r\n                        <input type=\"password\" className=\"form-control\" placeholder=\"Enter your password\" ref={this.passwordInput} />\r\n                    </div>\r\n\r\n                    <button onClick={this.login} className=\"btn btn-primary w-100\">Log in</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport authService from '../../services/authService.js';\r\nimport classes from './Register.module.css';\r\n\r\nimport Alert from '../Alert/Alert';\r\nimport Spinner from '../Spinner/Spinner';\r\n\r\nclass Register extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isLoading: false,\r\n            errorMessages: []\r\n        };\r\n\r\n        this.emailInput = React.createRef(null);\r\n        this.usernameInput = React.createRef(null);\r\n        this.passwordInput = React.createRef(null);\r\n        this.repeatPasswordInput = React.createRef(null);\r\n    }\r\n\r\n    register = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const email = this.emailInput.current.value.trim();\r\n        const username = this.usernameInput.current.value.trim();\r\n        const password = this.passwordInput.current.value.trim();\r\n        const repeatPassword = this.repeatPasswordInput.current.value.trim();\r\n\r\n        // * validations\r\n        if (!email || email.length < 5) {\r\n            alert('Email is required!');\r\n            return;\r\n        }\r\n\r\n        if (!username || username.length < 5) {\r\n            alert('Username must be at least 5 symbols long!');\r\n            return;\r\n        }\r\n\r\n        if (!password || password.length < 6) {\r\n            alert('Password must be at least 6 symbols long!');\r\n            return;\r\n        }\r\n\r\n        if (password !== repeatPassword) {\r\n            alert('Passwords does not match!');\r\n            return;\r\n        }\r\n\r\n        this.setState({ isLoading: true });\r\n\r\n        const result = await authService.register({\r\n            email,\r\n            username,\r\n            password\r\n        });\r\n\r\n        if(result.successfull) {\r\n            this.setState({ isLoading: false });\r\n            this.props.redirect(this.props.history, '/Calendar', true);\r\n        } else {\r\n            this.setState({\r\n                isLoading: false,\r\n                errorMessages: [...result.errorMessages]\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const spinner = this.state.isLoading ? <Spinner /> : null;\r\n\r\n        const alerts = [];\r\n        this.state.errorMessages.map((message, index) =>\r\n            alerts.push(<Alert alert='danger' message={message} key={index} />));\r\n\r\n        return (\r\n            <div className={classes.RegisterContainer}>\r\n                {spinner}\r\n                <p className={classes.Slogan}>Register your reactive account</p>\r\n                <form>\r\n                    {alerts}\r\n                    <div className=\"form-group\">\r\n                        <label>Email address</label>\r\n                        <input type=\"email\" className=\"form-control\" placeholder=\"Enter your email\" ref={this.emailInput} />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Username</label>\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter your username\" ref={this.usernameInput} />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Password</label>\r\n                        <input type=\"password\" className=\"form-control\" placeholder=\"Enter your password\" ref={this.passwordInput} />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Repeat password</label>\r\n                        <input type=\"password\" className=\"form-control\" placeholder=\"Repeat your password\" ref={this.repeatPasswordInput} />\r\n                    </div>\r\n\r\n                    <button onClick={this.register} className=\"btn btn-primary w-100\">Register</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;","const dayjs = require('dayjs');\r\nconst weekday = require(\"dayjs/plugin/weekday\");\r\nconst weekOfYear = require(\"dayjs/plugin/weekOfYear\");\r\n\r\ndayjs.extend(weekday);\r\ndayjs.extend(weekOfYear);\r\n\r\nfunction getCalendarDays(year, month) {\r\n    // get the current month days\r\n    // previous month last days and next month start days\r\n\r\n    const result = {\r\n        year,\r\n        month,\r\n        current: {}\r\n    }\r\n\r\n    // get the total days in the current month\r\n    const currentDate = dayjs(`${year}/${month}/01`);\r\n    let totalDays = currentDate.daysInMonth();\r\n\r\n    result.current = {\r\n        start: currentDate.day(),\r\n        max: currentDate.daysInMonth(),\r\n        active: dayjs().date()\r\n    }\r\n\r\n    if (result.current.start === 0) {\r\n        // if the start day is sunday\r\n        // change the number, so the calendar works correctly\r\n        result.current.start = 7;\r\n    }\r\n\r\n    if (result.current.start !== 1) {\r\n        // check if the current month does not start in monday\r\n        // calculate how many days should the function take from\r\n        // the previous month\r\n        // * example (current month starts in Wednesday)\r\n        // * then the function takes the last two days from \r\n        // * the previous day\r\n\r\n        // take the total days in the previous month\r\n        const prevDate = dayjs(`${year}/${month - 1}/01`);\r\n        const prevMonthDays = prevDate.daysInMonth();\r\n        // calculate the difference\r\n        const previousDifference = prevMonthDays - (result.current.start - 2);\r\n        totalDays += (prevMonthDays - previousDifference) + 1;\r\n\r\n        result.previous = {\r\n            from: previousDifference,\r\n            to: prevDate.daysInMonth()\r\n        }\r\n    }\r\n\r\n    if (totalDays < 42) {\r\n        // check if the total days to this moment (current month days + previous month days) is less than 42\r\n        // ? 42 => (the calendar has 6 rows with 7 days)\r\n        // calculate how many days should be taken from next month\r\n        result.next = {\r\n            to: 42 - totalDays\r\n        }\r\n    }\r\n\r\n    // ? example of the current result\r\n    /* \r\n        result = {\r\n            current: {\r\n                start: 4, // ? (number between 1 and 7 (1-Mon, 7-Sun))\r\n                max: 30, // ? max days the current month has\r\n                active: 5 // ? the current date\r\n            },\r\n            previous: {\r\n                from: 29, // ? start date from previous month\r\n                to: 31 // ? end date from previous month\r\n            },\r\n            next: {\r\n                to: 9 // ? end date of next month\r\n            },\r\n            month: 4, // ? current month\r\n            year: 2021 // ? current year\r\n        }\r\n    */\r\n\r\n    // return the result object transformed to dates array\r\n    return transformToArray(result);\r\n}\r\n\r\nfunction transformToArray(dateObject) {\r\n    // transforms dateObject to dates array\r\n    const days = [];\r\n\r\n    // get the current year and month and convert them to numbers\r\n    let { year, month } = dateObject;\r\n    year = Number(year);\r\n    month = Number(month);\r\n\r\n    // * generate objects if there are previous month days\r\n    if (dateObject.previous) {\r\n        let previousYear, previousMonth;\r\n\r\n        // get the previous month and year\r\n        if (month === 1) {\r\n            previousMonth = 12;\r\n            previousYear = year - 1;\r\n        } else {\r\n            previousMonth = month - 1;\r\n            if (previousMonth < 10) {\r\n                previousMonth = `0${previousMonth}`;\r\n            }\r\n            previousYear = year;\r\n        }\r\n\r\n        // generate the previous month dates\r\n        for (let i = dateObject.previous.from; i <= dateObject.previous.to; i++) {\r\n            days.push({\r\n                date: parseInt(`${previousYear}${previousMonth}${i}`),\r\n                currentMonth: false,\r\n                isActive: false,\r\n                day: i,\r\n                todos: []\r\n            });\r\n        }\r\n    }\r\n\r\n    // * generate current month days\r\n    let currentMonth = month;\r\n    if (currentMonth < 10) {\r\n        currentMonth = `0${month}`;\r\n    }\r\n\r\n    for (let i = 1; i <= dateObject.current.max; i++) {\r\n        // generate current month dates\r\n\r\n        let currentDate = i;\r\n        if (currentDate < 10) {\r\n            currentDate = `0${currentDate}`;\r\n        }\r\n\r\n        const currentDateObject = {\r\n            date: parseInt(`${year}${currentMonth}${currentDate}`),\r\n            currentMonth: true,\r\n            isActive: false,\r\n            day: i,\r\n            todos: []\r\n        };\r\n\r\n        // set the active flag to the current date\r\n        if (i === dateObject.current.active) {\r\n            currentDateObject.isActive = true;\r\n        }\r\n\r\n        days.push(currentDateObject);\r\n    }\r\n\r\n    // * generate objects if there are next month days\r\n    if (dateObject.next) {\r\n        // generate next month dates\r\n\r\n        // calculate next month and year\r\n        let nextYear, nextMonth;\r\n        if (month === 12) {\r\n            nextMonth = 1;\r\n            nextYear = year + 1;\r\n        } else {\r\n            nextMonth = month + 1;\r\n            nextYear = year;\r\n        }\r\n\r\n        if (nextMonth < 10) {\r\n            nextMonth = `0${nextMonth}`;\r\n        }\r\n\r\n        for (let i = 1; i <= dateObject.next.to; i++) {\r\n            // generate next month dates\r\n            const currentDate = i < 10 ? `0${i}` : i;\r\n            const currentDateObject = {\r\n                date: parseInt(`${nextYear}${nextMonth}${currentDate}`),\r\n                currentMonth: false,\r\n                isActive: false,\r\n                day: i,\r\n                todos: []\r\n            };\r\n\r\n            days.push(currentDateObject);\r\n        }\r\n    }\r\n\r\n    return days;\r\n}\r\n\r\nfunction getCurrentDate() {\r\n    const year = Number(dayjs().format('YYYY'));\r\n    const month = Number(dayjs().format('M'));\r\n    const day = Number(dayjs().format('D'));\r\n\r\n    return {\r\n        year,\r\n        month,\r\n        day\r\n    }\r\n}\r\n\r\nfunction getMonthRange(year, month) {\r\n    const monthDays = getCalendarDays(year, month);\r\n\r\n    return {\r\n        from: monthDays[0].date,\r\n        to: monthDays[monthDays.length - 1].date\r\n    };\r\n}\r\n\r\nfunction getCurrentYear() {\r\n    return dayjs().format('YYYY');\r\n}\r\n\r\nfunction getMonthData(year, month) {\r\n    const currentDate = dayjs(`${year}/${month}/01`);\r\n    let totalDays = currentDate.daysInMonth();\r\n    let convertedMonth = month < 10 ? `0${month}` : month;\r\n\r\n    const from = parseInt(`${year}${convertedMonth}0${1}`);\r\n    const to = parseInt(`${year}${convertedMonth}${totalDays}`);\r\n\r\n    return {\r\n        from,\r\n        to\r\n    };\r\n}\r\n\r\nfunction convertFromNumber(date) {\r\n    // get date as number (20210405) and returns '2021/04/05'\r\n\r\n    const stringDate = date.toString();\r\n    const year = stringDate.substr(0, 4);\r\n    const month = stringDate.substr(4, 2);\r\n    const day = stringDate.substr(6, 2);\r\n\r\n    return `${year}/${month}/${day}`;\r\n}\r\n\r\nconst calendarService = {\r\n    convertFromNumber,\r\n    getCalendarDays,\r\n    getCurrentDate,\r\n    getCurrentYear,\r\n    getMonthRange,\r\n    getMonthData\r\n};\r\n\r\nexport default calendarService;","import axios from '../axios.js';\r\n\r\nasync function getForDay(date) {\r\n    const requestData = buildRequestData({ date });\r\n    const response = await axios.post('/mood/getForDay', requestData);\r\n    return response;\r\n}\r\n\r\nasync function updateMood(date, mood) {\r\n    const requestData = buildRequestData({ date, mood });\r\n    const response = await axios.post('/mood/update', requestData);\r\n    return response;\r\n}\r\n\r\nasync function getForRange(startDate, endDate) {\r\n    const requestData = buildRequestData({ startDate, endDate });\r\n    const response = await axios.post('/mood/getForRange', requestData);\r\n    return response;\r\n}\r\n\r\nfunction buildRequestData(data) {\r\n    const authToken = localStorage.getItem('authToken');\r\n    data.authToken = authToken;\r\n    return data;\r\n}\r\n\r\nfunction getMoodColor(mood) {\r\n    switch(mood) {\r\n        case 'Excellent': return '#008000';\r\n        case 'Good': return '#38b000';\r\n        case 'Average': return '#ccff33';\r\n        case 'Bad': return '#f79d65';\r\n        case 'Miserable': return '#f27059';\r\n        default: return 'white';\r\n    }\r\n}\r\n\r\nconst moodService = {\r\n    getForDay,\r\n    updateMood,\r\n    getForRange,\r\n    getMoodColor\r\n};\r\n\r\nexport default moodService;","import axios from '../axios.js';\r\n\r\nasync function getDailyTodos(date) {\r\n    // get todos for a date\r\n    // send authentication token and current date\r\n    const requestData = buildRequestData({ date });\r\n    const response = await axios.post('/todo/daily', requestData);\r\n    \r\n    const todosResponse = response.data.response;\r\n    return todosResponse;\r\n}\r\n\r\nasync function getTodosForDates(startDate, endDate) {\r\n    // get todos for range of two dates\r\n    const data = {\r\n        startDate,\r\n        endDate\r\n    };\r\n    const requestData = buildRequestData(data);\r\n    // send authentication token, startDate and endDate\r\n    \r\n    const response = await axios.post('/todo/getForDateRange',requestData);\r\n    const todosResponse = response.data.response;\r\n    return todosResponse;\r\n}\r\n\r\nasync function create(data) {\r\n    const requestData = buildRequestData(data);\r\n    const response = await axios.post('/todo/create', requestData);\r\n    return response;\r\n}\r\n\r\nasync function changeTodoCheckedState(todoId, newCheckState) {\r\n    const requestData = buildRequestData({ todoId, newCheckState });\r\n    const response = await axios.post('/todo/updateCheck', requestData);\r\n    return response;\r\n}\r\n\r\nasync function deleteTodo(todoId) {\r\n    const requestData = buildRequestData({ todoId });\r\n    const response = await axios.post('/todo/delete', requestData);\r\n    return response;\r\n}\r\n\r\nasync function updateTodo(todoId, title, description) {\r\n    const requestData = buildRequestData({ todoId, title, description });\r\n    const response = await axios.post('/todo/update', requestData);\r\n    return response;\r\n}\r\n\r\nfunction buildRequestData(data) {\r\n    const authToken = localStorage.getItem('authToken');\r\n    data.authToken = authToken;\r\n    return data;\r\n}\r\n\r\nconst todoService = {\r\n    changeTodoCheckedState,\r\n    getTodosForDates,\r\n    getDailyTodos,\r\n    deleteTodo,\r\n    updateTodo,\r\n    create\r\n};\r\n\r\nexport default todoService;","import React, { Component } from \"react\";\r\nimport classes from \"./DateChanger.module.css\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faAngleLeft, faAngleRight } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass DateChanger extends Component {\r\n  render() {\r\n    return (\r\n      <div className={classes.DateContainer}>\r\n        <span>{this.props.dateLabel}: </span>\r\n        <FontAwesomeIcon\r\n          icon={faAngleLeft}\r\n          className={classes.Button}\r\n          onClick={() => this.props.updateDate(-1)}\r\n        />\r\n        <span>{this.props.dateValue}</span>\r\n        <FontAwesomeIcon\r\n          icon={faAngleRight}\r\n          className={classes.Button}\r\n          onClick={() => this.props.updateDate(1)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DateChanger;\r\n","import React, { Component } from 'react';\r\nimport classes from './SideBar.module.css';\r\n\r\nimport DateChanger from '../../DateChanger/DateChanger';\r\n\r\nclass SideBar extends Component {\r\n    state = {\r\n        year: this.props.date.year,\r\n        month: this.props.date.month\r\n    }\r\n\r\n    updateYear = (value) => {\r\n        const year = this.state.year + value;\r\n        this.setState({ year });\r\n\r\n        this.props.updateDate(year, this.state.month);\r\n    }\r\n\r\n    updateMonth = (value) => {\r\n        let month = this.state.month + value;\r\n        let year = this.state.year;\r\n\r\n        if(month === 0) {\r\n            month = 12;\r\n            year--;\r\n        } else if(month === 13) {\r\n            month = 1;\r\n            year++;\r\n        }\r\n\r\n        this.setState({ year, month });\r\n        this.props.updateDate(year, month);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.SideBar}>\r\n                <DateChanger dateLabel='Year' dateValue={this.state.year} updateDate={this.updateYear} />\r\n                <DateChanger dateLabel='Month' dateValue={this.state.month} updateDate={this.updateMonth} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SideBar;","import React, { Component } from 'react';\r\nimport classes from './CalendarTodo.module.css';\r\n\r\nclass CalendarTodo extends Component {\r\n    render() {\r\n        const style = {\r\n            backgroundColor: this.props.backgroundColor\r\n        };\r\n\r\n        return (\r\n            <div style={style} className={classes.TodoRow}></div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CalendarTodo;","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport classes from './CalendarBox.module.css';\r\n\r\nimport moodService from '../../../../services/moodService.js';\r\n\r\nimport CalendarTodo from './CalendarTodo/CalendarTodo';\r\n\r\nclass CalendarBox extends Component {\r\n    state = {\r\n        showPopover: false,\r\n        moodColor: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        const moodColor = this.props.dateObject.moodColor || '#ebedf0';\r\n        this.setState({ moodColor: moodColor });\r\n    }\r\n\r\n    redirect = () => {\r\n        const date = this.props.dateObject.date;\r\n        this.props.redirect(this.props.history, `/Todo/${date}`);\r\n    }\r\n\r\n    showPopoverHandler = () => {\r\n        this.setState({ showPopover: true });\r\n    }\r\n\r\n    hidePopoverHandler = () => {\r\n        this.setState({ showPopover: false });\r\n    }\r\n\r\n    updateMoodHanlder = async (event, mood) => {\r\n        event.stopPropagation();\r\n        const newMoodColor = moodService.getMoodColor(mood);\r\n        this.setState({ moodColor: newMoodColor });\r\n        const date = this.props.dateObject.date;\r\n        moodService.updateMood(date, mood);\r\n    }\r\n\r\n    render() {\r\n        const todos = [];\r\n        if (this.props.dateObject.todos.length > 0) {\r\n            this.props.dateObject.todos.forEach((todo, index) => {\r\n                todos.push(<CalendarTodo backgroundColor={todo.label.backgroundColor} key={index} />)\r\n            });\r\n        }\r\n\r\n        const date = this.props.dateObject;\r\n        let boxClass = date.currentMonth ? classes.Current : classes.Box;\r\n        let numberClass = date.isActive ? classes.Active : classes.Number;\r\n\r\n        let popover = null;\r\n        if (this.state.showPopover) {\r\n            popover = (\r\n                <div className={classes.Popover}>\r\n                    <div onClick={(event) => this.updateMoodHanlder(event, 'Miserable')} className={`${classes.PopoverBox} ${classes.Miserable}`}></div>\r\n                    <div onClick={(event) => this.updateMoodHanlder(event, 'Bad')} className={`${classes.PopoverBox} ${classes.Bad}`}></div>\r\n                    <div onClick={(event) => this.updateMoodHanlder(event, 'Average')} className={`${classes.PopoverBox} ${classes.Average}`}></div>\r\n                    <div onClick={(event) => this.updateMoodHanlder(event, 'Good')} className={`${classes.PopoverBox} ${classes.Good}`}></div>\r\n                    <div onClick={(event) => this.updateMoodHanlder(event, 'Excellent')} className={`${classes.PopoverBox} ${classes.Excellent}`}></div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <td className={boxClass} onClick={this.redirect}>\r\n                <span className={classes.FirstRow}>\r\n                    <div className={classes.LeftBox}>\r\n                        <div onMouseLeave={this.hidePopoverHandler} onMouseOver={this.showPopoverHandler} style={{ backgroundColor: this.state.moodColor }} className={classes.ColorBox}>\r\n                            {popover}\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.RightBox}>\r\n                        <p className={numberClass}>{date.day}</p>\r\n                    </div>\r\n                </span>\r\n                <span className={classes.SecondRow}>\r\n                    {todos}\r\n                </span>\r\n            </td>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(CalendarBox);","import React, { Component } from 'react';\r\nimport classes from './CalendarRow.module.css';\r\n\r\nimport CalendarBox from './CalendarBox/CalendarBox';\r\n\r\nclass CalendarRow extends Component {\r\n    render() {\r\n        const boxArray = [];\r\n        if(this.props.days.length > 0) {\r\n            for(let i = 0; i < this.props.days.length; i++) {\r\n                const date = this.props.days[i];\r\n                boxArray.push(<CalendarBox redirect={this.props.redirect} key={i} dateObject={date} />);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <tr className={classes.Row}>\r\n                {boxArray}\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CalendarRow;","import React, { Component } from \"react\";\r\nimport classes from \"./Calendar.module.css\";\r\nimport calendarService from \"../../services/calendarService.js\";\r\nimport moodService from \"../../services/moodService.js\";\r\nimport todoService from \"../../services/todoService.js\";\r\n\r\nimport SideBar from \"./SideBar/SideBar\";\r\nimport CalendarRow from \"./CalendarRow/CalendarRow\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\nimport Alert from \"../Alert/Alert\";\r\n\r\nclass Calendar extends Component {\r\n\tstate = {\r\n\t\tisLoading: false,\r\n\t\terrorMessages: [],\r\n\t\tdays: [],\r\n\t\tdate: {},\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\t// * get current date\r\n\t\t// * get days for the calendar\r\n\t\t// * get todos for the days\r\n\r\n\t\tconst currentDate = calendarService.getCurrentDate();\r\n\t\tthis.setState({ date: currentDate }, async () => {\r\n\t\t\tawait this.updateCalendar();\r\n\t\t});\t\r\n\t}\r\n\r\n\tupdateCalendar = async () => {\r\n\t\tthis.setState({ isLoading: true });\r\n\t\tconst { year, month } = this.state.date;\r\n\r\n\t\tconst currentDays = calendarService.getCalendarDays(year, month);\r\n\r\n\t\tconst startDate = currentDays[0].date;\r\n\t\tconst endDate = currentDays[currentDays.length - 1].date;\r\n\t\t\r\n\t\tconst todosResponse = await todoService.getTodosForDates(\r\n\t\t\tstartDate,\r\n\t\t\tendDate\r\n\t\t);\r\n\t\tif (!todosResponse.successfull) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tisLoading: false,\r\n\t\t\t\terrorMessages: [...todosResponse.errorMessages],\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst dateTodos = todosResponse.data.todos;\r\n\t\tdateTodos.forEach((todo) => {\r\n\t\t\tconst day = currentDays.find((day) => day.date === todo.date);\r\n\t\t\t\r\n\t\t\tif (day.todos.length < 3) {\r\n\t\t\t\tday.todos.push(todo);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// update moods\r\n\t\tconst rawDayMoodsResponse = await moodService.getForRange(\r\n\t\t\tstartDate,\r\n\t\t\tendDate\r\n\t\t);\r\n\t\tconst dayMoodsResponse = rawDayMoodsResponse.data.response;\r\n\t\tconst dayMoods = dayMoodsResponse.data.dateMoods;\r\n\t\tdayMoods.forEach((dateMood) => {\r\n\t\t\tconst date = currentDays.find((day) => day.date === dateMood.date);\r\n\t\t\tdate.moodColor = moodService.getMoodColor(dateMood.mood);\r\n\t\t});\r\n\r\n\t\tthis.setState({\r\n\t\t\tisLoading: false,\r\n\t\t\tdays: [...currentDays]\r\n\t\t});\r\n\t}\r\n\r\n\tasync componentDidUpdate(prevProps, prevState) {\r\n\t\tconst prevDate = prevState.date;\r\n\r\n\t\tif(prevDate.year !== this.state.date.year || prevDate.month !== this.state.date.month) {\r\n\t\t\tawait this.updateCalendar();\r\n\t\t}\r\n\t}\r\n\r\n\tupdateDate = (year, month) => {\r\n\t\tconst { day } = this.state.date;\r\n\r\n\t\tthis.setState({\r\n\t\t\tdate: {\r\n\t\t\t\tyear,\r\n\t\t\t\tmonth,\r\n\t\t\t\tday\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\trender() {\r\n\t\tif (this.state.errorMessages.length > 0) {\r\n\t\t\tconst alerts = this.state.errorMessages.map((message, index) => {\r\n\t\t\t\treturn <Alert alert=\"danger\" message={message} key={index} />;\r\n\t\t\t});\r\n\r\n\t\t\treturn alerts;\r\n\t\t}\r\n\r\n\t\tif (this.state.isLoading) {\r\n\t\t\treturn <Spinner />;\r\n\t\t}\r\n\r\n\t\t// display days\r\n\t\tconst calendarRows = [];\r\n\t\tif (this.state.days.length !== 0) {\r\n\t\t\tlet next = 0;\r\n\t\t\tfor (let i = 0; i < 6; i++) {\r\n\t\t\t\tconst currentRowDays = [];\r\n\t\t\t\tfor (let j = 0; j < 7; j++) {\r\n\t\t\t\t\tcurrentRowDays.push(this.state.days[next++]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcalendarRows.push(\r\n\t\t\t\t\t<CalendarRow\r\n\t\t\t\t\t\tredirect={this.props.redirect}\r\n\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\tdays={currentRowDays}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst sideBarDateObject = {\r\n\t\t\tyear: this.state.date.year || 0,\r\n\t\t\tmonth: this.state.date.month || 0\r\n\t\t};\r\n\t\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<SideBar date={sideBarDateObject} updateDate={this.updateDate} />\r\n\r\n\t\t\t\t<table className={classes.Calendar}>\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<th>Mon</th>\r\n\t\t\t\t\t\t\t<th>Tue</th>\r\n\t\t\t\t\t\t\t<th>Wed</th>\r\n\t\t\t\t\t\t\t<th>Thu</th>\r\n\t\t\t\t\t\t\t<th>Fri</th>\r\n\t\t\t\t\t\t\t<th>Sat</th>\r\n\t\t\t\t\t\t\t<th>Sun</th>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody>{calendarRows}</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Calendar;\r\n","import React, { Component } from 'react';\r\nimport classes from './Todo.module.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheckSquare, faSquare, faTimes, faPen } from '@fortawesome/free-solid-svg-icons';\r\nimport todoService from '../../../services/todoService.js';\r\n\r\nclass Todo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            title: this.props.todo.title,\r\n            description: this.props.todo.description,\r\n            isChecked: this.props.todo.isChecked,\r\n            showDescription: false,\r\n            isEditable: false\r\n        };\r\n\r\n        this.titleInput = React.createRef();\r\n        this.descriptionTextArea = React.createRef();\r\n    }\r\n\r\n    changeCheckedHandler = async (event) => {\r\n        event.stopPropagation();\r\n        const newCheckState = !this.state.isChecked;\r\n        const id = this.props.todo.id;\r\n        this.setState({ isChecked: newCheckState });\r\n        await todoService.changeTodoCheckedState(id, newCheckState);\r\n    }\r\n\r\n    toggleDescriptionHandler = () => {\r\n        this.setState({ showDescription: !this.state.showDescription });\r\n    }\r\n\r\n    editTodoHandler = (event) => {\r\n        event.stopPropagation();\r\n        if(this.state.isEditable) {\r\n            this.setState({ showDescription: false, isEditable: false });\r\n        } else {\r\n            this.setState({ showDescription: true, isEditable: true });\r\n        }\r\n    }\r\n\r\n    saveChangesHandler = () => {\r\n        let title = this.titleInput.current.value;\r\n        let description = this.descriptionTextArea.current.value;\r\n\r\n        // validate title\r\n        if (!title) {\r\n            alert('Title is required!');\r\n            return;\r\n        } else {\r\n            title = title.trim();\r\n            if (title.length < 1) {\r\n                alert('Title is required!');\r\n                return;\r\n            }\r\n        }\r\n\r\n        // validate description\r\n        if (!description) {\r\n            alert('Description is required!');\r\n            return;\r\n        } else {\r\n            description = description.trim();\r\n            if (description.length < 1) {\r\n                alert('Description is required!');\r\n                return;\r\n            }\r\n        }\r\n        \r\n        this.setState({\r\n            title,\r\n            description\r\n        });\r\n\r\n        todoService.updateTodo(this.props.todo.id, title, description);\r\n\r\n        this.setState({ showDescription: false, isEditable: false });\r\n    }\r\n\r\n    cancelHandler = () => {\r\n        this.setState({ showDescription: false, isEditable: false });\r\n    }\r\n\r\n    deleteTodoHandler = (event) => {\r\n        event.stopPropagation();\r\n        this.props.onDelete(this.props.todo.id);\r\n    }\r\n\r\n    render() {\r\n        const nextCheckIcon = this.state.isChecked ? faCheckSquare : faSquare;\r\n\r\n        let descriptionElement = null;\r\n        \r\n\r\n        let todoElement = null;\r\n        if (this.state.isEditable) {\r\n            if (this.state.showDescription) {\r\n                descriptionElement = (\r\n                    <textarea defaultValue={this.state.description} ref={this.descriptionTextArea} className={classes.DescriptionTextArea} rows='5'>\r\n                    </textarea>\r\n                );\r\n            }\r\n\r\n            todoElement = (\r\n                <div>\r\n                    <div style={this.props.todo.label} className={classes.Todo}>\r\n                        <input ref={this.titleInput} className={classes.EditInput} type='text' defaultValue={this.state.title} />\r\n\r\n                        <FontAwesomeIcon onClick={this.deleteTodoHandler} icon={faTimes} className={classes.Icon} />\r\n                        <FontAwesomeIcon onClick={this.editTodoHandler} icon={faPen} className={classes.Icon} />\r\n                        <FontAwesomeIcon onClick={this.changeCheckedHandler} icon={nextCheckIcon} className={classes.Icon} />\r\n                    </div>\r\n                    <div className={classes.EditButtonsContainer}>\r\n                        <button onClick={this.saveChangesHandler} className={`${classes.EditButton} ${classes.SaveChanges}`}>Save changes</button>\r\n                        <button onClick={this.cancelHandler} className={`${classes.EditButton} ${classes.Cancel}`}>Cancel</button>\r\n                    </div>\r\n                    {descriptionElement}\r\n                </div>);\r\n        } else {\r\n            if (this.state.showDescription) {\r\n                descriptionElement = (\r\n                    <div className={classes.TodoDescription}>\r\n                        {this.state.description}\r\n                    </div>\r\n                );\r\n            }\r\n\r\n            todoElement = (\r\n                <div>\r\n                    <div onClick={this.toggleDescriptionHandler} style={this.props.todo.label} className={classes.Todo}>\r\n                        <div style={{ color: this.props.todo.label.color }} className={classes.TodoText}>\r\n                            {this.state.title}\r\n                        </div>\r\n                        <FontAwesomeIcon onClick={this.deleteTodoHandler} icon={faTimes} className={classes.Icon} />\r\n                        <FontAwesomeIcon onClick={this.editTodoHandler} icon={faPen} className={classes.Icon} />\r\n                        <FontAwesomeIcon onClick={this.changeCheckedHandler} icon={nextCheckIcon} className={classes.Icon} />\r\n                    </div>\r\n                    {descriptionElement}\r\n                </div>);\r\n        }\r\n\r\n        return todoElement;\r\n    }\r\n}\r\n\r\nexport default Todo;","import React, { Component } from 'react';\r\nimport classes from './TodoForm.module.css';\r\n\r\nclass TodoForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.titleInput = React.createRef(null);\r\n        this.descriptionTextArea = React.createRef(null);\r\n    }\r\n    \r\n    createTodoHandler = () => {\r\n        const title = this.titleInput.current.value;\r\n        const description = this.descriptionTextArea.current.value;\r\n\r\n        if(!title || !description) {\r\n            alert('Title and description are required!');\r\n            return;\r\n        }\r\n\r\n        this.titleInput.current.value = '';\r\n        this.descriptionTextArea.current.value = '';\r\n\r\n        this.props.create(title, description);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.TodoForm}>\r\n                <label htmlFor='title' className={classes.TitleLabel}>Title</label>\r\n                <input type='text' placeholder='Something very important' id='title' className={classes.TitleInput} ref={this.titleInput} />\r\n                <textarea className={classes.Textarea} placeholder='Describe the very important thing' ref={this.descriptionTextArea}></textarea>\r\n                <button onClick={this.createTodoHandler} className={classes.CreateButton}>Create</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoForm;","import axios from '../axios.js';\r\n\r\nasync function getAll() {\r\n    const response = await axios.get('/labels/all');\r\n    const labelsResponse = response.data.response;\r\n    return labelsResponse;\r\n}\r\n\r\nconst labelService = {\r\n    getAll\r\n};\r\n\r\nexport default labelService;","import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\r\nimport classes from './Label.module.css';\r\n\r\nclass Label extends Component {\r\n    state = {\r\n        isSelected: this.props.isSelected\r\n    }\r\n\r\n    changeLabelHandler = () => {\r\n        const label = {\r\n            backgroundColor: this.props.backgroundColor,\r\n            color: this.props.color,\r\n            text: this.props.text\r\n        };\r\n\r\n        this.props.change(label);\r\n    }\r\n\r\n    render() {\r\n        const style = {\r\n            backgroundColor: this.props.backgroundColor,\r\n            color: this.props.color\r\n        };\r\n\r\n        const checkedElement = this.props.isSelected ? <FontAwesomeIcon icon={faCheck} className={classes.Icon} style={{ color: this.props.color }}/> : null;\r\n\r\n        return (\r\n            <div onClick={this.changeLabelHandler} className={classes.Label}>\r\n                {checkedElement}\r\n                <p style={style} className={classes.LabelText}>{this.props.text}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Label;","import React, { Component } from 'react';\r\nimport labelsService from '../../../services/labelService.js';\r\nimport classes from './TodoLabels.module.css';\r\n\r\nimport Label from './Label/Label';\r\nimport Alert from '../../Alert/Alert';\r\nimport Spinner from '../../Spinner/Spinner';\r\n\r\nclass TodoLabels extends Component {\r\n    state = {\r\n        isLoading: true,\r\n        errorMessages: [],\r\n        labels: []\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.setState({ isLoading: true });\r\n        const labelsResponse = await labelsService.getAll();\r\n\r\n        if(!labelsResponse.successfull) {\r\n            this.setState({\r\n                isLoading: false,\r\n                errorMessages: [...labelsResponse.errorMessages]\r\n            });\r\n        } else {\r\n            const labels = labelsResponse.data.labels.map(label => {\r\n                label.isSelected = false;\r\n                return label;\r\n            })\r\n\r\n            this.setState({\r\n                isLoading: false,\r\n                labels: [...labels]\r\n            });\r\n        }\r\n    }\r\n\r\n    changeLabelHandler = (label) => {\r\n        const labelsCopy = this.state.labels.slice();\r\n        const selectedLabel = labelsCopy.find(labelCopy => labelCopy.backgroundColor === label.backgroundColor && labelCopy.color === label.color);\r\n\r\n        for(const labelCopy of labelsCopy) {\r\n            labelCopy.isSelected = false;\r\n        }\r\n\r\n        selectedLabel.isSelected = true;\r\n        this.setState({ labels: [...labelsCopy ]});\r\n\r\n        this.props.change(label);\r\n    }\r\n\r\n    render() {\r\n        const spinner = this.state.isLoading ? <Spinner /> : null;\r\n        const alerts = [];\r\n        this.state.errorMessages.forEach(message => {\r\n            alerts.push(<Alert alert='danger' message={message} />);\r\n        });\r\n\r\n        const labels = [];\r\n        this.state.labels.map((label, index) => \r\n            labels.push(<Label change={this.changeLabelHandler} backgroundColor={label.backgroundColor} color={label.color} text={label.text} key={index} isSelected={label.isSelected} />));\r\n\r\n        return (\r\n            <div className={classes.TodoLabels}>\r\n                {alerts}\r\n                {spinner}\r\n                {labels}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoLabels;","import React, { Component } from 'react';\r\nimport todoService from '../../services/todoService.js';\r\nimport calendarService from '../../services/calendarService.js';\r\nimport moodService from '../../services/moodService.js';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport classes from './TodoContainer.module.css';\r\n\r\nimport Alert from '../Alert/Alert';\r\nimport Spinner from '../Spinner/Spinner';\r\nimport Todo from './Todo/Todo';\r\nimport TodoForm from './TodoForm/TodoForm';\r\nimport TodoLabels from './TodoLabels/TodoLabels';\r\n\r\nclass TodoContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            errorMessages: [],\r\n            showCreateForm: false,\r\n            todos: [],\r\n            currentDate: null,\r\n            selectedLabel: null,\r\n            currentMood: null\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        // * get select date\r\n        // * get todos for the selected date\r\n        // * update state\r\n\r\n        const date = this.props.match.params.date;\r\n\r\n        this.setState({ isLoading: true });\r\n        const todosResponse = await todoService.getDailyTodos(date);\r\n\r\n        if (!todosResponse.successfull) {\r\n            this.setState({\r\n                errorMessages: [...todosResponse.errorMessages],\r\n                isLoading: false,\r\n                currentDate: date\r\n            });\r\n        } else {\r\n            const rawMoodResponse = await moodService.getForDay(date);\r\n            const moodResponse = rawMoodResponse.data.response;\r\n            if (!moodResponse.successfull) {\r\n                this.setState({\r\n                    errorMessages: [...moodResponse.errorMessages],\r\n                    isLoading: false,\r\n                    currentDate: date\r\n                });\r\n            }\r\n\r\n            const mood = moodResponse.data.moodText;\r\n\r\n            this.setState({\r\n                todos: [...todosResponse.data.todos],\r\n                isLoading: false,\r\n                currentDate: date,\r\n                currentMood: mood\r\n            });\r\n        }\r\n    }\r\n\r\n    createTodoHandler = async (title, description) => {\r\n        // validate label\r\n        if (!this.state.selectedLabel) {\r\n            alert('Choose label');\r\n            return;\r\n        }\r\n\r\n        // validate title\r\n        if (!title) {\r\n            alert('Title is required!');\r\n            return;\r\n        } else {\r\n            title = title.trim();\r\n            if (title.length < 1) {\r\n                alert('Title is required!');\r\n                return;\r\n            }\r\n        }\r\n\r\n        // validate description\r\n        if (!description) {\r\n            alert('Description is required!');\r\n            return;\r\n        } else {\r\n            description = description.trim();\r\n            if (description.length < 1) {\r\n                alert('Description is required!');\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.setState({ isLoading: true });\r\n\r\n        const createTodoResponse = await todoService.create({\r\n            title,\r\n            description,\r\n            labelText: this.state.selectedLabel.text,\r\n            date: this.state.currentDate\r\n        });\r\n\r\n        const todoResponse = createTodoResponse.data.response;\r\n\r\n        if (!todoResponse.successfull) {\r\n            this.setState({\r\n                errorMessages: [...todoResponse.errorMessages],\r\n                isLoading: false,\r\n                selectedLabel: null,\r\n                showCreateForm: false\r\n            });\r\n        } else {\r\n            const createdTodo = todoResponse.data.todo;\r\n            createdTodo.label = this.state.selectedLabel;\r\n            this.setState({\r\n                isLoading: false,\r\n                todos: [...this.state.todos, createdTodo],\r\n                selectedLabel: null,\r\n                showCreateForm: false\r\n            });\r\n        }\r\n    }\r\n\r\n    changeTodoLabelHandler = (label) => {\r\n        this.setState({ selectedLabel: label });\r\n    }\r\n\r\n    toggleCreateFormVisibility = () => {\r\n        this.setState({ showCreateForm: !this.state.showCreateForm });\r\n    }\r\n\r\n    updateCurrentMood = (event) => {\r\n        const selectedMood = event.target.value;\r\n        moodService.updateMood(this.state.currentDate, selectedMood);\r\n        this.setState({ currentMood: selectedMood });\r\n    }\r\n\r\n    deleteTodo = (todoId) => {\r\n        const todosCopy = this.state.todos.slice();\r\n        const todoIndex = todosCopy.findIndex(todo => todo.id === todoId);\r\n        \r\n        if(todoIndex === -1) {\r\n            return;\r\n        }\r\n\r\n        todoService.deleteTodo(todoId);\r\n\r\n        todosCopy.splice(todoIndex, 1);\r\n        this.setState({ todos: [...todosCopy] });\r\n    }\r\n\r\n    render() {\r\n        // display spinner while loading\r\n        if (this.state.isLoading) {\r\n            return <Spinner />\r\n        }\r\n\r\n        // display alerts\r\n        const alerts = [];\r\n        this.state.errorMessages.forEach((message, index) => {\r\n            alerts.push(<Alert alert='danger' message={message} key={index} />);\r\n        });\r\n        if (alerts.length > 0) {\r\n            return alerts;\r\n        }\r\n\r\n        let createForm = null;\r\n        if (this.state.showCreateForm) {\r\n            createForm = (\r\n                <div className={classes.Form}>\r\n                    <TodoForm create={this.createTodoHandler} />\r\n                    <TodoLabels change={this.changeTodoLabelHandler} />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        // display todos for current date\r\n        let todos = [];\r\n        this.state.todos.forEach((todo) => {\r\n            const element = <Todo todo={todo} onDelete={this.deleteTodo} key={todo.id} />\r\n            todos.push(element);\r\n        });\r\n\r\n        // display element if there are not todos\r\n        let noTodosElement = null;\r\n        if (this.state.todos.length === 0) {\r\n            noTodosElement = <h3 className={classes.NoTodos}>No created todos! Create one :)</h3>\r\n        }\r\n\r\n        let stringDate = this.state.currentDate ? calendarService.convertFromNumber(this.state.currentDate) : null;\r\n\r\n        return (\r\n            <div className={classes.TodoContainer}>\r\n                <span className={classes.CurrentDate}>Current date: {stringDate}</span>\r\n\r\n                <div className={classes.MoodContainer}>\r\n                    <span className={classes.MoodText}>How's your day going: </span>\r\n                    <select onChange={this.updateCurrentMood} defaultValue={this.state.currentMood} ref={this.moodSelect} className={classes.MoodSelect}>\r\n                        <option className={classes.Excellent}>Excellent</option>\r\n                        <option className={classes.Good}>Good</option>\r\n                        <option className={classes.Average}>Average</option>\r\n                        <option className={classes.Bad}>Bad</option>\r\n                        <option className={classes.Miserable}>Miserable</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div className={classes.TodoSection}>\r\n                    <span className={classes.TodoSectionText}>Todo section:</span>\r\n                    <FontAwesomeIcon onClick={this.toggleCreateFormVisibility} icon={faPlusCircle} className={classes.Add} />\r\n\r\n                    {createForm}\r\n\r\n                    <div className={classes.Todos}>\r\n                        {todos}\r\n                    </div>\r\n\r\n                    {noTodosElement}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoContainer;","import React, { Component } from 'react';\r\nimport classes from './DayBox.module.css';\r\n\r\nimport calendarService from '../../../../../services/calendarService.js';\r\n\r\nclass DayBox extends Component {\r\n    state = {\r\n        showPopup: false\r\n    }\r\n\r\n    hoverHandler = () => {\r\n        this.setState({ showPopup: true });\r\n    }\r\n\r\n    hoverLeaveHandler = () => {\r\n        this.setState({ showPopup: false });\r\n    }\r\n\r\n    redirect = () => {\r\n        const date = this.props.date;\r\n        this.props.redirect(this.props.history, `/Todo/${date}`);\r\n    }\r\n\r\n    render() {\r\n        const moodColor = this.props.moodColor;\r\n        let popup = null;\r\n        if (this.state.showPopup) {\r\n            const stringDate = calendarService.convertFromNumber(this.props.date);\r\n\r\n            popup = (\r\n                <div className={classes.Popover}>{stringDate}</div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div\r\n                onMouseOver={this.hoverHandler}\r\n                onMouseLeave={this.hoverLeaveHandler}\r\n                onClick={this.redirect}\r\n                style={{ backgroundColor: moodColor }}\r\n                className={classes.DayBox}>\r\n                {popup}\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default DayBox;","import React, { Component } from 'react';\r\nimport classes from './WeekRow.module.css';\r\n\r\nimport moodService from '../../../../services/moodService.js';\r\n\r\nimport DayBox from './DayBox/DayBox';\r\n\r\nclass WeekRow extends Component {\r\n    render() {\r\n        const dayBoxes = [];\r\n        this.props.dayMoods.forEach(dayMood => {\r\n            const currentMood = moodService.getMoodColor(dayMood.mood);\r\n            dayBoxes.push(<DayBox {...this.props} key={dayMood.date} date={dayMood.date} moodColor={currentMood} />);\r\n        });\r\n\r\n        return (\r\n            <div className={classes.WeekRow}>\r\n                {dayBoxes}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WeekRow;","import React, { Component } from 'react';\r\nimport classes from './MonthBox.module.css';\r\n\r\nimport calendarService from '../../../services/calendarService.js';\r\nimport moodService from '../../../services/moodService.js';\r\n\r\nimport WeekRow from './WeekRow/WeekRow';\r\nimport Spinner from '../../Spinner/Spinner';\r\n\r\nclass MonthBox extends Component {\r\n    state = {\r\n        isLoading: false,\r\n        errorMessages: [],\r\n        monthDays: []\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.setState({ isLoading: true });\r\n\r\n        const { year, month } = this.props;\r\n        const { from, to } = calendarService.getMonthData(year, month);\r\n\r\n        const rawMoodResponse = await moodService.getForRange(from, to);\r\n        const moodResponse = rawMoodResponse.data.response;\r\n        const dateMoods = moodResponse.data.dateMoods;\r\n\r\n        const monthDays = [];\r\n        for (let i = from - 1; i <= to; i++) {\r\n            const currentDateMood = dateMoods.find(dateMood => dateMood.date === i);\r\n            let mood = 'Missing';\r\n            if (currentDateMood !== undefined) {\r\n                mood = currentDateMood.mood;\r\n            }\r\n\r\n            monthDays.push({\r\n                date: i,\r\n                mood\r\n            });\r\n        }\r\n\r\n        if (!moodResponse.successfull) {\r\n            this.setState({\r\n                isLoading: false,\r\n                errorMessages: [...moodResponse.errorMessages]\r\n            });\r\n        } else {\r\n            this.setState({\r\n                isLoading: false,\r\n                monthDays: [...monthDays]\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const spinner = this.state.isLoading ? <Spinner /> : null;\r\n        const weekRows = [];\r\n\r\n        if (this.state.monthDays.length > 0) {\r\n            let counter = 0;\r\n\r\n            for (let week = 0; week < 5; week++) {\r\n                const dayMoods = [];\r\n                for (let day = 0; day < 7; day++) {\r\n                    counter++;\r\n                    if (counter === this.state.monthDays.length) {\r\n                        break;\r\n                    }\r\n\r\n                    const { date, mood } = this.state.monthDays[counter];\r\n                    const dateMood = {\r\n                        date,\r\n                        mood\r\n                    };\r\n\r\n                    dayMoods.push(dateMood);\r\n                }\r\n\r\n                weekRows.push(<WeekRow {...this.props} dayMoods={dayMoods} key={week} />);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className={classes.MonthBox}>\r\n                {spinner}\r\n                {weekRows}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MonthBox;","import React, { Component } from 'react';\r\nimport classes from './MonthRow.module.css';\r\n\r\nimport MonthBox from '../MonthBox/MonthBox';\r\n\r\nclass MonthRow extends Component {\r\n\r\n    render() {\r\n        const monthBoxes = [];\r\n        for(let i = this.props.from; i <= this.props.to; i++) {\r\n            monthBoxes.push(<MonthBox {...this.props} year={this.props.year} key={i} month={i} />)\r\n        }\r\n\r\n        return (\r\n            <div className={classes.MonthRow}>\r\n                {monthBoxes}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MonthRow;","import React, { Component } from 'react';\r\n\r\nimport calendarService from '../../services/calendarService.js';\r\n\r\nimport MonthRow from './MonthRow/MonthRow';\r\n\r\nclass Overview extends Component {\r\n\r\n    render() {\r\n        const currentYear = calendarService.getCurrentYear();\r\n\r\n        return (\r\n            <div>\r\n                <MonthRow {...this.props} year={currentYear} from={1} to={4}/>\r\n                <MonthRow {...this.props} year={currentYear} from={5} to={8}/>\r\n                <MonthRow {...this.props} year={currentYear} from={9} to={12}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Overview;","import React, { Component } from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport authService from './services/authService.js';\n\nimport Navigation from './components/Navigation/Navigation';\nimport Login from './components/Login/Login';\nimport Register from './components/Register/Register';\nimport Calendar from './components/Calendar/Calendar';\nimport TodoContainer from './components/TodoContainer/TodoContainer';\nimport Overview from './components/Overview/Overview.js';\n\nclass App extends Component {\n  state = {\n    isAuthenticated: false\n  }\n\n  componentDidMount() {\n    const isAuthenticated = authService.isUserAuthenticated();\n    this.setState({ isAuthenticated: isAuthenticated });\n  }\n\n  redirect = (history, page, authenticate) => {\n    history.push(page);\n    sessionStorage.setItem('page', page);\n    if(authenticate !== undefined) {\n      this.setState({ isAuthenticated: authenticate });\n    }\n  }\n\n  render() {\n    const requireAuthentication = (Component, props) => {\n      // middleware function that checks if the user is authenticated\n      // if the user is not authenticated, he is redirected to Login page\n      // otherwise the desired component is rendered\n\n      if (!authService.isUserAuthenticated()) {\n        props.history.push('/Login');\n      }\n\n      return <Component redirect={this.redirect} {...props} />\n    }\n\n    const requireAnonymous = (Component, props) => {\n      // middleware function that checks if the user is not authenticated\n      // if he is not, then the app renderes the desired component\n      // if he is authenticated, he is redirected to Calendar component\n\n      if (authService.isUserAuthenticated()) {\n        props.history.push('/Calendar');\n      }\n\n      return <Component redirect={this.redirect} {...props} />\n    }\n\n    return (\n      <div>\n        <HashRouter>\n          <Navigation redirect={this.redirect} isAuthenticated={this.state.isAuthenticated} />\n          <Switch>\n            <Route path='/Login' exact render={(props) => requireAnonymous(Login, props)} />\n            <Route path='/Register' exact render={(props) => requireAnonymous(Register, props)} />\n            <Route path='/Calendar' exact render={(props) => requireAuthentication(Calendar, props)} />\n            <Route path='/Todo/:date' exact render={(props) => requireAuthentication(TodoContainer, props)} />\n            <Route path='/Overview' exact render={(props) => requireAuthentication(Overview, props)} />\n            <Route path='/' exact render={(props) => requireAuthentication(Calendar, props)} /> \n          </Switch>\n        </HashRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}