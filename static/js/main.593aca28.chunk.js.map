{"version":3,"sources":["components/Calendar/CalendarRow/CalendarBox/CalendarBox.module.css","components/Navigation/Navigation.module.css","components/TodoContainer/TodoContainer.module.css","components/TodoContainer/TodoForm/TodoForm.module.css","components/TodoContainer/Todo/Todo.module.css","components/TodoContainer/TodoLabels/Label/Label.module.css","components/Login/Login.module.css","components/Register/Register.module.css","components/Overview/MonthBox/WeekRow/DayBox/DayBox.module.css","components/Spinner/Spinner.module.css","components/Calendar/Calendar.module.css","components/Calendar/CalendarRow/CalendarRow.module.css","components/Calendar/CalendarRow/CalendarBox/CalendarTodo/CalendarTodo.module.css","components/TodoContainer/TodoLabels/TodoLabels.module.css","components/Overview/MonthRow/MonthRow.module.css","components/Overview/MonthBox/MonthBox.module.css","components/Overview/MonthBox/WeekRow/WeekRow.module.css","axios.js","services/authService.js","components/Navigation/Navigation.js","components/Alert/Alert.js","components/Spinner/Spinner.js","components/Login/Login.js","components/Register/Register.js","services/calendarService.js","services/moodService.js","services/todoService.js","components/Calendar/CalendarRow/CalendarBox/CalendarTodo/CalendarTodo.js","components/Calendar/CalendarRow/CalendarBox/CalendarBox.js","components/Calendar/CalendarRow/CalendarRow.js","components/Calendar/Calendar.js","components/TodoContainer/Todo/Todo.js","components/TodoContainer/TodoForm/TodoForm.js","services/labelService.js","components/TodoContainer/TodoLabels/Label/Label.js","components/TodoContainer/TodoLabels/TodoLabels.js","components/TodoContainer/TodoContainer.js","components/Overview/MonthBox/WeekRow/DayBox/DayBox.js","components/Overview/MonthBox/WeekRow/WeekRow.js","components/Overview/MonthBox/MonthBox.js","components/Overview/MonthRow/MonthRow.js","components/Overview/Overview.js","App.js","index.js"],"names":["module","exports","axios","defaults","baseURL","data","a","post","response","result","successfull","persistUserData","authToken","localStorage","setItem","authService","isUserAuthenticated","getItem","register","login","logout","removeItem","Navigation","state","showMobile","redirect","page","props","history","setState","toggleMobileButtons","mobileButtons","this","isAuthenticated","onClick","className","classes","MobileLink","buttons","NavigationButton","to","mobileButtonsStyle","display","Logo","Burger","Slice","style","MobileButtons","Component","withRouter","Alert","alert","role","message","Spinner","Loader","Login","event","preventDefault","email","emailInput","current","value","trim","password","passwordInput","length","isLoading","errorMessages","React","createRef","spinner","alerts","map","index","push","LoginContainer","Slogan","type","placeholder","ref","Register","username","usernameInput","repeatPassword","repeatPasswordInput","RegisterContainer","dayjs","require","weekday","weekOfYear","getCalendarDays","year","month","currentDate","totalDays","daysInMonth","start","day","max","active","date","prevDate","prevMonthDays","previousDifference","previous","from","next","dateObject","days","Number","previousYear","previousMonth","i","parseInt","currentMonth","isActive","todos","currentDateObject","nextYear","nextMonth","transformToArray","extend","calendarService","convertFromNumber","stringDate","toString","substr","getCurrentDate","format","getCurrentYear","getMonthRange","monthDays","getMonthData","convertedMonth","requestData","buildRequestData","mood","startDate","endDate","moodService","getForDay","updateMood","getForRange","getMoodColor","todosResponse","todoId","newCheckState","todoService","changeTodoCheckedState","getTodosForDates","getDailyTodos","create","CalendarTodo","backgroundColor","TodoRow","CalendarBox","showPopover","moodColor","showPopoverHandler","hidePopoverHandler","updateMoodHanlder","stopPropagation","newMoodColor","forEach","todo","label","boxClass","Current","Box","numberClass","Active","popover","Popover","PopoverBox","Miserable","Bad","Average","Good","Excellent","FirstRow","LeftBox","onMouseLeave","onMouseOver","ColorBox","RightBox","SecondRow","CalendarRow","boxArray","Row","Calendar","updateDate","currentDays","find","rawDayMoodsResponse","dayMoodsResponse","dateMoods","dateMood","calendarRows","currentRowDays","j","Todo","isChecked","showDescription","changeCheckedHandler","id","toggleDescriptionHandler","nextIcon","faCheckSquare","faSquare","descriptionElement","TodoDescription","description","color","TodoText","title","icon","Icon","TodoForm","createTodoHandler","titleInput","descriptionTextArea","htmlFor","TitleLabel","TitleInput","Textarea","CreateButton","get","labelsResponse","labelService","getAll","Label","isSelected","changeLabelHandler","text","change","checkedElement","faCheck","LabelText","TodoLabels","labels","labelsCopy","slice","selectedLabel","labelCopy","labelsService","TodoContainer","labelText","createTodoResponse","todoResponse","createdTodo","showCreateForm","changeTodoLabelHandler","toggleCreateFormVisibility","updateCurrentMood","selectedMood","target","currentMood","match","params","rawMoodResponse","moodResponse","moodText","createForm","Form","element","noTodosElement","NoTodos","CurrentDate","MoodContainer","MoodText","onChange","defaultValue","moodSelect","MoodSelect","TodoSection","TodoSectionText","faPlusCircle","Add","Todos","DayBox","showPopup","hoverHandler","hoverLeaveHandler","popup","WeekRow","dayBoxes","dayMoods","dayMood","key","MonthBox","currentDateMood","undefined","weekRows","counter","week","MonthRow","monthBoxes","Overview","currentYear","App","authenticate","sessionStorage","requireAuthentication","requireAnonymous","path","exact","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.593aca28.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Box\":\"CalendarBox_Box__2lRA8\",\"Current\":\"CalendarBox_Current__uOHXP\",\"FirstRow\":\"CalendarBox_FirstRow__TIB_Y\",\"SecondRow\":\"CalendarBox_SecondRow__hRFFL\",\"LeftBox\":\"CalendarBox_LeftBox__1XpaP\",\"RightBox\":\"CalendarBox_RightBox__14_hI\",\"ColorBox\":\"CalendarBox_ColorBox__8UtG5\",\"Number\":\"CalendarBox_Number__3CyHb\",\"Active\":\"CalendarBox_Active__1tYwI\",\"PopoverBox\":\"CalendarBox_PopoverBox__19NhT\",\"Excellent\":\"CalendarBox_Excellent__3Dmc2\",\"Good\":\"CalendarBox_Good__LFVTU\",\"Average\":\"CalendarBox_Average__jgPis\",\"Bad\":\"CalendarBox_Bad__2SsnH\",\"Miserable\":\"CalendarBox_Miserable__1xVd_\",\"Popover\":\"CalendarBox_Popover__DOKPv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navigation\":\"Navigation_Navigation__9z3ST\",\"Logo\":\"Navigation_Logo__1v8mo\",\"NavigationButton\":\"Navigation_NavigationButton__omDWX\",\"Burger\":\"Navigation_Burger__1IBBq\",\"Slice\":\"Navigation_Slice__3Sjis\",\"MobileButtons\":\"Navigation_MobileButtons__2O2wV\",\"MobileLink\":\"Navigation_MobileLink__Aoe8S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TodoContainer\":\"TodoContainer_TodoContainer__3HNq1\",\"CurrentDate\":\"TodoContainer_CurrentDate__hNhhc\",\"MoodContainer\":\"TodoContainer_MoodContainer__1Z4Eu\",\"MoodSelect\":\"TodoContainer_MoodSelect__1FatK\",\"MoodText\":\"TodoContainer_MoodText__RIQZL\",\"TodoSection\":\"TodoContainer_TodoSection__1BGjt\",\"TodoSectionText\":\"TodoContainer_TodoSectionText___mZ_S\",\"Add\":\"TodoContainer_Add__1prwe\",\"Form\":\"TodoContainer_Form__3WvJa\",\"NoTodos\":\"TodoContainer_NoTodos__17Hgu\",\"Todos\":\"TodoContainer_Todos__1HawL\",\"Excellent\":\"TodoContainer_Excellent__2gk8w\",\"Good\":\"TodoContainer_Good__ZLZTq\",\"Average\":\"TodoContainer_Average__3BsJs\",\"Bad\":\"TodoContainer_Bad__18f-1\",\"Miserable\":\"TodoContainer_Miserable__3HQzt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TodoForm\":\"TodoForm_TodoForm__2kOIN\",\"TitleInput\":\"TodoForm_TitleInput__1Tv0r\",\"Textarea\":\"TodoForm_Textarea__1PNzc\",\"CreateButton\":\"TodoForm_CreateButton__1K4wB\",\"TitleLabel\":\"TodoForm_TitleLabel__2DRFM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Todo\":\"Todo_Todo__1tPH5\",\"TodoText\":\"Todo_TodoText__skZpM\",\"Icon\":\"Todo_Icon__2yVEi\",\"TodoDescription\":\"Todo_TodoDescription__36Sj4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"Label_Label__2R2-t\",\"LabelText\":\"Label_LabelText__3yDWO\",\"Icon\":\"Label_Icon__3Nmlq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LoginContainer\":\"Login_LoginContainer__3yL9J\",\"Slogan\":\"Login_Slogan__3O6SN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RegisterContainer\":\"Register_RegisterContainer__12l1T\",\"Slogan\":\"Register_Slogan__2kV9W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DayBox\":\"DayBox_DayBox__ueRhW\",\"Popover\":\"DayBox_Popover__5-WVa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__1GOUL\",\"load6\":\"Spinner_load6__1rG_Z\",\"round\":\"Spinner_round__36623\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Calendar\":\"Calendar_Calendar__2wnNf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Row\":\"CalendarRow_Row__2VF7W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TodoRow\":\"CalendarTodo_TodoRow__14rYH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TodoLabels\":\"TodoLabels_TodoLabels__3b3Y_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MonthRow\":\"MonthRow_MonthRow__ETzxd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MonthBox\":\"MonthBox_MonthBox__2k5mH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"WeekRow\":\"WeekRow_WeekRow__2MlqW\"};","import axios from 'axios';\r\n\r\n// * production\r\naxios.defaults.baseURL = 'https://reactive-calendar.glitch.me';\r\n\r\n// * development\r\n// axios.defaults.baseURL = 'http://localhost:5000';\r\n\r\nexport default axios;","import axios from '../axios.js';\r\n\r\nasync function register(data) {\r\n    // send post request with data to the back-end api\r\n    // if the response is successfull then the authentication token\r\n    // is saved to the localStorage\r\n\r\n    const response = await axios.post('/users/register', data);\r\n    const result = response.data.response;\r\n    if(result.successfull) {\r\n        const authToken = result.data.authToken;\r\n        persistUserData(authToken);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nasync function login(data) {\r\n    // send post request with data to the back-end api\r\n    // if the response is successfull then the authentication token\r\n    // is saved to the localStorage\r\n\r\n    const response = await axios.post('/users/login', data);\r\n    const result = response.data.response;\r\n    if(result.successfull) {\r\n        const authToken = result.data.authToken;\r\n        persistUserData(authToken);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction persistUserData(authToken) {\r\n    // save authentication token to the localStorage\r\n    localStorage.setItem('authToken', authToken);\r\n}\r\n\r\nfunction logout() {\r\n    // remove the authentication token from the localStorage\r\n    localStorage.removeItem('authToken');\r\n}\r\n\r\nfunction isUserAuthenticated() {\r\n    // check if the localStorage contains authentication token\r\n    const authToken = localStorage.getItem('authToken');\r\n    return authToken !== null;\r\n}\r\n\r\nconst authService = {\r\n    isUserAuthenticated,\r\n    register,\r\n    login,\r\n    logout\r\n};\r\n\r\nexport default authService;","import React, { Component } from 'react';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport authService from '../../services/authService.js';\r\n\r\nimport classes from './Navigation.module.css';\r\n\r\nclass Navigation extends Component {\r\n    state = {\r\n        showMobile: false\r\n    }\r\n\r\n    redirect = (page) => {\r\n        this.props.redirect(this.props.history, page);\r\n    }\r\n\r\n    logout = () => {\r\n        this.setState({ showMobile: false });\r\n        authService.logout();\r\n        this.props.redirect(this.props.history, '/Login', false);\r\n    }\r\n\r\n    toggleMobileButtons = () => {\r\n        this.setState({ showMobile: !this.state.showMobile });\r\n    }\r\n\r\n    render() {\r\n        let mobileButtons = null;\r\n        if (this.props.isAuthenticated) {\r\n            mobileButtons = (\r\n                <span>\r\n                    <div onClick={() => this.redirect('/Calendar')} className={classes.MobileLink}>Calendar</div>\r\n                    <div onClick={() => this.redirect('/Overview')} className={classes.MobileLink}>Overview</div>\r\n                    <div onClick={this.logout} className={classes.MobileLink}>Logout</div>\r\n                </span>\r\n            );\r\n        } else {\r\n            mobileButtons = (\r\n                <span>\r\n                    <div onClick={() => this.redirect('/Login')} className={classes.MobileLink}>Login</div>\r\n                    <div onClick={() => this.redirect('/Register')} className={classes.MobileLink}>Register</div>\r\n                </span>\r\n            );\r\n        }\r\n\r\n        let buttons = null;\r\n        if (this.props.isAuthenticated) {\r\n            buttons = (\r\n                <span>\r\n                    <button onClick={this.logout} className={classes.NavigationButton}>Logout</button>\r\n                    <button onClick={() => this.redirect('/Overview')} className={classes.NavigationButton}>Overview</button>\r\n                    <button onClick={() => this.redirect('/Calendar')} className={classes.NavigationButton}>Calendar</button>\r\n                </span>\r\n            );\r\n        } else {\r\n            buttons = (\r\n                <span>\r\n                    <NavLink to='/Register' className={classes.NavigationButton}>Register</NavLink>\r\n                    <NavLink to='/Login' className={classes.NavigationButton}>Login</NavLink>\r\n                </span>\r\n            );\r\n        }\r\n\r\n        const mobileButtonsStyle = {\r\n            display: this.state.showMobile ? 'block' : 'none'\r\n        };\r\n\r\n        return (\r\n            <nav className={classes.Navigation}>\r\n                <span onClick={() => this.redirect('/')} to='/' className={classes.Logo}>Reactive Calendar</span>\r\n                {buttons}\r\n\r\n                <div onClick={this.toggleMobileButtons} className={classes.Burger}>\r\n                    <div className={classes.Slice}></div>\r\n                    <div className={classes.Slice}></div>\r\n                    <div className={classes.Slice}></div>\r\n                </div>\r\n\r\n                <div style={mobileButtonsStyle} className={classes.MobileButtons}>\r\n                    {mobileButtons}\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Navigation);","import React from 'react';\r\n\r\nconst Alert = (props) => {\r\n    return (\r\n        <div className={`alert alert-${props.alert}`} role=\"alert\">\r\n            {props.message}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Alert;","import React from 'react';\r\nimport classes from './Spinner.module.css';\r\n\r\nconst Spinner = () => <div className={classes.Loader}>Loading...</div>;\r\n\r\nexport default Spinner;","import React, { Component } from 'react';\r\nimport authService from '../../services/authService.js';\r\nimport classes from './Login.module.css';\r\n\r\nimport Alert from '../Alert/Alert';\r\nimport Spinner from '../Spinner/Spinner';\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isLoading: false,\r\n            errorMessages: []\r\n        };\r\n\r\n        this.emailInput = React.createRef(null);\r\n        this.passwordInput = React.createRef(null);\r\n    }\r\n\r\n    login = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const email = this.emailInput.current.value.trim();\r\n        const password = this.passwordInput.current.value.trim();\r\n\r\n        // * validations\r\n        if(!email || email.length < 5) {\r\n            alert('Email is required!');\r\n            return;\r\n        }\r\n\r\n        if(!password || password.length < 6) {\r\n            alert('Password must be at least 6 symbols!');\r\n            return;\r\n        }\r\n\r\n        this.setState({ isLoading: true });\r\n\r\n        const result = await authService.login({ email, password });\r\n\r\n        if (result.successfull) {\r\n            this.setState({ isLoading: false });\r\n            this.props.redirect(this.props.history, '/Calendar', true);\r\n        } else {\r\n            this.setState({\r\n                errorMessages: [...result.errorMessages],\r\n                isLoading: false\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const spinner = this.state.isLoading ? <Spinner /> : null;\r\n\r\n        const alerts = [];\r\n        this.state.errorMessages.map((message, index) =>\r\n            alerts.push(<Alert alert='danger' message={message} key={index} />));\r\n\r\n        return (\r\n            <div className={classes.LoginContainer}>\r\n                {spinner}\r\n                <p className={classes.Slogan}>Log in to your reactive account</p>\r\n                <form>\r\n                    {alerts}\r\n                    <div className=\"form-group\">\r\n                        <label>Email address</label>\r\n                        <input type=\"email\" className=\"form-control\" placeholder=\"Enter your email\" ref={this.emailInput} />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Password</label>\r\n                        <input type=\"password\" className=\"form-control\" placeholder=\"Enter your password\" ref={this.passwordInput} />\r\n                    </div>\r\n\r\n                    <button onClick={this.login} className=\"btn btn-primary w-100\">Log in</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport authService from '../../services/authService.js';\r\nimport classes from './Register.module.css';\r\n\r\nimport Alert from '../Alert/Alert';\r\nimport Spinner from '../Spinner/Spinner';\r\n\r\nclass Register extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isLoading: false,\r\n            errorMessages: []\r\n        };\r\n\r\n        this.emailInput = React.createRef(null);\r\n        this.usernameInput = React.createRef(null);\r\n        this.passwordInput = React.createRef(null);\r\n        this.repeatPasswordInput = React.createRef(null);\r\n    }\r\n\r\n    register = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const email = this.emailInput.current.value.trim();\r\n        const username = this.usernameInput.current.value.trim();\r\n        const password = this.passwordInput.current.value.trim();\r\n        const repeatPassword = this.repeatPasswordInput.current.value.trim();\r\n\r\n        // * validations\r\n        if (!email || email.length < 5) {\r\n            alert('Email is required!');\r\n            return;\r\n        }\r\n\r\n        if (!username || username.length < 5) {\r\n            alert('Username must be at least 5 symbols long!');\r\n            return;\r\n        }\r\n\r\n        if (!password || password.length < 6) {\r\n            alert('Password must be at least 6 symbols long!');\r\n            return;\r\n        }\r\n\r\n        if (password !== repeatPassword) {\r\n            alert('Passwords does not match!');\r\n            return;\r\n        }\r\n\r\n        this.setState({ isLoading: true });\r\n\r\n        const result = await authService.register({\r\n            email,\r\n            username,\r\n            password\r\n        });\r\n\r\n        if(result.successfull) {\r\n            this.setState({ isLoading: false });\r\n            this.props.redirect(this.props.history, '/Calendar', true);\r\n        } else {\r\n            this.setState({\r\n                isLoading: false,\r\n                errorMessages: [...result.errorMessages]\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const spinner = this.state.isLoading ? <Spinner /> : null;\r\n\r\n        const alerts = [];\r\n        this.state.errorMessages.map((message, index) =>\r\n            alerts.push(<Alert alert='danger' message={message} key={index} />));\r\n\r\n        return (\r\n            <div className={classes.RegisterContainer}>\r\n                {spinner}\r\n                <p className={classes.Slogan}>Register your reactive account</p>\r\n                <form>\r\n                    {alerts}\r\n                    <div className=\"form-group\">\r\n                        <label>Email address</label>\r\n                        <input type=\"email\" className=\"form-control\" placeholder=\"Enter your email\" ref={this.emailInput} />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Username</label>\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter your username\" ref={this.usernameInput} />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Password</label>\r\n                        <input type=\"password\" className=\"form-control\" placeholder=\"Enter your password\" ref={this.passwordInput} />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Repeat password</label>\r\n                        <input type=\"password\" className=\"form-control\" placeholder=\"Repeat your password\" ref={this.repeatPasswordInput} />\r\n                    </div>\r\n\r\n                    <button onClick={this.register} className=\"btn btn-primary w-100\">Register</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;","const dayjs = require('dayjs');\r\nconst weekday = require(\"dayjs/plugin/weekday\");\r\nconst weekOfYear = require(\"dayjs/plugin/weekOfYear\");\r\n\r\ndayjs.extend(weekday);\r\ndayjs.extend(weekOfYear);\r\n\r\nfunction getCalendarDays(year, month) {\r\n    // get the current month days\r\n    // previous month last days and next month start days\r\n\r\n    const result = {\r\n        year,\r\n        month,\r\n        current: {}\r\n    }\r\n\r\n    // get the total days in the current month\r\n    const currentDate = dayjs(`${year}/${month}/01`);\r\n    let totalDays = currentDate.daysInMonth();\r\n\r\n    result.current = {\r\n        start: currentDate.day(),\r\n        max: currentDate.daysInMonth(),\r\n        active: dayjs().date()\r\n    }\r\n\r\n    if (result.current.start === 0) {\r\n        // if the start day is sunday\r\n        // change the number, so the calendar works correctly\r\n        result.current.start = 7;\r\n    }\r\n\r\n    if (result.current.start !== 1) {\r\n        // check if the current month does not start in monday\r\n        // calculate how many days should the function take from\r\n        // the previous month\r\n        // * example (current month starts in Wednesday)\r\n        // * then the function takes the last two days from \r\n        // * the previous day\r\n\r\n        // take the total days in the previous month\r\n        const prevDate = dayjs(`${year}/${month - 1}/01`);\r\n        const prevMonthDays = prevDate.daysInMonth();\r\n        // calculate the difference\r\n        const previousDifference = prevMonthDays - (result.current.start - 2);\r\n        totalDays += (prevMonthDays - previousDifference) + 1;\r\n\r\n        result.previous = {\r\n            from: previousDifference,\r\n            to: prevDate.daysInMonth()\r\n        }\r\n    }\r\n\r\n    if (totalDays < 42) {\r\n        // check if the total days to this moment (current month days + previous month days) is less than 42\r\n        // ? 42 => (the calendar has 6 rows with 7 days)\r\n        // calculate how many days should be taken from next month\r\n        result.next = {\r\n            to: 42 - totalDays\r\n        }\r\n    }\r\n\r\n    // ? example of the current result\r\n    /* \r\n        result = {\r\n            current: {\r\n                start: 4, // ? (number between 1 and 7 (1-Mon, 7-Sun))\r\n                max: 30, // ? max days the current month has\r\n                active: 5 // ? the current date\r\n            },\r\n            previous: {\r\n                from: 29, // ? start date from previous month\r\n                to: 31 // ? end date from previous month\r\n            },\r\n            next: {\r\n                to: 9 // ? end date of next month\r\n            },\r\n            month: 4, // ? current month\r\n            year: 2021 // ? current year\r\n        }\r\n    */\r\n\r\n    // return the result object transformed to dates array\r\n    return transformToArray(result);\r\n}\r\n\r\nfunction transformToArray(dateObject) {\r\n    // transforms dateObject to dates array\r\n    const days = [];\r\n\r\n    // get the current year and month and convert them to numbers\r\n    let { year, month } = dateObject;\r\n    year = Number(year);\r\n    month = Number(month);\r\n\r\n    // * generate objects if there are previous month days\r\n    if (dateObject.previous) {\r\n        let previousYear, previousMonth;\r\n\r\n        // get the previous month and year\r\n        if (month === 1) {\r\n            previousMonth = 12;\r\n            previousYear = year - 1;\r\n        } else {\r\n            previousMonth = month - 1;\r\n            if (previousMonth < 10) {\r\n                previousMonth = `0${previousMonth}`;\r\n            }\r\n            previousYear = year;\r\n        }\r\n\r\n        // generate the previous month dates\r\n        for (let i = dateObject.previous.from; i <= dateObject.previous.to; i++) {\r\n            days.push({\r\n                date: parseInt(`${previousYear}${previousMonth}${i}`),\r\n                currentMonth: false,\r\n                isActive: false,\r\n                day: i,\r\n                todos: []\r\n            });\r\n        }\r\n    }\r\n\r\n    // * generate current month days\r\n    let currentMonth = month;\r\n    if (currentMonth < 10) {\r\n        currentMonth = `0${month}`;\r\n    }\r\n\r\n    for (let i = 1; i <= dateObject.current.max; i++) {\r\n        // generate current month dates\r\n\r\n        let currentDate = i;\r\n        if (currentDate < 10) {\r\n            currentDate = `0${currentDate}`;\r\n        }\r\n\r\n        const currentDateObject = {\r\n            date: parseInt(`${year}${currentMonth}${currentDate}`),\r\n            currentMonth: true,\r\n            isActive: false,\r\n            day: i,\r\n            todos: []\r\n        };\r\n\r\n        // set the active flag to the current date\r\n        if (i === dateObject.current.active) {\r\n            currentDateObject.isActive = true;\r\n        }\r\n\r\n        days.push(currentDateObject);\r\n    }\r\n\r\n    // * generate objects if there are next month days\r\n    if (dateObject.next) {\r\n        // generate next month dates\r\n\r\n        // calculate next month and year\r\n        let nextYear, nextMonth;\r\n        if (month === 12) {\r\n            nextMonth = 1;\r\n            nextYear = year + 1;\r\n        } else {\r\n            nextMonth = month + 1;\r\n            nextYear = year;\r\n        }\r\n\r\n        if (nextMonth < 10) {\r\n            nextMonth = `0${nextMonth}`;\r\n        }\r\n\r\n        for (let i = 1; i <= dateObject.next.to; i++) {\r\n            // generate next month dates\r\n            const currentDate = `0${i}`;\r\n            const currentDateObject = {\r\n                date: parseInt(`${nextYear}${nextMonth}${currentDate}`),\r\n                currentMonth: false,\r\n                isActive: false,\r\n                day: i,\r\n                todos: []\r\n            };\r\n\r\n            days.push(currentDateObject);\r\n        }\r\n    }\r\n\r\n    return days;\r\n}\r\n\r\nfunction getCurrentDate() {\r\n    const year = dayjs().format('YYYY');\r\n    const month = dayjs().format('M');\r\n    const day = dayjs().format('D');\r\n\r\n    return {\r\n        year,\r\n        month,\r\n        day\r\n    }\r\n}\r\n\r\nfunction getMonthRange(year, month) {\r\n    const monthDays = getCalendarDays(year, month);\r\n\r\n    return {\r\n        from: monthDays[0].date,\r\n        to: monthDays[monthDays.length - 1].date\r\n    };\r\n}\r\n\r\nfunction getCurrentYear() {\r\n    return dayjs().format('YYYY');\r\n}\r\n\r\nfunction getMonthData(year, month) {\r\n    const currentDate = dayjs(`${year}/${month}/01`);\r\n    let totalDays = currentDate.daysInMonth();\r\n    let convertedMonth = month < 10 ? `0${month}` : month;\r\n\r\n    const from = parseInt(`${year}${convertedMonth}0${1}`);\r\n    const to = parseInt(`${year}${convertedMonth}${totalDays}`);\r\n\r\n    return {\r\n        from,\r\n        to\r\n    };\r\n}\r\n\r\nfunction convertFromNumber(date) {\r\n    // get date as number (20210405) and returns '2021/04/05'\r\n\r\n    const stringDate = date.toString();\r\n    const year = stringDate.substr(0, 4);\r\n    const month = stringDate.substr(4, 2);\r\n    const day = stringDate.substr(6, 2);\r\n\r\n    return `${year}/${month}/${day}`;\r\n}\r\n\r\nconst calendarService = {\r\n    convertFromNumber,\r\n    getCalendarDays,\r\n    getCurrentDate,\r\n    getCurrentYear,\r\n    getMonthRange,\r\n    getMonthData\r\n};\r\n\r\nexport default calendarService;","import axios from '../axios.js';\r\n\r\nasync function getForDay(date) {\r\n    const requestData = buildRequestData({ date });\r\n    const response = await axios.post('/mood/getForDay', requestData);\r\n    return response;\r\n}\r\n\r\nasync function updateMood(date, mood) {\r\n    const requestData = buildRequestData({ date, mood });\r\n    const response = await axios.post('/mood/update', requestData);\r\n    return response;\r\n}\r\n\r\nasync function getForRange(startDate, endDate) {\r\n    const requestData = buildRequestData({ startDate, endDate });\r\n    const response = await axios.post('/mood/getForRange', requestData);\r\n    return response;\r\n}\r\n\r\nfunction buildRequestData(data) {\r\n    const authToken = localStorage.getItem('authToken');\r\n    data.authToken = authToken;\r\n    return data;\r\n}\r\n\r\nfunction getMoodColor(mood) {\r\n    switch(mood) {\r\n        case 'Excellent': return '#008000';\r\n        case 'Good': return '#38b000';\r\n        case 'Average': return '#ccff33';\r\n        case 'Bad': return '#f79d65';\r\n        case 'Miserable': return '#f27059';\r\n        default: return 'white';\r\n    }\r\n}\r\n\r\nconst moodService = {\r\n    getForDay,\r\n    updateMood,\r\n    getForRange,\r\n    getMoodColor\r\n};\r\n\r\nexport default moodService;","import axios from '../axios.js';\r\n\r\nasync function getDailyTodos(date) {\r\n    // get todos for a date\r\n    // send authentication token and current date\r\n    const requestData = buildRequestData({ date });\r\n    const response = await axios.post('/todo/daily', requestData);\r\n    \r\n    const todosResponse = response.data.response;\r\n    return todosResponse;\r\n}\r\n\r\nasync function getTodosForDates(startDate, endDate) {\r\n    // get todos for range of two dates\r\n    const data = {\r\n        startDate,\r\n        endDate\r\n    };\r\n    const requestData = buildRequestData(data);\r\n    // send authentication token, startDate and endDate\r\n    const response = await axios.post('/todo/getForDateRange',requestData);\r\n\r\n    const todosResponse = response.data.response;\r\n    return todosResponse;\r\n}\r\n\r\nasync function create(data) {\r\n    const requestData = buildRequestData(data);\r\n    const response = await axios.post('/todo/create', requestData);\r\n    return response;\r\n}\r\n\r\nasync function changeTodoCheckedState(todoId, newCheckState) {\r\n    const requestData = buildRequestData({ todoId, newCheckState });\r\n    const response = await axios.post('/todo/updateCheck', requestData);\r\n    return response;\r\n}\r\n\r\nfunction buildRequestData(data) {\r\n    const authToken = localStorage.getItem('authToken');\r\n    data.authToken = authToken;\r\n    return data;\r\n}\r\n\r\nconst todoService = {\r\n    changeTodoCheckedState,\r\n    getTodosForDates,\r\n    getDailyTodos,\r\n    create\r\n};\r\n\r\nexport default todoService;","import React, { Component } from 'react';\r\nimport classes from './CalendarTodo.module.css';\r\n\r\nclass CalendarTodo extends Component {\r\n    render() {\r\n        const style = {\r\n            backgroundColor: this.props.backgroundColor\r\n        };\r\n\r\n        return (\r\n            <div style={style} className={classes.TodoRow}></div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CalendarTodo;","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport classes from './CalendarBox.module.css';\r\n\r\nimport moodService from '../../../../services/moodService.js';\r\n\r\nimport CalendarTodo from './CalendarTodo/CalendarTodo';\r\n\r\nclass CalendarBox extends Component {\r\n    state = {\r\n        showPopover: false,\r\n        moodColor: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        const moodColor = this.props.dateObject.moodColor || '#ebedf0';\r\n        this.setState({ moodColor: moodColor });\r\n    }\r\n\r\n    redirect = () => {\r\n        const date = this.props.dateObject.date;\r\n        this.props.redirect(this.props.history, `/Todo/${date}`);\r\n    }\r\n\r\n    showPopoverHandler = () => {\r\n        this.setState({ showPopover: true });\r\n    }\r\n\r\n    hidePopoverHandler = () => {\r\n        this.setState({ showPopover: false });\r\n    }\r\n\r\n    updateMoodHanlder = async (event, mood) => {\r\n        event.stopPropagation();\r\n        const newMoodColor = moodService.getMoodColor(mood);\r\n        this.setState({ moodColor: newMoodColor });\r\n        const date = this.props.dateObject.date;\r\n        moodService.updateMood(date, mood);\r\n    }\r\n\r\n    render() {\r\n        const todos = [];\r\n        if (this.props.dateObject.todos.length > 0) {\r\n            this.props.dateObject.todos.forEach((todo, index) => {\r\n                todos.push(<CalendarTodo backgroundColor={todo.label.backgroundColor} key={index} />)\r\n            });\r\n        }\r\n\r\n        const date = this.props.dateObject;\r\n        let boxClass = date.currentMonth ? classes.Current : classes.Box;\r\n        let numberClass = date.isActive ? classes.Active : classes.Number;\r\n\r\n        let popover = null;\r\n        if (this.state.showPopover) {\r\n            popover = (\r\n                <div className={classes.Popover}>\r\n                    <div onClick={(event) => this.updateMoodHanlder(event, 'Miserable')} className={`${classes.PopoverBox} ${classes.Miserable}`}></div>\r\n                    <div onClick={(event) => this.updateMoodHanlder(event, 'Bad')} className={`${classes.PopoverBox} ${classes.Bad}`}></div>\r\n                    <div onClick={(event) => this.updateMoodHanlder(event, 'Average')} className={`${classes.PopoverBox} ${classes.Average}`}></div>\r\n                    <div onClick={(event) => this.updateMoodHanlder(event, 'Good')} className={`${classes.PopoverBox} ${classes.Good}`}></div>\r\n                    <div onClick={(event) => this.updateMoodHanlder(event, 'Excellent')} className={`${classes.PopoverBox} ${classes.Excellent}`}></div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <td className={boxClass} onClick={this.redirect}>\r\n                <span className={classes.FirstRow}>\r\n                    <div className={classes.LeftBox}>\r\n                        <div onMouseLeave={this.hidePopoverHandler} onMouseOver={this.showPopoverHandler} style={{ backgroundColor: this.state.moodColor }} className={classes.ColorBox}>\r\n                            {popover}\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.RightBox}>\r\n                        <p className={numberClass}>{date.day}</p>\r\n                    </div>\r\n                </span>\r\n                <span className={classes.SecondRow}>\r\n                    {todos}\r\n                </span>\r\n            </td>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(CalendarBox);","import React, { Component } from 'react';\r\nimport classes from './CalendarRow.module.css';\r\n\r\nimport CalendarBox from './CalendarBox/CalendarBox';\r\n\r\nclass CalendarRow extends Component {\r\n    render() {\r\n        const boxArray = [];\r\n        if(this.props.days.length > 0) {\r\n            for(let i = 0; i < this.props.days.length; i++) {\r\n                const date = this.props.days[i];\r\n                boxArray.push(<CalendarBox redirect={this.props.redirect} key={i} dateObject={date} />);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <tr className={classes.Row}>\r\n                {boxArray}\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CalendarRow;","import React, { Component } from 'react';\r\nimport classes from './Calendar.module.css';\r\nimport calendarService from '../../services/calendarService.js';\r\nimport moodService from '../../services/moodService.js';\r\nimport todoService from '../../services/todoService.js';\r\n\r\nimport CalendarRow from './CalendarRow/CalendarRow';\r\nimport Spinner from '../Spinner/Spinner';\r\nimport Alert from '../Alert/Alert';\r\n\r\nclass Calendar extends Component {\r\n    state = {\r\n        isLoading: false,\r\n        errorMessages: [],\r\n        days: [],\r\n        date: {}\r\n    };\r\n\r\n    async componentDidMount() {\r\n        await this.updateDate();\r\n    }\r\n\r\n    updateDate = async () => {\r\n        // * get current date\r\n        // * get days for the calendar\r\n        // * get todos for the days\r\n\r\n        this.setState({ isLoading: true });\r\n\r\n        const currentDate = calendarService.getCurrentDate();\r\n        const { year, month } = currentDate;\r\n        const currentDays = calendarService.getCalendarDays(year, month);\r\n\r\n        const startDate = currentDays[0].date;\r\n        const endDate = currentDays[currentDays.length - 1].date;\r\n\r\n        const todosResponse = await todoService.getTodosForDates(startDate, endDate);\r\n        if(!todosResponse.successfull) {\r\n            this.setState({\r\n                isLoading: false,\r\n                errorMessages: [...todosResponse.errorMessages]\r\n            });\r\n            return;\r\n        }\r\n\r\n        const dateTodos = todosResponse.data.todos;\r\n        dateTodos.forEach(todo => {\r\n            const day = currentDays.find(day => day.date === todo.date);\r\n            if(day.todos.length < 3) {\r\n                day.todos.push(todo);\r\n            }\r\n        }); \r\n\r\n        // update moods\r\n        const rawDayMoodsResponse = await moodService.getForRange(startDate, endDate);\r\n        const dayMoodsResponse = rawDayMoodsResponse.data.response;\r\n        const dayMoods = dayMoodsResponse.data.dateMoods;\r\n        dayMoods.forEach(dateMood => {\r\n            const date = currentDays.find(day => day.date === dateMood.date);\r\n            date.moodColor = moodService.getMoodColor(dateMood.mood);\r\n        });\r\n\r\n        this.setState({\r\n            isLoading: false,\r\n            days: [...currentDays],\r\n            date: currentDate\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n        if(this.state.errorMessages.length > 0) {\r\n            const alerts = this.state.errorMessages.map((message, index) => {\r\n                return <Alert alert='danger' message={message} key={index} />\r\n            });\r\n\r\n            return alerts;\r\n        }\r\n\r\n        if(this.state.isLoading) {\r\n            return <Spinner />\r\n        }\r\n\r\n        // display days\r\n        const calendarRows = [];\r\n        if (this.state.days.length !== 0) {\r\n            let next = 0;\r\n            for (let i = 0; i < 6; i++) {\r\n                const currentRowDays = [];\r\n                for (let j = 0; j < 7; j++) {\r\n                    currentRowDays.push(this.state.days[next++]);\r\n                }\r\n\r\n                calendarRows.push(<CalendarRow redirect={this.props.redirect} key={i} days={currentRowDays} />);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <table className={classes.Calendar}>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Mon</th>\r\n                        <th>Tue</th>\r\n                        <th>Wed</th>\r\n                        <th>Thu</th>\r\n                        <th>Fri</th>\r\n                        <th>Sat</th>\r\n                        <th>Sun</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {calendarRows}\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Calendar;","import React, { Component } from 'react';\r\nimport classes from './Todo.module.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheckSquare, faSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport todoService from '../../../services/todoService.js';\r\n\r\nclass Todo extends Component {\r\n    state = {\r\n        isChecked: this.props.isChecked,\r\n        showDescription: false\r\n    }\r\n\r\n    changeCheckedHandler = async () => {\r\n        const newCheckState = !this.state.isChecked;\r\n        const id = this.props.id;\r\n        this.setState({ isChecked: newCheckState });\r\n        await todoService.changeTodoCheckedState(id, newCheckState);\r\n    }\r\n\r\n    toggleDescriptionHandler = () => {\r\n        this.setState({ showDescription: !this.state.showDescription });\r\n    }\r\n\r\n    render() {\r\n        const nextIcon = this.state.isChecked ? faCheckSquare : faSquare;\r\n        let descriptionElement = null;\r\n        if (this.state.showDescription) {\r\n            descriptionElement = (\r\n                <div className={classes.TodoDescription}>\r\n                    {this.props.description}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div onClick={this.toggleDescriptionHandler} style={this.props.label} className={classes.Todo}>\r\n                    <div style={{ color: this.props.label.color }} className={classes.TodoText}>\r\n                        {this.props.title}\r\n                    </div>\r\n                    <FontAwesomeIcon onClick={this.changeCheckedHandler} icon={nextIcon} className={classes.Icon} />\r\n                </div>\r\n                {descriptionElement}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Todo;","import React, { Component } from 'react';\r\nimport classes from './TodoForm.module.css';\r\n\r\nclass TodoForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.titleInput = React.createRef(null);\r\n        this.descriptionTextArea = React.createRef(null);\r\n    }\r\n    \r\n    createTodoHandler = () => {\r\n        const title = this.titleInput.current.value;\r\n        const description = this.descriptionTextArea.current.value;\r\n\r\n        if(!title || !description) {\r\n            alert('Title and description are required!');\r\n            return;\r\n        }\r\n\r\n        this.titleInput.current.value = '';\r\n        this.descriptionTextArea.current.value = '';\r\n\r\n        this.props.create(title, description);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.TodoForm}>\r\n                <label htmlFor='title' className={classes.TitleLabel}>Title</label>\r\n                <input type='text' placeholder='Something very important' id='title' className={classes.TitleInput} ref={this.titleInput} />\r\n                <textarea className={classes.Textarea} placeholder='Describe the very important thing' ref={this.descriptionTextArea}></textarea>\r\n                <button onClick={this.createTodoHandler} className={classes.CreateButton}>Create</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoForm;","import axios from '../axios.js';\r\n\r\nasync function getAll() {\r\n    const response = await axios.get('/labels/all');\r\n    const labelsResponse = response.data.response;\r\n    return labelsResponse;\r\n}\r\n\r\nconst labelService = {\r\n    getAll\r\n};\r\n\r\nexport default labelService;","import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\r\nimport classes from './Label.module.css';\r\n\r\nclass Label extends Component {\r\n    state = {\r\n        isSelected: this.props.isSelected\r\n    }\r\n\r\n    changeLabelHandler = () => {\r\n        const label = {\r\n            backgroundColor: this.props.backgroundColor,\r\n            color: this.props.color,\r\n            text: this.props.text\r\n        };\r\n\r\n        this.props.change(label);\r\n    }\r\n\r\n    render() {\r\n        const style = {\r\n            backgroundColor: this.props.backgroundColor,\r\n            color: this.props.color\r\n        };\r\n\r\n        const checkedElement = this.props.isSelected ? <FontAwesomeIcon icon={faCheck} className={classes.Icon} style={{ color: this.props.color }}/> : null;\r\n\r\n        return (\r\n            <div onClick={this.changeLabelHandler} className={classes.Label}>\r\n                {checkedElement}\r\n                <p style={style} className={classes.LabelText}>{this.props.text}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Label;","import React, { Component } from 'react';\r\nimport labelsService from '../../../services/labelService.js';\r\nimport classes from './TodoLabels.module.css';\r\n\r\nimport Label from './Label/Label';\r\nimport Alert from '../../Alert/Alert';\r\nimport Spinner from '../../Spinner/Spinner';\r\n\r\nclass TodoLabels extends Component {\r\n    state = {\r\n        isLoading: true,\r\n        errorMessages: [],\r\n        labels: []\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.setState({ isLoading: true });\r\n        const labelsResponse = await labelsService.getAll();\r\n\r\n        if(!labelsResponse.successfull) {\r\n            this.setState({\r\n                isLoading: false,\r\n                errorMessages: [...labelsResponse.errorMessages]\r\n            });\r\n        } else {\r\n            const labels = labelsResponse.data.labels.map(label => {\r\n                label.isSelected = false;\r\n                return label;\r\n            })\r\n\r\n            this.setState({\r\n                isLoading: false,\r\n                labels: [...labels]\r\n            });\r\n        }\r\n    }\r\n\r\n    changeLabelHandler = (label) => {\r\n        const labelsCopy = this.state.labels.slice();\r\n        const selectedLabel = labelsCopy.find(labelCopy => labelCopy.backgroundColor === label.backgroundColor && labelCopy.color === label.color);\r\n\r\n        for(const labelCopy of labelsCopy) {\r\n            labelCopy.isSelected = false;\r\n        }\r\n\r\n        selectedLabel.isSelected = true;\r\n        this.setState({ labels: [...labelsCopy ]});\r\n\r\n        this.props.change(label);\r\n    }\r\n\r\n    render() {\r\n        const spinner = this.state.isLoading ? <Spinner /> : null;\r\n        const alerts = [];\r\n        this.state.errorMessages.forEach(message => {\r\n            alerts.push(<Alert alert='danger' message={message} />);\r\n        });\r\n\r\n        const labels = [];\r\n        this.state.labels.map((label, index) => \r\n            labels.push(<Label change={this.changeLabelHandler} backgroundColor={label.backgroundColor} color={label.color} text={label.text} key={index} isSelected={label.isSelected} />));\r\n\r\n        return (\r\n            <div className={classes.TodoLabels}>\r\n                {alerts}\r\n                {spinner}\r\n                {labels}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoLabels;","import React, { Component } from 'react';\r\nimport todoService from '../../services/todoService.js';\r\nimport calendarService from '../../services/calendarService.js';\r\nimport moodService from '../../services/moodService.js';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport classes from './TodoContainer.module.css';\r\n\r\nimport Alert from '../Alert/Alert';\r\nimport Spinner from '../Spinner/Spinner';\r\nimport Todo from './Todo/Todo';\r\nimport TodoForm from './TodoForm/TodoForm';\r\nimport TodoLabels from './TodoLabels/TodoLabels';\r\n\r\nclass TodoContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            errorMessages: [],\r\n            showCreateForm: false,\r\n            todos: [],\r\n            currentDate: null,\r\n            selectedLabel: null,\r\n            currentMood: null\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        // * get select date\r\n        // * get todos for the selected date\r\n        // * update state\r\n\r\n        const date = this.props.match.params.date;\r\n\r\n        this.setState({ isLoading: true });\r\n        const todosResponse = await todoService.getDailyTodos(date);\r\n\r\n        if (!todosResponse.successfull) {\r\n            this.setState({\r\n                errorMessages: [...todosResponse.errorMessages],\r\n                isLoading: false,\r\n                currentDate: date\r\n            });\r\n        } else {\r\n            const rawMoodResponse = await moodService.getForDay(date);\r\n            const moodResponse = rawMoodResponse.data.response;\r\n            if (!moodResponse.successfull) {\r\n                this.setState({\r\n                    errorMessages: [...moodResponse.errorMessages],\r\n                    isLoading: false,\r\n                    currentDate: date\r\n                });\r\n            }\r\n\r\n            const mood = moodResponse.data.moodText;\r\n\r\n            this.setState({\r\n                todos: [...todosResponse.data.todos],\r\n                isLoading: false,\r\n                currentDate: date,\r\n                currentMood: mood\r\n            });\r\n        }\r\n    }\r\n\r\n    createTodoHandler = async (title, description) => {\r\n        // validate label\r\n        if (!this.state.selectedLabel) {\r\n            alert('Choose label');\r\n            return;\r\n        }\r\n\r\n        // validate title\r\n        if (!title) {\r\n            alert('Title is required!');\r\n            return;\r\n        } else {\r\n            title = title.trim();\r\n            if (title.length < 1) {\r\n                alert('Title is required!');\r\n                return;\r\n            }\r\n        }\r\n\r\n        // validate description\r\n        if (!description) {\r\n            alert('Description is required!');\r\n            return;\r\n        } else {\r\n            description = description.trim();\r\n            if (description.length < 1) {\r\n                alert('Description is required!');\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.setState({ isLoading: true });\r\n\r\n        const createTodoResponse = await todoService.create({\r\n            title,\r\n            description,\r\n            labelText: this.state.selectedLabel.text,\r\n            date: this.state.currentDate\r\n        });\r\n\r\n        const todoResponse = createTodoResponse.data.response;\r\n\r\n        if (!todoResponse.successfull) {\r\n            this.setState({\r\n                errorMessages: [...todoResponse.errorMessages],\r\n                isLoading: false,\r\n                selectedLabel: null,\r\n                showCreateForm: false\r\n            });\r\n        } else {\r\n            const createdTodo = todoResponse.data.todo;\r\n            createdTodo.label = this.state.selectedLabel;\r\n            this.setState({\r\n                isLoading: false,\r\n                todos: [...this.state.todos, createdTodo],\r\n                selectedLabel: null,\r\n                showCreateForm: false\r\n            });\r\n        }\r\n    }\r\n\r\n    changeTodoLabelHandler = (label) => {\r\n        this.setState({ selectedLabel: label });\r\n    }\r\n\r\n    toggleCreateFormVisibility = () => {\r\n        this.setState({ showCreateForm: !this.state.showCreateForm });\r\n    }\r\n\r\n    updateCurrentMood = (event) => {\r\n        const selectedMood = event.target.value;\r\n        moodService.updateMood(this.state.currentDate, selectedMood);\r\n        this.setState({ currentMood: selectedMood });\r\n    }\r\n\r\n    render() {\r\n        // display spinner while loading\r\n        if (this.state.isLoading) {\r\n            return <Spinner />\r\n        }\r\n\r\n        // display alerts\r\n        const alerts = [];\r\n        this.state.errorMessages.forEach((message, index) => {\r\n            alerts.push(<Alert alert='danger' message={message} key={index} />);\r\n        });\r\n        if (alerts.length > 0) {\r\n            return alerts;\r\n        }\r\n\r\n        let createForm = null;\r\n        if (this.state.showCreateForm) {\r\n            createForm = (\r\n                <div className={classes.Form}>\r\n                    <TodoForm create={this.createTodoHandler} />\r\n                    <TodoLabels change={this.changeTodoLabelHandler} />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        // display todos for current date\r\n        let todos = [];\r\n        this.state.todos.forEach((todo) => {\r\n            const element = <Todo title={todo.title} label={todo.label} isChecked={todo.isChecked} key={todo.id} id={todo.id} description={todo.description} />\r\n            todos.push(element);\r\n        });\r\n\r\n        // display element if there are not todos\r\n        let noTodosElement = null;\r\n        if (this.state.todos.length === 0) {\r\n            noTodosElement = <h3 className={classes.NoTodos}>No created todos! Create one :)</h3>\r\n        }\r\n\r\n        let stringDate = this.state.currentDate ? calendarService.convertFromNumber(this.state.currentDate) : null;\r\n\r\n        return (\r\n            <div className={classes.TodoContainer}>\r\n                <span className={classes.CurrentDate}>Current date: {stringDate}</span>\r\n\r\n                <div className={classes.MoodContainer}>\r\n                    <span className={classes.MoodText}>How's your day going: </span>\r\n                    <select onChange={this.updateCurrentMood} defaultValue={this.state.currentMood} ref={this.moodSelect} className={classes.MoodSelect}>\r\n                        <option className={classes.Excellent}>Excellent</option>\r\n                        <option className={classes.Good}>Good</option>\r\n                        <option className={classes.Average}>Average</option>\r\n                        <option className={classes.Bad}>Bad</option>\r\n                        <option className={classes.Miserable}>Miserable</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div className={classes.TodoSection}>\r\n                    <span className={classes.TodoSectionText}>Todo section:</span>\r\n                    <FontAwesomeIcon onClick={this.toggleCreateFormVisibility} icon={faPlusCircle} className={classes.Add} />\r\n\r\n                    {createForm}\r\n\r\n                    <div className={classes.Todos}>\r\n                        {todos}\r\n                    </div>\r\n\r\n                    {noTodosElement}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoContainer;","import React, { Component } from 'react';\r\nimport classes from './DayBox.module.css';\r\n\r\nimport calendarService from '../../../../../services/calendarService.js';\r\n\r\nclass DayBox extends Component {\r\n    state = {\r\n        showPopup: false\r\n    }\r\n\r\n    hoverHandler = () => {\r\n        this.setState({ showPopup: true });\r\n    }\r\n\r\n    hoverLeaveHandler = () => {\r\n        this.setState({ showPopup: false });\r\n    }\r\n\r\n    redirect = () => {\r\n        const date = this.props.date;\r\n        this.props.redirect(this.props.history, `/Todo/${date}`);\r\n    }\r\n\r\n    render() {\r\n        const moodColor = this.props.moodColor;\r\n        let popup = null;\r\n        if (this.state.showPopup) {\r\n            const stringDate = calendarService.convertFromNumber(this.props.date);\r\n\r\n            popup = (\r\n                <div className={classes.Popover}>{stringDate}</div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div\r\n                onMouseOver={this.hoverHandler}\r\n                onMouseLeave={this.hoverLeaveHandler}\r\n                onClick={this.redirect}\r\n                style={{ backgroundColor: moodColor }}\r\n                className={classes.DayBox}>\r\n                {popup}\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default DayBox;","import React, { Component } from 'react';\r\nimport classes from './WeekRow.module.css';\r\n\r\nimport moodService from '../../../../services/moodService.js';\r\n\r\nimport DayBox from './DayBox/DayBox';\r\n\r\nclass WeekRow extends Component {\r\n    render() {\r\n        const dayBoxes = [];\r\n        this.props.dayMoods.forEach(dayMood => {\r\n            const currentMood = moodService.getMoodColor(dayMood.mood);\r\n            dayBoxes.push(<DayBox {...this.props} key={dayMood.date} date={dayMood.date} moodColor={currentMood} />);\r\n        });\r\n\r\n        return (\r\n            <div className={classes.WeekRow}>\r\n                {dayBoxes}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WeekRow;","import React, { Component } from 'react';\r\nimport classes from './MonthBox.module.css';\r\n\r\nimport calendarService from '../../../services/calendarService.js';\r\nimport moodService from '../../../services/moodService.js';\r\n\r\nimport WeekRow from './WeekRow/WeekRow';\r\nimport Spinner from '../../Spinner/Spinner';\r\n\r\nclass MonthBox extends Component {\r\n    state = {\r\n        isLoading: false,\r\n        errorMessages: [],\r\n        monthDays: []\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.setState({ isLoading: true });\r\n\r\n        const { year, month } = this.props;\r\n        const { from, to } = calendarService.getMonthData(year, month);\r\n\r\n        const rawMoodResponse = await moodService.getForRange(from, to);\r\n        const moodResponse = rawMoodResponse.data.response;\r\n        const dateMoods = moodResponse.data.dateMoods;\r\n\r\n        const monthDays = [];\r\n        for (let i = from - 1; i <= to; i++) {\r\n            const currentDateMood = dateMoods.find(dateMood => dateMood.date === i);\r\n            let mood = 'Missing';\r\n            if (currentDateMood !== undefined) {\r\n                mood = currentDateMood.mood;\r\n            }\r\n\r\n            monthDays.push({\r\n                date: i,\r\n                mood\r\n            });\r\n        }\r\n\r\n        if (!moodResponse.successfull) {\r\n            this.setState({\r\n                isLoading: false,\r\n                errorMessages: [...moodResponse.errorMessages]\r\n            });\r\n        } else {\r\n            this.setState({\r\n                isLoading: false,\r\n                monthDays: [...monthDays]\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const spinner = this.state.isLoading ? <Spinner /> : null;\r\n        const weekRows = [];\r\n\r\n        if (this.state.monthDays.length > 0) {\r\n            let counter = 0;\r\n\r\n            for (let week = 0; week < 5; week++) {\r\n                const dayMoods = [];\r\n                for (let day = 0; day < 7; day++) {\r\n                    counter++;\r\n                    if (counter === this.state.monthDays.length) {\r\n                        break;\r\n                    }\r\n\r\n                    const { date, mood } = this.state.monthDays[counter];\r\n                    const dateMood = {\r\n                        date,\r\n                        mood\r\n                    };\r\n\r\n                    dayMoods.push(dateMood);\r\n                }\r\n\r\n                weekRows.push(<WeekRow {...this.props} dayMoods={dayMoods} key={week} />);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className={classes.MonthBox}>\r\n                {spinner}\r\n                {weekRows}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MonthBox;","import React, { Component } from 'react';\r\nimport classes from './MonthRow.module.css';\r\n\r\nimport MonthBox from '../MonthBox/MonthBox';\r\n\r\nclass MonthRow extends Component {\r\n\r\n    render() {\r\n        const monthBoxes = [];\r\n        for(let i = this.props.from; i <= this.props.to; i++) {\r\n            monthBoxes.push(<MonthBox {...this.props} year={this.props.year} key={i} month={i} />)\r\n        }\r\n\r\n        return (\r\n            <div className={classes.MonthRow}>\r\n                {monthBoxes}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MonthRow;","import React, { Component } from 'react';\r\n\r\nimport calendarService from '../../services/calendarService.js';\r\n\r\nimport MonthRow from './MonthRow/MonthRow';\r\n\r\nclass Overview extends Component {\r\n\r\n    render() {\r\n        const currentYear = calendarService.getCurrentYear();\r\n\r\n        return (\r\n            <div>\r\n                <MonthRow {...this.props} year={currentYear} from={1} to={4}/>\r\n                <MonthRow {...this.props} year={currentYear} from={5} to={8}/>\r\n                <MonthRow {...this.props} year={currentYear} from={9} to={12}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Overview;","import React, { Component } from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport authService from './services/authService.js';\n\nimport Navigation from './components/Navigation/Navigation';\nimport Login from './components/Login/Login';\nimport Register from './components/Register/Register';\nimport Calendar from './components/Calendar/Calendar';\nimport TodoContainer from './components/TodoContainer/TodoContainer';\nimport Overview from './components/Overview/Overview.js';\n\nclass App extends Component {\n  state = {\n    isAuthenticated: false\n  }\n\n  componentDidMount() {\n    const isAuthenticated = authService.isUserAuthenticated();\n    this.setState({ isAuthenticated: isAuthenticated });\n  }\n\n  redirect = (history, page, authenticate) => {\n    history.push(page);\n    sessionStorage.setItem('page', page);\n    if(authenticate !== undefined) {\n      this.setState({ isAuthenticated: authenticate });\n    }\n  }\n\n  render() {\n    const requireAuthentication = (Component, props) => {\n      // middleware function that checks if the user is authenticated\n      // if the user is not authenticated, he is redirected to Login page\n      // otherwise the desired component is rendered\n\n      if (!authService.isUserAuthenticated()) {\n        props.history.push('/Login');\n      }\n\n      return <Component redirect={this.redirect} {...props} />\n    }\n\n    const requireAnonymous = (Component, props) => {\n      // middleware function that checks if the user is not authenticated\n      // if he is not, then the app renderes the desired component\n      // if he is authenticated, he is redirected to Calendar component\n\n      if (authService.isUserAuthenticated()) {\n        props.history.push('/Calendar');\n      }\n\n      return <Component redirect={this.redirect} {...props} />\n    }\n\n    return (\n      <div>\n        <HashRouter>\n          <Navigation redirect={this.redirect} isAuthenticated={this.state.isAuthenticated} />\n          <Switch>\n            <Route path='/Login' exact render={(props) => requireAnonymous(Login, props)} />\n            <Route path='/Register' exact render={(props) => requireAnonymous(Register, props)} />\n            <Route path='/Calendar' exact render={(props) => requireAuthentication(Calendar, props)} />\n            <Route path='/Todo/:date' exact render={(props) => requireAuthentication(TodoContainer, props)} />\n            <Route path='/Overview' exact render={(props) => requireAuthentication(Overview, props)} />\n            <Route path='/' exact render={(props) => requireAuthentication(Calendar, props)} /> \n          </Switch>\n        </HashRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}