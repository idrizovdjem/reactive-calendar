{"version":3,"sources":["components/Navigation/Navigation.module.css","components/TodoContainer/TodoContainer.module.css","components/Calendar/CalendarRow/CalendarBox/CalendarBox.module.css","components/TodoContainer/TodoForm/TodoForm.module.css","components/TodoContainer/Todo/Todo.module.css","components/TodoContainer/TodoLabels/Label/Label.module.css","components/Login/Login.module.css","components/Register/Register.module.css","components/Spinner/Spinner.module.css","components/Calendar/Calendar.module.css","components/Calendar/CalendarRow/CalendarRow.module.css","components/Calendar/CalendarRow/CalendarBox/CalendarTodo/CalendarTodo.module.css","components/TodoContainer/TodoLabels/TodoLabels.module.css","axios.js","services/authService.js","components/Navigation/Navigation.js","components/Alert/Alert.js","components/Spinner/Spinner.js","components/Login/Login.js","components/Register/Register.js","services/calendarService.js","services/moodService.js","services/todoService.js","components/Calendar/CalendarRow/CalendarBox/CalendarTodo/CalendarTodo.js","components/Calendar/CalendarRow/CalendarBox/CalendarBox.js","components/Calendar/CalendarRow/CalendarRow.js","components/Calendar/Calendar.js","components/TodoContainer/Todo/Todo.js","components/TodoContainer/TodoForm/TodoForm.js","services/labelService.js","components/TodoContainer/TodoLabels/Label/Label.js","components/TodoContainer/TodoLabels/TodoLabels.js","components/TodoContainer/TodoContainer.js","App.js","index.js"],"names":["module","exports","axios","defaults","baseURL","data","a","post","response","result","successfull","persistUserData","authToken","localStorage","setItem","authService","isUserAuthenticated","getItem","register","login","logout","removeItem","Navigation","state","showMobile","redirect","page","props","history","setState","toggleMobileButtons","mobileButtons","this","isAuthenticated","onClick","className","classes","MobileLink","buttons","NavigationButton","to","mobileButtonsStyle","display","Logo","Burger","Slice","style","MobileButtons","Component","withRouter","Alert","alert","role","message","Spinner","Loader","Login","event","preventDefault","email","emailInput","current","value","trim","password","passwordInput","length","isLoading","errorMessages","React","createRef","spinner","alerts","map","index","push","LoginContainer","Slogan","type","placeholder","ref","Register","username","usernameInput","repeatPassword","repeatPasswordInput","RegisterContainer","dayjs","require","weekday","weekOfYear","calendarService","convertFromNumber","date","stringDate","toString","year","substr","month","day","getCalendarDays","extend","currentDate","totalDays","daysInMonth","start","max","active","prevDate","prevMonthDays","previousDifference","previous","from","next","dateObject","days","Number","previousYear","previousMonth","i","parseInt","currentMonth","isActive","todos","currentDateObject","nextYear","nextMonth","transformToArray","getCurrentDate","format","requestData","buildRequestData","mood","startDate","endDate","moodService","getForDay","updateMood","getForRange","todosResponse","todoId","newCheckState","todoService","changeTodoCheckedState","getDailyTodos","getTodosForDates","create","CalendarTodo","backgroundColor","TodoRow","CalendarBox","moodColor","forEach","todo","label","boxClass","Current","Box","numberClass","Active","FirstRow","LeftBox","ColorBox","RightBox","SecondRow","CalendarRow","boxArray","Row","Calendar","updateDate","currentDays","find","rawDayMoodsResponse","dayMoodsResponse","dateMoods","dateMood","getMoodColor","calendarRows","currentRowDays","j","Todo","isChecked","changeCheckedHandler","id","nextIcon","faCheckSquare","faSquare","color","TodoText","title","icon","Icon","TodoForm","createTodoHandler","titleInput","description","descriptionTextArea","htmlFor","TitleLabel","TitleInput","Textarea","CreateButton","get","labelsResponse","labelService","getAll","Label","isSelected","changeLabelHandler","text","change","checkedElement","faCheck","LabelText","TodoLabels","labels","labelsCopy","slice","selectedLabel","labelCopy","labelsService","TodoContainer","labelText","createTodoResponse","todoResponse","createdTodo","showCreateForm","changeTodoLabelHandler","toggleCreateFormVisibility","updateCurrentMood","selectedMood","target","currentMood","match","params","rawMoodResponse","moodResponse","moodText","createForm","Form","element","noTodosElement","NoTodos","CurrentDate","MoodContainer","MoodText","onChange","defaultValue","moodSelect","MoodSelect","Excellent","Good","Average","Bad","Miserable","TodoSection","TodoSectionText","faPlusCircle","Add","Todos","App","authenticate","sessionStorage","undefined","requireAuthentication","requireAnonymous","path","exact","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.76f80d0a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navigation\":\"Navigation_Navigation__9z3ST\",\"Logo\":\"Navigation_Logo__1v8mo\",\"NavigationButton\":\"Navigation_NavigationButton__omDWX\",\"Burger\":\"Navigation_Burger__1IBBq\",\"Slice\":\"Navigation_Slice__3Sjis\",\"MobileButtons\":\"Navigation_MobileButtons__2O2wV\",\"MobileLink\":\"Navigation_MobileLink__Aoe8S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TodoContainer\":\"TodoContainer_TodoContainer__3HNq1\",\"CurrentDate\":\"TodoContainer_CurrentDate__hNhhc\",\"MoodContainer\":\"TodoContainer_MoodContainer__1Z4Eu\",\"MoodSelect\":\"TodoContainer_MoodSelect__1FatK\",\"MoodText\":\"TodoContainer_MoodText__RIQZL\",\"TodoSection\":\"TodoContainer_TodoSection__1BGjt\",\"TodoSectionText\":\"TodoContainer_TodoSectionText___mZ_S\",\"Add\":\"TodoContainer_Add__1prwe\",\"Form\":\"TodoContainer_Form__3WvJa\",\"NoTodos\":\"TodoContainer_NoTodos__17Hgu\",\"Todos\":\"TodoContainer_Todos__1HawL\",\"Excellent\":\"TodoContainer_Excellent__2gk8w\",\"Good\":\"TodoContainer_Good__ZLZTq\",\"Average\":\"TodoContainer_Average__3BsJs\",\"Bad\":\"TodoContainer_Bad__18f-1\",\"Miserable\":\"TodoContainer_Miserable__3HQzt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Box\":\"CalendarBox_Box__2lRA8\",\"Current\":\"CalendarBox_Current__uOHXP\",\"FirstRow\":\"CalendarBox_FirstRow__TIB_Y\",\"SecondRow\":\"CalendarBox_SecondRow__hRFFL\",\"LeftBox\":\"CalendarBox_LeftBox__1XpaP\",\"RightBox\":\"CalendarBox_RightBox__14_hI\",\"ColorBox\":\"CalendarBox_ColorBox__8UtG5\",\"Number\":\"CalendarBox_Number__3CyHb\",\"Active\":\"CalendarBox_Active__1tYwI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TodoForm\":\"TodoForm_TodoForm__2kOIN\",\"TitleInput\":\"TodoForm_TitleInput__1Tv0r\",\"Textarea\":\"TodoForm_Textarea__1PNzc\",\"CreateButton\":\"TodoForm_CreateButton__1K4wB\",\"TitleLabel\":\"TodoForm_TitleLabel__2DRFM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Todo\":\"Todo_Todo__1tPH5\",\"TodoText\":\"Todo_TodoText__skZpM\",\"Icon\":\"Todo_Icon__2yVEi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"Label_Label__2R2-t\",\"LabelText\":\"Label_LabelText__3yDWO\",\"Icon\":\"Label_Icon__3Nmlq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LoginContainer\":\"Login_LoginContainer__3yL9J\",\"Slogan\":\"Login_Slogan__3O6SN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RegisterContainer\":\"Register_RegisterContainer__12l1T\",\"Slogan\":\"Register_Slogan__2kV9W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__1GOUL\",\"load6\":\"Spinner_load6__1rG_Z\",\"round\":\"Spinner_round__36623\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Calendar\":\"Calendar_Calendar__2wnNf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Row\":\"CalendarRow_Row__2VF7W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TodoRow\":\"CalendarTodo_TodoRow__14rYH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TodoLabels\":\"TodoLabels_TodoLabels__3b3Y_\"};","import axios from 'axios';\r\n\r\n// * production\r\naxios.defaults.baseURL = 'https://reactive-calendar.glitch.me';\r\n\r\n// * development\r\n//axios.defaults.baseURL = 'http://localhost:5000';\r\n\r\nexport default axios;","import axios from '../axios.js';\r\n\r\nasync function register(data) {\r\n    // send post request with data to the back-end api\r\n    // if the response is successfull then the authentication token\r\n    // is saved to the localStorage\r\n\r\n    const response = await axios.post('/users/register', data);\r\n    const result = response.data.response;\r\n    if(result.successfull) {\r\n        const authToken = result.data.authToken;\r\n        persistUserData(authToken);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nasync function login(data) {\r\n    // send post request with data to the back-end api\r\n    // if the response is successfull then the authentication token\r\n    // is saved to the localStorage\r\n\r\n    const response = await axios.post('/users/login', data);\r\n    const result = response.data.response;\r\n    if(result.successfull) {\r\n        const authToken = result.data.authToken;\r\n        persistUserData(authToken);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction persistUserData(authToken) {\r\n    // save authentication token to the localStorage\r\n    localStorage.setItem('authToken', authToken);\r\n}\r\n\r\nfunction logout() {\r\n    // remove the authentication token from the localStorage\r\n    localStorage.removeItem('authToken');\r\n}\r\n\r\nfunction isUserAuthenticated() {\r\n    // check if the localStorage contains authentication token\r\n    const authToken = localStorage.getItem('authToken');\r\n    return authToken !== null;\r\n}\r\n\r\nconst authService = {\r\n    isUserAuthenticated,\r\n    register,\r\n    login,\r\n    logout\r\n};\r\n\r\nexport default authService;","import React, { Component } from 'react';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport authService from '../../services/authService.js';\r\n\r\nimport classes from './Navigation.module.css';\r\n\r\nclass Navigation extends Component {\r\n    state = {\r\n        showMobile: false\r\n    }\r\n\r\n    redirect = (page) => {\r\n        this.props.redirect(this.props.history, page);\r\n    }\r\n\r\n    logout = () => {\r\n        this.setState({ showMobile: false });\r\n        authService.logout();\r\n        this.props.redirect(this.props.history, '/Login', false);\r\n    }\r\n\r\n    toggleMobileButtons = () => {\r\n        this.setState({ showMobile: !this.state.showMobile });\r\n    }\r\n\r\n    render() {\r\n        let mobileButtons = null;\r\n        if (this.props.isAuthenticated) {\r\n            mobileButtons = (\r\n                <span>\r\n                    <div onClick={() => this.redirect('/Calendar')} className={classes.MobileLink}>Calendar</div>\r\n                    <div onClick={() => this.redirect('/Overview')} className={classes.MobileLink}>Overview</div>\r\n                    <div onClick={this.logout} className={classes.MobileLink}>Logout</div>\r\n                </span>\r\n            );\r\n        } else {\r\n            mobileButtons = (\r\n                <span>\r\n                    <div onClick={() => this.redirect('/Login')} className={classes.MobileLink}>Login</div>\r\n                    <div onClick={() => this.redirect('/Register')} className={classes.MobileLink}>Register</div>\r\n                </span>\r\n            );\r\n        }\r\n\r\n        let buttons = null;\r\n        if (this.props.isAuthenticated) {\r\n            buttons = (\r\n                <span>\r\n                    <button onClick={this.logout} className={classes.NavigationButton}>Logout</button>\r\n                    <button onClick={() => this.redirect('/Overview')} className={classes.NavigationButton}>Overview</button>\r\n                    <button onClick={() => this.redirect('/Calendar')} className={classes.NavigationButton}>Calendar</button>\r\n                </span>\r\n            );\r\n        } else {\r\n            buttons = (\r\n                <span>\r\n                    <NavLink to='/Register' className={classes.NavigationButton}>Register</NavLink>\r\n                    <NavLink to='/Login' className={classes.NavigationButton}>Login</NavLink>\r\n                </span>\r\n            );\r\n        }\r\n\r\n        const mobileButtonsStyle = {\r\n            display: this.state.showMobile ? 'block' : 'none'\r\n        };\r\n\r\n        return (\r\n            <nav className={classes.Navigation}>\r\n                <span onClick={() => this.redirect('/')} to='/' className={classes.Logo}>Reactive Calendar</span>\r\n                {buttons}\r\n\r\n                <div onClick={this.toggleMobileButtons} className={classes.Burger}>\r\n                    <div className={classes.Slice}></div>\r\n                    <div className={classes.Slice}></div>\r\n                    <div className={classes.Slice}></div>\r\n                </div>\r\n\r\n                <div style={mobileButtonsStyle} className={classes.MobileButtons}>\r\n                    {mobileButtons}\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Navigation);","import React from 'react';\r\n\r\nconst Alert = (props) => {\r\n    return (\r\n        <div className={`alert alert-${props.alert}`} role=\"alert\">\r\n            {props.message}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Alert;","import React from 'react';\r\nimport classes from './Spinner.module.css';\r\n\r\nconst Spinner = () => <div className={classes.Loader}>Loading...</div>;\r\n\r\nexport default Spinner;","import React, { Component } from 'react';\r\nimport authService from '../../services/authService.js';\r\nimport classes from './Login.module.css';\r\n\r\nimport Alert from '../Alert/Alert';\r\nimport Spinner from '../Spinner/Spinner';\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isLoading: false,\r\n            errorMessages: []\r\n        };\r\n\r\n        this.emailInput = React.createRef(null);\r\n        this.passwordInput = React.createRef(null);\r\n    }\r\n\r\n    login = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const email = this.emailInput.current.value.trim();\r\n        const password = this.passwordInput.current.value.trim();\r\n\r\n        // * validations\r\n        if(!email || email.length < 5) {\r\n            alert('Email is required!');\r\n            return;\r\n        }\r\n\r\n        if(!password || password.length < 6) {\r\n            alert('Password must be at least 6 symbols!');\r\n            return;\r\n        }\r\n\r\n        this.setState({ isLoading: true });\r\n\r\n        const result = await authService.login({ email, password });\r\n\r\n        if (result.successfull) {\r\n            this.setState({ isLoading: false });\r\n            this.props.redirect(this.props.history, '/Calendar', true);\r\n        } else {\r\n            this.setState({\r\n                errorMessages: [...result.errorMessages],\r\n                isLoading: false\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const spinner = this.state.isLoading ? <Spinner /> : null;\r\n\r\n        const alerts = [];\r\n        this.state.errorMessages.map((message, index) =>\r\n            alerts.push(<Alert alert='danger' message={message} key={index} />));\r\n\r\n        return (\r\n            <div className={classes.LoginContainer}>\r\n                {spinner}\r\n                <p className={classes.Slogan}>Log in to your reactive account</p>\r\n                <form>\r\n                    {alerts}\r\n                    <div className=\"form-group\">\r\n                        <label>Email address</label>\r\n                        <input type=\"email\" className=\"form-control\" placeholder=\"Enter your email\" ref={this.emailInput} />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Password</label>\r\n                        <input type=\"password\" className=\"form-control\" placeholder=\"Enter your password\" ref={this.passwordInput} />\r\n                    </div>\r\n\r\n                    <button onClick={this.login} className=\"btn btn-primary w-100\">Log in</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport authService from '../../services/authService.js';\r\nimport classes from './Register.module.css';\r\n\r\nimport Alert from '../Alert/Alert';\r\nimport Spinner from '../Spinner/Spinner';\r\n\r\nclass Register extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isLoading: false,\r\n            errorMessages: []\r\n        };\r\n\r\n        this.emailInput = React.createRef(null);\r\n        this.usernameInput = React.createRef(null);\r\n        this.passwordInput = React.createRef(null);\r\n        this.repeatPasswordInput = React.createRef(null);\r\n    }\r\n\r\n    register = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const email = this.emailInput.current.value.trim();\r\n        const username = this.usernameInput.current.value.trim();\r\n        const password = this.passwordInput.current.value.trim();\r\n        const repeatPassword = this.repeatPasswordInput.current.value.trim();\r\n\r\n        // * validations\r\n        if (!email || email.length < 5) {\r\n            alert('Email is required!');\r\n            return;\r\n        }\r\n\r\n        if (!username || username.length < 5) {\r\n            alert('Username must be at least 5 symbols long!');\r\n            return;\r\n        }\r\n\r\n        if (!password || password.length < 6) {\r\n            alert('Password must be at least 6 symbols long!');\r\n            return;\r\n        }\r\n\r\n        if (password !== repeatPassword) {\r\n            alert('Passwords does not match!');\r\n            return;\r\n        }\r\n\r\n        this.setState({ isLoading: true });\r\n\r\n        const result = await authService.register({\r\n            email,\r\n            username,\r\n            password\r\n        });\r\n\r\n        if(result.successfull) {\r\n            this.setState({ isLoading: false });\r\n            this.props.redirect(this.props.history, '/Calendar', true);\r\n        } else {\r\n            this.setState({\r\n                isLoading: false,\r\n                errorMessages: [...result.errorMessages]\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const spinner = this.state.isLoading ? <Spinner /> : null;\r\n\r\n        const alerts = [];\r\n        this.state.errorMessages.map((message, index) =>\r\n            alerts.push(<Alert alert='danger' message={message} key={index} />));\r\n\r\n        return (\r\n            <div className={classes.RegisterContainer}>\r\n                {spinner}\r\n                <p className={classes.Slogan}>Register your reactive account</p>\r\n                <form>\r\n                    {alerts}\r\n                    <div className=\"form-group\">\r\n                        <label>Email address</label>\r\n                        <input type=\"email\" className=\"form-control\" placeholder=\"Enter your email\" ref={this.emailInput} />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Username</label>\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter your username\" ref={this.usernameInput} />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Password</label>\r\n                        <input type=\"password\" className=\"form-control\" placeholder=\"Enter your password\" ref={this.passwordInput} />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Repeat password</label>\r\n                        <input type=\"password\" className=\"form-control\" placeholder=\"Repeat your password\" ref={this.repeatPasswordInput} />\r\n                    </div>\r\n\r\n                    <button onClick={this.register} className=\"btn btn-primary w-100\">Register</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;","const dayjs = require('dayjs');\r\nconst weekday = require(\"dayjs/plugin/weekday\");\r\nconst weekOfYear = require(\"dayjs/plugin/weekOfYear\");\r\n\r\nfunction getCalendarDays(year, month) {\r\n    // get the current month days\r\n    // previous month last days and next month start days\r\n\r\n    dayjs.extend(weekday);\r\n    dayjs.extend(weekOfYear);\r\n\r\n    const result = {\r\n        year,\r\n        month,\r\n        current: {}\r\n    }\r\n\r\n    // get the total days in the current month\r\n    const currentDate = dayjs(`${year}/${month}/01`);\r\n    let totalDays = currentDate.daysInMonth();\r\n\r\n    result.current = {\r\n        start: currentDate.day(),\r\n        max: currentDate.daysInMonth(),\r\n        active: dayjs().date()\r\n    }\r\n\r\n    if(result.current.start === 0) {\r\n        // if the start day is sunday\r\n        // change the number, so the calendar works correctly\r\n        result.current.start = 7;\r\n    }\r\n\r\n    if (result.current.start !== 1) {\r\n        // check if the current month does not start in monday\r\n        // calculate how many days should the function take from\r\n        // the previous month\r\n        // * example (current month starts in Wednesday)\r\n        // * then the function takes the last two days from \r\n        // * the previous day\r\n\r\n        // take the total days in the previous month\r\n        const prevDate = dayjs(`${year}/${month - 1}/01`);\r\n        const prevMonthDays = prevDate.daysInMonth();\r\n        // calculate the difference\r\n        const previousDifference = prevMonthDays - (result.current.start - 2);\r\n        totalDays += (prevMonthDays - previousDifference) + 1;\r\n\r\n        result.previous = {\r\n            from: previousDifference,\r\n            to: prevDate.daysInMonth()\r\n        }\r\n    }\r\n\r\n    if (totalDays < 42) {\r\n        // check if the total days to this moment (current month days + previous month days) is less than 42\r\n        // ? 42 => (the calendar has 6 rows with 7 days)\r\n        // calculate how many days should be taken from next month\r\n        result.next = {\r\n            to: 42 - totalDays\r\n        }\r\n    }\r\n\r\n    // ? example of the current result\r\n    /* \r\n        result = {\r\n            current: {\r\n                start: 4, // ? (number between 1 and 7 (1-Mon, 7-Sun))\r\n                max: 30, // ? max days the current month has\r\n                active: 5 // ? the current date\r\n            },\r\n            previous: {\r\n                from: 29, // ? start date from previous month\r\n                to: 31 // ? end date from previous month\r\n            },\r\n            next: {\r\n                to: 9 // ? end date of next month\r\n            },\r\n            month: 4, // ? current month\r\n            year: 2021 // ? current year\r\n        }\r\n    */\r\n\r\n    // return the result object transformed to dates array\r\n    return transformToArray(result);\r\n}\r\n\r\nfunction transformToArray(dateObject) {\r\n    // transforms dateObject to dates array\r\n    const days = [];\r\n\r\n    // get the current year and month and convert them to numbers\r\n    let { year, month } = dateObject;\r\n    year = Number(year);\r\n    month = Number(month);\r\n\r\n    // * generate objects if there are previous month days\r\n    if(dateObject.previous) {\r\n        let previousYear, previousMonth;\r\n        \r\n        // get the previous month and year\r\n        if(month === 1) {\r\n            previousMonth = 12;\r\n            previousYear = year - 1;\r\n        } else {\r\n            previousMonth = month - 1;\r\n            if(previousMonth < 10) {\r\n                previousMonth = `0${previousMonth}`;\r\n            }\r\n            previousYear = year;\r\n        }\r\n\r\n        // generate the previous month dates\r\n        for(let i = dateObject.previous.from; i <= dateObject.previous.to; i++) {\r\n            days.push({\r\n                date: parseInt(`${previousYear}${previousMonth}${i}`),\r\n                currentMonth: false,\r\n                isActive: false,\r\n                day: i,\r\n                todos: []\r\n            });\r\n        }\r\n    }\r\n\r\n    // * generate current month days\r\n    let currentMonth = month;\r\n    if(currentMonth < 10) {\r\n        currentMonth = `0${month}`;\r\n    }\r\n\r\n    for(let i = 1; i <= dateObject.current.max; i++) {\r\n        // generate current month dates\r\n\r\n        let currentDate = i;\r\n        if(currentDate < 10) {\r\n            currentDate = `0${currentDate}`;\r\n        }\r\n\r\n        const currentDateObject = {\r\n            date: parseInt(`${year}${currentMonth}${currentDate}`),\r\n            currentMonth: true,\r\n            isActive: false,\r\n            day: i,\r\n            todos: []\r\n        };\r\n\r\n        // set the active flag to the current date\r\n        if(i === dateObject.current.active) {\r\n            currentDateObject.isActive = true;\r\n        }\r\n\r\n        days.push(currentDateObject);\r\n    }\r\n\r\n    // * generate objects if there are next month days\r\n    if(dateObject.next) {\r\n        // generate next month dates\r\n\r\n        // calculate next month and year\r\n        let nextYear, nextMonth;\r\n        if(month === 12) {\r\n            nextMonth = 1;\r\n            nextYear = year + 1;\r\n        } else {\r\n            nextMonth = month + 1;\r\n            nextYear = year;\r\n        }\r\n\r\n        if(nextMonth < 10) {\r\n            nextMonth = `0${nextMonth}`;\r\n        }\r\n\r\n        for(let i = 1; i <= dateObject.next.to; i++) {\r\n            // generate next month dates\r\n            const currentDate = `0${i}`;\r\n            const currentDateObject = {\r\n                date: parseInt(`${nextYear}${nextMonth}${currentDate}`),\r\n                currentMonth: false,\r\n                isActive: false,\r\n                day: i,\r\n                todos: []\r\n            };\r\n\r\n            days.push(currentDateObject);\r\n        }\r\n    }\r\n\r\n    return days;\r\n}\r\n\r\nfunction getCurrentDate() {\r\n    const year = dayjs().format('YYYY');\r\n    const month = dayjs().format('M');\r\n    const day = dayjs().format('D');\r\n\r\n    return {\r\n        year,\r\n        month,\r\n        day\r\n    }\r\n}\r\n\r\nfunction convertFromNumber(date) {\r\n    // get date as number (20210405) and returns '2021/04/05'\r\n\r\n    const stringDate = date.toString();\r\n    const year = stringDate.substr(0, 4);\r\n    const month = stringDate.substr(4, 2);\r\n    const day = stringDate.substr(6, 2);\r\n\r\n    return `${year}/${month}/${day}`;\r\n}\r\n\r\nconst calendarService = {\r\n    convertFromNumber,\r\n    getCalendarDays,\r\n    getCurrentDate\r\n};\r\n\r\nexport default calendarService;","import axios from '../axios.js';\r\n\r\nasync function getForDay(date) {\r\n    const requestData = buildRequestData({ date });\r\n    const response = await axios.post('/mood/getForDay', requestData);\r\n    return response;\r\n}\r\n\r\nasync function updateMood(date, mood) {\r\n    const requestData = buildRequestData({ date, mood });\r\n    const response = await axios.post('/mood/update', requestData);\r\n    return response;\r\n}\r\n\r\nasync function getForRange(startDate, endDate) {\r\n    const requestData = buildRequestData({ startDate, endDate });\r\n    const response = await axios.post('/mood/getForRange', requestData);\r\n    return response;\r\n}\r\n\r\nfunction buildRequestData(data) {\r\n    const authToken = localStorage.getItem('authToken');\r\n    data.authToken = authToken;\r\n    return data;\r\n}\r\n\r\nconst moodService = {\r\n    getForDay,\r\n    updateMood,\r\n    getForRange\r\n};\r\n\r\nexport default moodService;","import axios from '../axios.js';\r\n\r\nasync function getDailyTodos(date) {\r\n    // get todos for a date\r\n    // send authentication token and current date\r\n    const requestData = buildRequestData({ date });\r\n    const response = await axios.post('/todo/daily', requestData);\r\n    \r\n    const todosResponse = response.data.response;\r\n    return todosResponse;\r\n}\r\n\r\nasync function getTodosForDates(startDate, endDate) {\r\n    // get todos for range of two dates\r\n    const data = {\r\n        startDate,\r\n        endDate\r\n    };\r\n    const requestData = buildRequestData(data);\r\n    // send authentication token, startDate and endDate\r\n    const response = await axios.post('/todo/getForDateRange',requestData);\r\n\r\n    const todosResponse = response.data.response;\r\n    return todosResponse;\r\n}\r\n\r\nasync function create(data) {\r\n    const requestData = buildRequestData(data);\r\n    const response = await axios.post('/todo/create', requestData);\r\n    return response;\r\n}\r\n\r\nasync function changeTodoCheckedState(todoId, newCheckState) {\r\n    const requestData = buildRequestData({ todoId, newCheckState });\r\n    const response = await axios.post('/todo/updateCheck', requestData);\r\n    return response;\r\n}\r\n\r\nfunction buildRequestData(data) {\r\n    const authToken = localStorage.getItem('authToken');\r\n    data.authToken = authToken;\r\n    return data;\r\n}\r\n\r\nconst todoService = {\r\n    changeTodoCheckedState,\r\n    getDailyTodos,\r\n    getTodosForDates,\r\n    create\r\n};\r\n\r\nexport default todoService;","import React, { Component } from 'react';\r\nimport classes from './CalendarTodo.module.css';\r\n\r\nclass CalendarTodo extends Component {\r\n    render() {\r\n        const style = {\r\n            backgroundColor: this.props.backgroundColor\r\n        };\r\n\r\n        return (\r\n            <div style={style} className={classes.TodoRow}></div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CalendarTodo;","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport classes from './CalendarBox.module.css';\r\n\r\nimport CalendarTodo from './CalendarTodo/CalendarTodo'\r\n\r\nclass CalendarBox extends Component {\r\n    redirect = () => {\r\n        const date = this.props.dateObject.date;\r\n        this.props.redirect(this.props.history, `/Todo/${date}`);\r\n    }\r\n\r\n    render() {\r\n        const moodColor = this.props.dateObject.moodColor || '#ccff33';\r\n\r\n        const todos = [];\r\n        if(this.props.dateObject.todos.length > 0) {\r\n            this.props.dateObject.todos.forEach((todo, index) => {\r\n                todos.push(<CalendarTodo backgroundColor={todo.label.backgroundColor} key={index} />)\r\n            });\r\n        }\r\n\r\n        const date = this.props.dateObject;\r\n        let boxClass = date.currentMonth ? classes.Current : classes.Box;\r\n        let numberClass = date.isActive ? classes.Active : classes.Number;\r\n\r\n        return (\r\n            <td className={boxClass} onClick={this.redirect}>\r\n                <span className={classes.FirstRow}>\r\n                    <div className={classes.LeftBox}>\r\n                        <div style={{backgroundColor: moodColor}} className={classes.ColorBox}>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.RightBox}>\r\n                        <p className={numberClass}>{date.day}</p>\r\n                    </div>\r\n                </span>\r\n                <span className={classes.SecondRow}>\r\n                    {todos}\r\n                </span>\r\n            </td>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(CalendarBox);","import React, { Component } from 'react';\r\nimport classes from './CalendarRow.module.css';\r\n\r\nimport CalendarBox from './CalendarBox/CalendarBox';\r\n\r\nclass CalendarRow extends Component {\r\n    render() {\r\n        const boxArray = [];\r\n        if(this.props.days.length > 0) {\r\n            for(let i = 0; i < this.props.days.length; i++) {\r\n                const date = this.props.days[i];\r\n                boxArray.push(<CalendarBox redirect={this.props.redirect} key={i} dateObject={date} />);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <tr className={classes.Row}>\r\n                {boxArray}\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CalendarRow;","import React, { Component } from 'react';\r\nimport classes from './Calendar.module.css';\r\nimport calendarService from '../../services/calendarService.js';\r\nimport moodService from '../../services/moodService.js';\r\nimport todoService from '../../services/todoService.js';\r\n\r\nimport CalendarRow from './CalendarRow/CalendarRow';\r\nimport Spinner from '../Spinner/Spinner';\r\nimport Alert from '../Alert/Alert';\r\n\r\nclass Calendar extends Component {\r\n    state = {\r\n        isLoading: false,\r\n        errorMessages: [],\r\n        days: [],\r\n        date: {}\r\n    };\r\n\r\n    async componentDidMount() {\r\n        await this.updateDate();\r\n    }\r\n\r\n    updateDate = async () => {\r\n        // * get current date\r\n        // * get days for the calendar\r\n        // * get todos for the days\r\n\r\n        this.setState({ isLoading: true });\r\n\r\n        const currentDate = calendarService.getCurrentDate();\r\n        const { year, month } = currentDate;\r\n        const currentDays = calendarService.getCalendarDays(year, month);\r\n\r\n        const startDate = currentDays[0].date;\r\n        const endDate = currentDays[currentDays.length - 1].date;\r\n\r\n        const todosResponse = await todoService.getTodosForDates(startDate, endDate);\r\n        if(!todosResponse.successfull) {\r\n            this.setState({\r\n                isLoading: false,\r\n                errorMessages: [...todosResponse.errorMessages]\r\n            });\r\n            return;\r\n        }\r\n\r\n        const dateTodos = todosResponse.data.todos;\r\n        dateTodos.forEach(todo => {\r\n            const day = currentDays.find(day => day.date === todo.date);\r\n            if(day.todos.length < 3) {\r\n                day.todos.push(todo);\r\n            }\r\n        }); \r\n\r\n        // update moods\r\n        const rawDayMoodsResponse = await moodService.getForRange(startDate, endDate);\r\n        const dayMoodsResponse = rawDayMoodsResponse.data.response;\r\n        const dayMoods = dayMoodsResponse.data.dateMoods;\r\n        dayMoods.forEach(dateMood => {\r\n            const date = currentDays.find(day => day.date === dateMood.date);\r\n            date.moodColor = this.getMoodColor(dateMood.mood);\r\n        });\r\n\r\n        this.setState({\r\n            isLoading: false,\r\n            days: [...currentDays],\r\n            date: currentDate\r\n        });\r\n\r\n    }\r\n\r\n    getMoodColor = (mood) => {\r\n        switch(mood) {\r\n            case 'Excellent': return '#008000';\r\n            case 'Good': return '#38b000';\r\n            case 'Average': return '#ccff33';\r\n            case 'Bad': return '#f79d65';\r\n            case 'Miserable': return '#f27059';\r\n            default: return 'white';\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if(this.state.errorMessages.length > 0) {\r\n            const alerts = this.state.errorMessages.map((message, index) => {\r\n                return <Alert alert='danger' message={message} key={index} />\r\n            });\r\n\r\n            return alerts;\r\n        }\r\n\r\n        if(this.state.isLoading) {\r\n            return <Spinner />\r\n        }\r\n\r\n        // display days\r\n        const calendarRows = [];\r\n        if (this.state.days.length !== 0) {\r\n            let next = 0;\r\n            for (let i = 0; i < 6; i++) {\r\n                const currentRowDays = [];\r\n                for (let j = 0; j < 7; j++) {\r\n                    currentRowDays.push(this.state.days[next++]);\r\n                }\r\n\r\n                calendarRows.push(<CalendarRow redirect={this.props.redirect} key={i} days={currentRowDays} />);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <table className={classes.Calendar}>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Mon</th>\r\n                        <th>Tue</th>\r\n                        <th>Wed</th>\r\n                        <th>Thu</th>\r\n                        <th>Fri</th>\r\n                        <th>Sat</th>\r\n                        <th>Sun</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {calendarRows}\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Calendar;","import React, { Component } from 'react';\r\nimport classes from './Todo.module.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheckSquare, faSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport todoService from '../../../services/todoService.js';\r\n\r\nclass Todo extends Component {\r\n    state = {\r\n        isChecked: this.props.isChecked\r\n    }\r\n\r\n    changeCheckedHandler = async () => {\r\n        const newCheckState = !this.state.isChecked;\r\n        const id = this.props.id;\r\n        this.setState({ isChecked: newCheckState });\r\n        await todoService.changeTodoCheckedState(id, newCheckState);\r\n    }\r\n\r\n    render() {\r\n        const nextIcon = this.state.isChecked ? faCheckSquare : faSquare;\r\n\r\n        return (\r\n            <div style={this.props.label} className={classes.Todo}>\r\n                <div style={{ color: this.props.label.color }} className={classes.TodoText}>\r\n                    {this.props.title}\r\n                </div>\r\n                <FontAwesomeIcon onClick={this.changeCheckedHandler} icon={nextIcon} className={classes.Icon} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Todo;","import React, { Component } from 'react';\r\nimport classes from './TodoForm.module.css';\r\n\r\nclass TodoForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.titleInput = React.createRef(null);\r\n        this.descriptionTextArea = React.createRef(null);\r\n    }\r\n    \r\n    createTodoHandler = () => {\r\n        const title = this.titleInput.current.value;\r\n        const description = this.descriptionTextArea.current.value;\r\n\r\n        if(!title || !description) {\r\n            alert('Title and description are required!');\r\n            return;\r\n        }\r\n\r\n        this.titleInput.current.value = '';\r\n        this.descriptionTextArea.current.value = '';\r\n\r\n        this.props.create(title, description);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.TodoForm}>\r\n                <label htmlFor='title' className={classes.TitleLabel}>Title</label>\r\n                <input type='text' placeholder='Something very important' id='title' className={classes.TitleInput} ref={this.titleInput} />\r\n                <textarea className={classes.Textarea} placeholder='Describe the very important thing' ref={this.descriptionTextArea}></textarea>\r\n                <button onClick={this.createTodoHandler} className={classes.CreateButton}>Create</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoForm;","import axios from '../axios.js';\r\n\r\nasync function getAll() {\r\n    const response = await axios.get('/labels/all');\r\n    const labelsResponse = response.data.response;\r\n    return labelsResponse;\r\n}\r\n\r\nconst labelService = {\r\n    getAll\r\n};\r\n\r\nexport default labelService;","import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\r\nimport classes from './Label.module.css';\r\n\r\nclass Label extends Component {\r\n    state = {\r\n        isSelected: this.props.isSelected\r\n    }\r\n\r\n    changeLabelHandler = () => {\r\n        const label = {\r\n            backgroundColor: this.props.backgroundColor,\r\n            color: this.props.color,\r\n            text: this.props.text\r\n        };\r\n\r\n        this.props.change(label);\r\n    }\r\n\r\n    render() {\r\n        const style = {\r\n            backgroundColor: this.props.backgroundColor,\r\n            color: this.props.color\r\n        };\r\n\r\n        const checkedElement = this.props.isSelected ? <FontAwesomeIcon icon={faCheck} className={classes.Icon} style={{ color: this.props.color }}/> : null;\r\n\r\n        return (\r\n            <div onClick={this.changeLabelHandler} className={classes.Label}>\r\n                {checkedElement}\r\n                <p style={style} className={classes.LabelText}>{this.props.text}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Label;","import React, { Component } from 'react';\r\nimport labelsService from '../../../services/labelService.js';\r\nimport classes from './TodoLabels.module.css';\r\n\r\nimport Label from './Label/Label';\r\nimport Alert from '../../Alert/Alert';\r\nimport Spinner from '../../Spinner/Spinner';\r\n\r\nclass TodoLabels extends Component {\r\n    state = {\r\n        isLoading: true,\r\n        errorMessages: [],\r\n        labels: []\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.setState({ isLoading: true });\r\n        const labelsResponse = await labelsService.getAll();\r\n\r\n        if(!labelsResponse.successfull) {\r\n            this.setState({\r\n                isLoading: false,\r\n                errorMessages: [...labelsResponse.errorMessages]\r\n            });\r\n        } else {\r\n            const labels = labelsResponse.data.labels.map(label => {\r\n                label.isSelected = false;\r\n                return label;\r\n            })\r\n\r\n            this.setState({\r\n                isLoading: false,\r\n                labels: [...labels]\r\n            });\r\n        }\r\n    }\r\n\r\n    changeLabelHandler = (label) => {\r\n        const labelsCopy = this.state.labels.slice();\r\n        const selectedLabel = labelsCopy.find(labelCopy => labelCopy.backgroundColor === label.backgroundColor && labelCopy.color === label.color);\r\n\r\n        for(const labelCopy of labelsCopy) {\r\n            labelCopy.isSelected = false;\r\n        }\r\n\r\n        selectedLabel.isSelected = true;\r\n        this.setState({ labels: [...labelsCopy ]});\r\n\r\n        this.props.change(label);\r\n    }\r\n\r\n    render() {\r\n        const spinner = this.state.isLoading ? <Spinner /> : null;\r\n        const alerts = [];\r\n        this.state.errorMessages.forEach(message => {\r\n            alerts.push(<Alert alert='danger' message={message} />);\r\n        });\r\n\r\n        const labels = [];\r\n        this.state.labels.map((label, index) => \r\n            labels.push(<Label change={this.changeLabelHandler} backgroundColor={label.backgroundColor} color={label.color} text={label.text} key={index} isSelected={label.isSelected} />));\r\n\r\n        return (\r\n            <div className={classes.TodoLabels}>\r\n                {alerts}\r\n                {spinner}\r\n                {labels}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoLabels;","import React, { Component } from 'react';\r\nimport todoService from '../../services/todoService.js';\r\nimport calendarService from '../../services/calendarService.js';\r\nimport moodService from '../../services/moodService.js';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport classes from './TodoContainer.module.css';\r\n\r\nimport Alert from '../Alert/Alert';\r\nimport Spinner from '../Spinner/Spinner';\r\nimport Todo from './Todo/Todo';\r\nimport TodoForm from './TodoForm/TodoForm';\r\nimport TodoLabels from './TodoLabels/TodoLabels';\r\n\r\nclass TodoContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            errorMessages: [],\r\n            showCreateForm: false,\r\n            todos: [],\r\n            currentDate: null,\r\n            selectedLabel: null,\r\n            currentMood: null\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        // * get select date\r\n        // * get todos for the selected date\r\n        // * update state\r\n\r\n        const date = this.props.match.params.date;\r\n\r\n        this.setState({ isLoading: true });\r\n        const todosResponse = await todoService.getDailyTodos(date);\r\n\r\n        if (!todosResponse.successfull) {\r\n            this.setState({\r\n                errorMessages: [...todosResponse.errorMessages],\r\n                isLoading: false,\r\n                currentDate: date\r\n            });\r\n        } else {\r\n            const rawMoodResponse = await moodService.getForDay(date);\r\n            const moodResponse = rawMoodResponse.data.response;\r\n            if (!moodResponse.successfull) {\r\n                this.setState({\r\n                    errorMessages: [...moodResponse.errorMessages],\r\n                    isLoading: false,\r\n                    currentDate: date\r\n                });\r\n            }\r\n\r\n            const mood = moodResponse.data.moodText;\r\n\r\n            this.setState({\r\n                todos: [...todosResponse.data.todos],\r\n                isLoading: false,\r\n                currentDate: date,\r\n                currentMood: mood\r\n            });\r\n        }\r\n    }\r\n\r\n    createTodoHandler = async (title, description) => {\r\n        // validate label\r\n        if (!this.state.selectedLabel) {\r\n            alert('Choose label');\r\n            return;\r\n        }\r\n\r\n        // validate title\r\n        if (!title) {\r\n            alert('Title is required!');\r\n            return;\r\n        } else {\r\n            title = title.trim();\r\n            if (title.length < 1) {\r\n                alert('Title is required!');\r\n                return;\r\n            }\r\n        }\r\n\r\n        // validate description\r\n        if (!description) {\r\n            alert('Description is required!');\r\n            return;\r\n        } else {\r\n            description = description.trim();\r\n            if (description.length < 1) {\r\n                alert('Description is required!');\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.setState({ isLoading: true });\r\n\r\n        const createTodoResponse = await todoService.create({\r\n            title,\r\n            description,\r\n            labelText: this.state.selectedLabel.text,\r\n            date: this.state.currentDate\r\n        });\r\n\r\n        const todoResponse = createTodoResponse.data.response;\r\n\r\n        if (!todoResponse.successfull) {\r\n            this.setState({\r\n                errorMessages: [...todoResponse.errorMessages],\r\n                isLoading: false,\r\n                selectedLabel: null,\r\n                showCreateForm: false\r\n            });\r\n        } else {\r\n            const createdTodo = todoResponse.data.todo;\r\n            createdTodo.label = this.state.selectedLabel;\r\n            this.setState({\r\n                isLoading: false,\r\n                todos: [...this.state.todos, createdTodo],\r\n                selectedLabel: null,\r\n                showCreateForm: false\r\n            });\r\n        }\r\n    }\r\n\r\n    changeTodoLabelHandler = (label) => {\r\n        this.setState({ selectedLabel: label });\r\n    }\r\n\r\n    toggleCreateFormVisibility = () => {\r\n        this.setState({ showCreateForm: !this.state.showCreateForm });\r\n    }\r\n\r\n    updateCurrentMood = (event) => {\r\n        const selectedMood = event.target.value;\r\n        moodService.updateMood(this.state.currentDate, selectedMood);\r\n        this.setState({ currentMood: selectedMood });\r\n    }\r\n\r\n    render() {\r\n        // display spinner while loading\r\n        if (this.state.isLoading) {\r\n            return <Spinner />\r\n        }\r\n\r\n        // display alerts\r\n        const alerts = [];\r\n        this.state.errorMessages.forEach((message, index) => {\r\n            alerts.push(<Alert alert='danger' message={message} key={index} />);\r\n        });\r\n        if (alerts.length > 0) {\r\n            return alerts;\r\n        }\r\n\r\n        let createForm = null;\r\n        if (this.state.showCreateForm) {\r\n            createForm = (\r\n                <div className={classes.Form}>\r\n                    <TodoForm create={this.createTodoHandler} />\r\n                    <TodoLabels change={this.changeTodoLabelHandler} />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        // display todos for current date\r\n        let todos = [];\r\n        this.state.todos.forEach((todo) => {\r\n            const element = <Todo title={todo.title} label={todo.label} isChecked={todo.isChecked} key={todo.id} id={todo.id} />\r\n            todos.push(element);\r\n        });\r\n\r\n        // display element if there are not todos\r\n        let noTodosElement = null;\r\n        if (this.state.todos.length === 0) {\r\n            noTodosElement = <h3 className={classes.NoTodos}>No created todos! Create one :)</h3>\r\n        }\r\n\r\n        let stringDate = this.state.currentDate ? calendarService.convertFromNumber(this.state.currentDate) : null;\r\n\r\n        return (\r\n            <div className={classes.TodoContainer}>\r\n                <span className={classes.CurrentDate}>Current date: {stringDate}</span>\r\n\r\n                <div className={classes.MoodContainer}>\r\n                    <span className={classes.MoodText}>How's your day going: </span>\r\n                    <select onChange={this.updateCurrentMood} defaultValue={this.state.currentMood} ref={this.moodSelect} className={classes.MoodSelect}>\r\n                        <option className={classes.Excellent}>Excellent</option>\r\n                        <option className={classes.Good}>Good</option>\r\n                        <option className={classes.Average}>Average</option>\r\n                        <option className={classes.Bad}>Bad</option>\r\n                        <option className={classes.Miserable}>Miserable</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div className={classes.TodoSection}>\r\n                    <span className={classes.TodoSectionText}>Todo section:</span>\r\n                    <FontAwesomeIcon onClick={this.toggleCreateFormVisibility} icon={faPlusCircle} className={classes.Add} />\r\n\r\n                    {createForm}\r\n\r\n                    <div className={classes.Todos}>\r\n                        {todos}\r\n                    </div>\r\n\r\n                    {noTodosElement}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoContainer;","import React, { Component } from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport authService from './services/authService.js';\n\nimport Navigation from './components/Navigation/Navigation';\nimport Login from './components/Login/Login';\nimport Register from './components/Register/Register';\nimport Calendar from './components/Calendar/Calendar';\nimport TodoContainer from './components/TodoContainer/TodoContainer';\n\nclass App extends Component {\n  state = {\n    isAuthenticated: false\n  }\n\n  componentDidMount() {\n    const isAuthenticated = authService.isUserAuthenticated();\n    this.setState({ isAuthenticated: isAuthenticated });\n  }\n\n  redirect = (history, page, authenticate) => {\n    history.push(page);\n    sessionStorage.setItem('page', page);\n    if(authenticate !== undefined) {\n      this.setState({ isAuthenticated: authenticate });\n    }\n  }\n\n  render() {\n    const requireAuthentication = (Component, props) => {\n      // middleware function that checks if the user is authenticated\n      // if the user is not authenticated, he is redirected to Login page\n      // otherwise the desired component is rendered\n\n      if (!authService.isUserAuthenticated()) {\n        props.history.push('/Login');\n      }\n\n      return <Component redirect={this.redirect} {...props} />\n    }\n\n    const requireAnonymous = (Component, props) => {\n      // middleware function that checks if the user is not authenticated\n      // if he is not, then the app renderes the desired component\n      // if he is authenticated, he is redirected to Calendar component\n\n      if (authService.isUserAuthenticated()) {\n        props.history.push('/Calendar');\n      }\n\n      return <Component redirect={this.redirect} {...props} />\n    }\n\n    return (\n      <div>\n        <HashRouter>\n          <Navigation redirect={this.redirect} isAuthenticated={this.state.isAuthenticated} />\n          <Switch>\n            <Route path='/Login' exact render={(props) => requireAnonymous(Login, props)} />\n            <Route path='/Register' exact render={(props) => requireAnonymous(Register, props)} />\n            <Route path='/Calendar' exact render={(props) => requireAuthentication(Calendar, props)} />\n            <Route path='/Todo/:date' exact render={(props) => requireAuthentication(TodoContainer, props)} />\n            <Route path='/' exact render={(props) => requireAuthentication(Calendar, props)} /> \n          </Switch>\n        </HashRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}