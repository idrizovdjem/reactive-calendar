{"version":3,"sources":["components/Calendar/CalendarRow/CalendarBox/CalendarBox.module.css","components/Navigation/Navigation.module.css","components/Calendar/CalendarHeaderRow/CalendarHeaderRow.module.css","components/TodoContainer/TodoSection/TodoList/Todo/PresentationalTodo/PresentationalTodo.module.css","components/TodoContainer/TodoSection/TodoList/Todo/EditableTodo/EditableTodo.module.css","components/TodoContainer/MoodSelect/MoodSelect.module.css","components/TodoContainer/TodoSection/TodoForm/TodoForm.module.css","components/TodoContainer/TodoSection/TodoSection.module.css","components/DateChanger/DateChanger.module.css","components/TodoContainer/TodoSection/TodoLabels/Label/Label.module.css","components/Login/Login.module.css","components/Register/Register.module.css","components/TodoContainer/TodoContainer.module.css","components/Overview/MonthBox/WeekRow/DayBox/DayBox.module.css","components/Shared/Spinner/Spinner.module.css","components/Calendar/Calendar.module.css","components/Calendar/SideBar/SideBar.module.css","components/Calendar/CalendarRow/CalendarRow.module.css","components/Calendar/CalendarRow/CalendarBox/CalendarTodo/CalendarTodo.module.css","components/TodoContainer/TodoSection/TodoList/TodoList.module.css","components/TodoContainer/TodoSection/TodoLabels/TodoLabels.module.css","components/Overview/MonthRow/MonthRow.module.css","components/Overview/MonthBox/MonthBox.module.css","components/Overview/MonthBox/WeekRow/WeekRow.module.css","axios.js","services/authService.js","components/Navigation/Navigation.js","components/Shared/Alert/Alert.js","components/Shared/Spinner/Spinner.js","components/Login/Login.js","components/Register/Register.js","services/calendarService.js","services/moodService.js","services/todoService.js","components/DateChanger/DateChanger.js","components/Calendar/SideBar/SideBar.js","components/Calendar/CalendarHeaderRow/CalendarHeaderRow.js","components/Calendar/CalendarRow/CalendarBox/CalendarTodo/CalendarTodo.js","components/Calendar/CalendarRow/CalendarBox/CalendarBox.js","components/Calendar/CalendarRow/CalendarRow.js","components/Calendar/Calendar.js","components/TodoContainer/TodoSection/TodoForm/TodoForm.js","components/TodoContainer/TodoSection/TodoList/Todo/PresentationalTodo/PresentationalTodo.js","components/TodoContainer/TodoSection/TodoList/Todo/EditableTodo/EditableTodo.js","components/TodoContainer/TodoSection/TodoList/Todo/Todo.js","components/TodoContainer/TodoSection/TodoList/TodoList.js","services/labelService.js","components/TodoContainer/TodoSection/TodoLabels/Label/Label.js","components/TodoContainer/TodoSection/TodoLabels/TodoLabels.js","components/TodoContainer/TodoSection/TodoSection.js","components/TodoContainer/MoodSelect/MoodSelect.js","components/TodoContainer/TodoContainer.js","components/Overview/MonthBox/WeekRow/DayBox/DayBox.js","components/Overview/MonthBox/WeekRow/WeekRow.js","components/Overview/MonthBox/MonthBox.js","components/Overview/MonthRow/MonthRow.js","components/Overview/Overview.js","App.js","index.js"],"names":["module","exports","axios","defaults","baseURL","data","a","post","response","result","successfull","persistUserData","authToken","localStorage","setItem","authService","isUserAuthenticated","getItem","register","login","logout","removeItem","Navigation","state","showMobile","redirect","page","props","history","setState","toggleMobileButtons","mobileButtons","this","isAuthenticated","onClick","className","classes","MobileLink","buttons","NavigationButton","mobileButtonsStyle","display","to","Logo","Burger","Slice","style","MobileButtons","Component","withRouter","Alert","alert","role","message","Spinner","Loader","Login","isLoading","errorMessages","onSubmit","event","preventDefault","email","target","value","password","length","spinner","alerts","forEach","index","push","LoginContainer","Slogan","type","placeholder","name","Register","trim","username","repeatPassword","map","RegisterContainer","dayjs","require","weekday","weekOfYear","getCalendarDays","year","month","current","currentDate","totalDays","daysInMonth","start","day","max","active","date","prevDate","prevMonthDays","previousDifference","previous","from","next","dateObject","days","Number","previousYear","previousMonth","i","parseInt","currentMonth","isActive","todos","currentDateObject","nextYear","nextMonth","transformToArray","extend","calendarService","convertFromNumber","stringDate","toString","substr","getCurrentDate","format","getCurrentYear","getMonthRange","monthDays","getMonthData","convertedMonth","requestData","buildRequestData","mood","startDate","endDate","moodService","getForDay","updateMood","getForRange","getMoodColor","todosResponse","todoId","newCheckState","title","description","todoService","changeTodoCheckedState","getTodosForDates","getDailyTodos","deleteTodo","updateTodo","create","DateChanger","DateContainer","dateLabel","icon","faAngleLeft","Button","updateDate","dateValue","faAngleRight","SideBar","updateYear","updateMonth","CalendarHeaderRow","HeaderBox","Mon","Tue","Wed","Thu","Fri","Sat","Sun","CalendarTodo","backgroundColor","TodoRow","CalendarBox","showPopover","moodColor","showPopoverHandler","hidePopoverHandler","updateMoodHanlder","stopPropagation","newMoodColor","todo","label","boxClass","Current","Box","numberClass","Active","popover","Popover","PopoverBox","Miserable","Bad","Average","Good","Excellent","FirstRow","LeftBox","onMouseLeave","onMouseOver","ColorBox","RightBox","SecondRow","CalendarRow","boxArray","Row","Calendar","updateCalendar","currentDays","find","rawDayMoodsResponse","dayMoodsResponse","dateMoods","dateMood","prevProps","prevState","calendarRows","currentRowDays","j","sideBarDateObject","TodoForm","htmlFor","TitleLabel","id","TitleInput","Textarea","CreateButton","PresentationalTodo","useState","showDescription","setShowDescription","isChecked","setIsChecked","descriptionElement","TodoDescription","ButtonsContainer","toggleEdit","faPen","Icon","delete","faTimes","Title","changeCheckedHandler","oldState","nextCheckIcon","faCheckSquare","faSquare","Todo","color","TodoText","CheckIcon","EditableTodo","defaultValue","DescriptionTextArea","rows","edit","EditInput","EditButtonsContainer","EditButton","SaveChanges","Cancel","setTitle","setDescrition","isEditable","setIsEditable","deleteTodoHandler","onDelete","TodoList","Todos","get","labelsResponse","labelService","getAll","Label","checkedElement","isSelected","faCheck","change","LabelText","text","TodoLabels","setIsLoading","setErrorMessages","labels","setLabels","useEffect","labelsService","fetchLabels","changeLabelHandler","labelsCopy","slice","selectedLabel","labelCopy","TodoSection","showCreateForm","setShowCreateForm","setSelectedLabel","setTodos","fetchTodos","createTodoHandler","labelText","createTodoResponse","todoResponse","createdTodo","oldTodos","TodoSectionText","faPlusCircle","Add","Form","todosCopy","todoIndex","findIndex","splice","MoodSelect","setMood","rawMoodResponse","moodResponse","moodText","fetchMood","MoodContainer","MoodText","onChange","selectedMood","TodoContainer","match","params","CurrentDate","DayBox","showPopup","hoverHandler","hoverLeaveHandler","popup","WeekRow","dayBoxes","dayMoods","dayMood","currentMood","key","MonthBox","currentDateMood","undefined","weekRows","counter","week","MonthRow","monthBoxes","Overview","currentYear","App","authenticate","sessionStorage","requireAuthentication","requireAnonymous","path","exact","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.951e07f4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Box\":\"CalendarBox_Box__1ED4f\",\"Current\":\"CalendarBox_Current__yueFT\",\"FirstRow\":\"CalendarBox_FirstRow__W-j9j\",\"SecondRow\":\"CalendarBox_SecondRow__-mX90\",\"LeftBox\":\"CalendarBox_LeftBox__3cclX\",\"RightBox\":\"CalendarBox_RightBox__3ltx7\",\"ColorBox\":\"CalendarBox_ColorBox__29Yol\",\"Number\":\"CalendarBox_Number__3nKFd\",\"Active\":\"CalendarBox_Active__3RoRU\",\"PopoverBox\":\"CalendarBox_PopoverBox__268Of\",\"Excellent\":\"CalendarBox_Excellent__ZHLVq\",\"Good\":\"CalendarBox_Good__1vH9E\",\"Average\":\"CalendarBox_Average__3vevP\",\"Bad\":\"CalendarBox_Bad__3WIZq\",\"Miserable\":\"CalendarBox_Miserable__2zP-X\",\"Popover\":\"CalendarBox_Popover__3uMHp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navigation\":\"Navigation_Navigation__1Vx2F\",\"Logo\":\"Navigation_Logo__3Eu3z\",\"NavigationButton\":\"Navigation_NavigationButton__12GEc\",\"Burger\":\"Navigation_Burger__29LEy\",\"Slice\":\"Navigation_Slice__2Dnj5\",\"MobileButtons\":\"Navigation_MobileButtons__2D0E8\",\"MobileLink\":\"Navigation_MobileLink__3Rr1p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CalendarHeaderRow\":\"CalendarHeaderRow_CalendarHeaderRow__3S2d1\",\"HeaderBox\":\"CalendarHeaderRow_HeaderBox__OD2i1\",\"Mon\":\"CalendarHeaderRow_Mon__2crmE\",\"Tue\":\"CalendarHeaderRow_Tue__2A6bi\",\"Wed\":\"CalendarHeaderRow_Wed__1bb0J\",\"Thu\":\"CalendarHeaderRow_Thu__1DhiX\",\"Fri\":\"CalendarHeaderRow_Fri__xam5U\",\"Sat\":\"CalendarHeaderRow_Sat__3j3kA\",\"Sun\":\"CalendarHeaderRow_Sun__2KCoD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Todo\":\"PresentationalTodo_Todo__3LYpj\",\"Title\":\"PresentationalTodo_Title__2b3M_\",\"TodoText\":\"PresentationalTodo_TodoText__qH7-G\",\"Icon\":\"PresentationalTodo_Icon__3Gft4\",\"TodoDescription\":\"PresentationalTodo_TodoDescription__34-K1\",\"CheckIcon\":\"PresentationalTodo_CheckIcon__1sztL\",\"DescriptionTextArea\":\"PresentationalTodo_DescriptionTextArea__IyZc3\",\"ButtonsContainer\":\"PresentationalTodo_ButtonsContainer__3yLf-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Todo\":\"EditableTodo_Todo__2ZN2m\",\"Title\":\"EditableTodo_Title__lhflS\",\"TodoText\":\"EditableTodo_TodoText__1QzSG\",\"Icon\":\"EditableTodo_Icon__xL-lJ\",\"TodoDescription\":\"EditableTodo_TodoDescription__2Y3Kf\",\"CheckIcon\":\"EditableTodo_CheckIcon__3GcGe\",\"DescriptionTextArea\":\"EditableTodo_DescriptionTextArea__2iJ8K\",\"EditInput\":\"EditableTodo_EditInput__22hE-\",\"EditButtonsContainer\":\"EditableTodo_EditButtonsContainer__18N4z\",\"EditButton\":\"EditableTodo_EditButton__2pQ5o\",\"SaveChanges\":\"EditableTodo_SaveChanges__3ATbm\",\"Cancel\":\"EditableTodo_Cancel__MYRLR\",\"ButtonsContainer\":\"EditableTodo_ButtonsContainer__37MsX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MoodContainer\":\"MoodSelect_MoodContainer__3GNoy\",\"MoodSelect\":\"MoodSelect_MoodSelect__cPvjo\",\"MoodText\":\"MoodSelect_MoodText__EcV0e\",\"Excellent\":\"MoodSelect_Excellent__3hopn\",\"Good\":\"MoodSelect_Good__23LcC\",\"Average\":\"MoodSelect_Average__2qXFL\",\"Bad\":\"MoodSelect_Bad__1-cb_\",\"Miserable\":\"MoodSelect_Miserable__3DNd3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TodoForm\":\"TodoForm_TodoForm__1KQX-\",\"TitleInput\":\"TodoForm_TitleInput__3yDJL\",\"Textarea\":\"TodoForm_Textarea__2az40\",\"CreateButton\":\"TodoForm_CreateButton__2Dm6c\",\"TitleLabel\":\"TodoForm_TitleLabel__OGzAS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TodoSection\":\"TodoSection_TodoSection__CraQ9\",\"TodoSectionText\":\"TodoSection_TodoSectionText__4Lb6z\",\"Add\":\"TodoSection_Add__2tz3s\",\"Form\":\"TodoSection_Form__z4NYw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DateContainer\":\"DateChanger_DateContainer__tYqO2\",\"Button\":\"DateChanger_Button__2XsG0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"Label_Label__2DI8-\",\"LabelText\":\"Label_LabelText__2lTG6\",\"Icon\":\"Label_Icon__o3FW_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LoginContainer\":\"Login_LoginContainer__2XBSw\",\"Slogan\":\"Login_Slogan__1-Ycq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RegisterContainer\":\"Register_RegisterContainer__6PBdG\",\"Slogan\":\"Register_Slogan__2dRki\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TodoContainer\":\"TodoContainer_TodoContainer__3xrV0\",\"CurrentDate\":\"TodoContainer_CurrentDate__1TW6R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DayBox\":\"DayBox_DayBox__3H4-k\",\"Popover\":\"DayBox_Popover__tJP0z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__2JoOa\",\"load6\":\"Spinner_load6__tA7Lo\",\"round\":\"Spinner_round__28xsv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Calendar\":\"Calendar_Calendar__2_V_5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideBar\":\"SideBar_SideBar__t1vIZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Row\":\"CalendarRow_Row__1J3Va\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TodoRow\":\"CalendarTodo_TodoRow__1e8U0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Todos\":\"TodoList_Todos__lTK2q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TodoLabels\":\"TodoLabels_TodoLabels__3az9W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MonthRow\":\"MonthRow_MonthRow__zIp01\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MonthBox\":\"MonthBox_MonthBox__3lkh8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"WeekRow\":\"WeekRow_WeekRow__p0GTj\"};","import axios from 'axios';\r\n\r\n// * production\r\naxios.defaults.baseURL = 'https://reactive-calendar.glitch.me';\r\n\r\n// * development\r\n//axios.defaults.baseURL = 'http://localhost:5000';\r\n\r\nexport default axios;","import axios from '../axios.js';\r\n\r\nasync function register(data) {\r\n    // send post request with data to the back-end api\r\n    // if the response is successfull then the authentication token\r\n    // is saved to the localStorage\r\n\r\n    const response = await axios.post('/users/register', data);\r\n    const result = response.data.response;\r\n    if(result.successfull) {\r\n        const authToken = result.data.authToken;\r\n        persistUserData(authToken);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nasync function login(data) {\r\n    // send post request with data to the back-end api\r\n    // if the response is successfull then the authentication token\r\n    // is saved to the localStorage\r\n\r\n    const response = await axios.post('/users/login', data);\r\n    const result = response.data.response;\r\n    if(result.successfull) {\r\n        const authToken = result.data.authToken;\r\n        persistUserData(authToken);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction persistUserData(authToken) {\r\n    // save authentication token to the localStorage\r\n    localStorage.setItem('authToken', authToken);\r\n}\r\n\r\nfunction logout() {\r\n    // remove the authentication token from the localStorage\r\n    localStorage.removeItem('authToken');\r\n}\r\n\r\nfunction isUserAuthenticated() {\r\n    // check if the localStorage contains authentication token\r\n    const authToken = localStorage.getItem('authToken');\r\n    return authToken !== null;\r\n}\r\n\r\nconst authService = {\r\n    isUserAuthenticated,\r\n    register,\r\n    login,\r\n    logout\r\n};\r\n\r\nexport default authService;","import React, { Component } from 'react';\r\nimport classes from './Navigation.module.css';\r\nimport {  withRouter } from 'react-router-dom';\r\n\r\nimport authService from '../../services/authService.js';\r\n\r\nclass Navigation extends Component {\r\n    state = {\r\n        showMobile: false\r\n    }\r\n\r\n    redirect = (page) => {\r\n        this.props.redirect(this.props.history, page);\r\n    }\r\n\r\n    logout = () => {\r\n        this.setState({ showMobile: false });\r\n        authService.logout();\r\n        this.props.redirect(this.props.history, '/Login', false);\r\n    }\r\n\r\n    toggleMobileButtons = () => {\r\n        this.setState({ showMobile: !this.state.showMobile });\r\n    }\r\n\r\n    render() {\r\n        let mobileButtons = null;\r\n        if (this.props.isAuthenticated) {\r\n            mobileButtons = (\r\n                <span>\r\n                    <div onClick={() => this.redirect('/Calendar')} className={classes.MobileLink}>Calendar</div>\r\n                    <div onClick={() => this.redirect('/Overview')} className={classes.MobileLink}>Overview</div>\r\n                    <div onClick={this.logout} className={classes.MobileLink}>Logout</div>\r\n                </span>\r\n            );\r\n        } else {\r\n            mobileButtons = (\r\n                <span>\r\n                    <div onClick={() => this.redirect('/Login')} className={classes.MobileLink}>Login</div>\r\n                    <div onClick={() => this.redirect('/Register')} className={classes.MobileLink}>Register</div>\r\n                </span>\r\n            );\r\n        }\r\n\r\n        let buttons = null;\r\n        if (this.props.isAuthenticated) {\r\n            buttons = (\r\n                <span>\r\n                    <button onClick={this.logout} className={classes.NavigationButton}>Logout</button>\r\n                    <button onClick={() => this.redirect('/Overview')} className={classes.NavigationButton}>Overview</button>\r\n                    <button onClick={() => this.redirect('/Calendar')} className={classes.NavigationButton}>Calendar</button>\r\n                </span>\r\n            );\r\n        } else {\r\n            buttons = (\r\n                <span>\r\n                    <button onClick={() => this.redirect('/Register')} className={classes.NavigationButton}>Register</button>\r\n                    <button onClick={() => this.redirect('/Login')} className={classes.NavigationButton}>Login</button>\r\n                </span>\r\n            );\r\n        }\r\n\r\n        const mobileButtonsStyle = {\r\n            display: this.state.showMobile ? 'block' : 'none'\r\n        };\r\n\r\n        return (\r\n            <nav className={classes.Navigation}>\r\n                <span onClick={() => this.redirect('/')} to='/' className={classes.Logo}>Reactive Calendar</span>\r\n                {buttons}\r\n\r\n                <div onClick={this.toggleMobileButtons} className={classes.Burger}>\r\n                    <div className={classes.Slice}></div>\r\n                    <div className={classes.Slice}></div>\r\n                    <div className={classes.Slice}></div>\r\n                </div>\r\n\r\n                <div style={mobileButtonsStyle} className={classes.MobileButtons}>\r\n                    {mobileButtons}\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Navigation);","const Alert = (props) => {\r\n    return (\r\n        <div className={`alert alert-${props.alert}`} role=\"alert\">\r\n            {props.message}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Alert;","import classes from './Spinner.module.css';\r\n\r\nconst Spinner = () => <div className={classes.Loader}>Loading...</div>;\r\n\r\nexport default Spinner;","import React, { Component } from 'react';\r\nimport classes from './Login.module.css';\r\n\r\nimport authService from '../../services/authService.js';\r\n\r\nimport Alert from '../Shared/Alert/Alert';\r\nimport Spinner from '../Shared/Spinner/Spinner';\r\n\r\nclass Login extends Component {\r\n    state = {\r\n        isLoading: false,\r\n        errorMessages: []\r\n    }\r\n\r\n    onSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const email = event.target.email.value;\r\n        const password = event.target.password.value;\r\n\r\n        // * validations\r\n        if(!email || email.length < 5) {\r\n            alert('Email is required!');\r\n            return;\r\n        }\r\n\r\n        if(!password || password.length < 6) {\r\n            alert('Password must be at least 6 symbols!');\r\n            return;\r\n        }\r\n\r\n        this.login({ email, password });\r\n    }\r\n\r\n    login = async (data) => {\r\n        this.setState({ isLoading: true });\r\n\r\n        const result = await authService.login(data);\r\n\r\n        if (result.successfull) {\r\n            this.setState({ isLoading: false });\r\n            this.props.redirect(this.props.history, '/Calendar', true);\r\n        } else {\r\n            this.setState({\r\n                errorMessages: [...result.errorMessages],\r\n                isLoading: false\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const spinner = this.state.isLoading ? <Spinner /> : null;\r\n\r\n        const alerts = [];\r\n        this.state.errorMessages.forEach((message, index) => {\r\n            alerts.push(<Alert alert='danger' message={message} key={index} />)\r\n        });\r\n\r\n        return (\r\n            <div className={classes.LoginContainer}>\r\n                {spinner}\r\n                <p className={classes.Slogan}>Log in to your reactive account</p>\r\n                <form onSubmit={this.onSubmit}>\r\n                    {alerts}\r\n                    <div className=\"form-group\">\r\n                        <label>Email address</label>\r\n                        <input \r\n                            type=\"email\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Enter your email\"\r\n                            name='email' \r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Password</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Enter your password\"\r\n                            name='password'\r\n                        />\r\n                    </div>\r\n\r\n                    <button className=\"btn btn-primary w-100\">Log in</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport authService from '../../services/authService.js';\r\nimport classes from './Register.module.css';\r\n\r\nimport Alert from '../Shared/Alert/Alert';\r\nimport Spinner from '../Shared/Spinner/Spinner';\r\n\r\nclass Register extends Component {\r\n    state = {\r\n        isLoading: false,\r\n        errorMessages: []\r\n    }\r\n\r\n    onSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const email = event.target.email.value.trim();\r\n        const username = event.target.username.value.trim();\r\n        const password = event.target.password.value.trim();\r\n        const repeatPassword = event.target.repeatPassword.value.trim();\r\n\r\n        // * validations\r\n        if (!email || email.length < 5) {\r\n            alert('Email is required!');\r\n            return;\r\n        }\r\n\r\n        if (!username || username.length < 5) {\r\n            alert('Username must be at least 5 symbols long!');\r\n            return;\r\n        }\r\n\r\n        if (!password || password.length < 6) {\r\n            alert('Password must be at least 6 symbols long!');\r\n            return;\r\n        }\r\n\r\n        if (password !== repeatPassword) {\r\n            alert('Passwords does not match!');\r\n            return;\r\n        }\r\n\r\n        this.register({ email, username, password });\r\n    }\r\n\r\n    register = async (data) => {\r\n        this.setState({ isLoading: true });\r\n\r\n        const result = await authService.register(data);\r\n\r\n        if(result.successfull) {\r\n            this.setState({ isLoading: false });\r\n            this.props.redirect(this.props.history, '/Calendar', true);\r\n        } else {\r\n            this.setState({\r\n                isLoading: false,\r\n                errorMessages: [...result.errorMessages]\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const spinner = this.state.isLoading ? <Spinner /> : null;\r\n\r\n        const alerts = [];\r\n        this.state.errorMessages.map((message, index) =>\r\n            alerts.push(<Alert alert='danger' message={message} key={index} />));\r\n\r\n        return (\r\n            <div className={classes.RegisterContainer}>\r\n                {spinner}\r\n                <p className={classes.Slogan}>Register your reactive account</p>\r\n                <form onSubmit={this.onSubmit}>\r\n                    {alerts}\r\n                    <div className=\"form-group\">\r\n                        <label>Email address</label>\r\n                        <input \r\n                            type=\"email\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Enter your email\"\r\n                            name='email'\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Username</label>\r\n                        <input \r\n                            type=\"text\" \r\n                            className=\"form-control\" \r\n                            placeholder=\"Enter your username\" \r\n                            name='username' \r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Password</label>\r\n                        <input \r\n                            type=\"password\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Enter your password\"\r\n                            name='password'\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Repeat password</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Repeat your password\"\r\n                            name='repeatPassword'\r\n                        />\r\n                    </div>\r\n\r\n                    <button className=\"btn btn-primary w-100\">Register</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;","const dayjs = require('dayjs');\r\nconst weekday = require(\"dayjs/plugin/weekday\");\r\nconst weekOfYear = require(\"dayjs/plugin/weekOfYear\");\r\n\r\ndayjs.extend(weekday);\r\ndayjs.extend(weekOfYear);\r\n\r\nfunction getCalendarDays(year, month) {\r\n    // get the current month days\r\n    // previous month last days and next month start days\r\n\r\n    const result = {\r\n        year,\r\n        month,\r\n        current: {}\r\n    }\r\n\r\n    // get the total days in the current month\r\n    const currentDate = dayjs(`${year}/${month}/01`);\r\n    let totalDays = currentDate.daysInMonth();\r\n\r\n    result.current = {\r\n        start: currentDate.day(),\r\n        max: currentDate.daysInMonth(),\r\n        active: dayjs().date()\r\n    }\r\n\r\n    if (result.current.start === 0) {\r\n        // if the start day is sunday\r\n        // change the number, so the calendar works correctly\r\n        result.current.start = 7;\r\n    }\r\n\r\n    if (result.current.start !== 1) {\r\n        // check if the current month does not start in monday\r\n        // calculate how many days should the function take from\r\n        // the previous month\r\n        // * example (current month starts in Wednesday)\r\n        // * then the function takes the last two days from \r\n        // * the previous day\r\n\r\n        // take the total days in the previous month\r\n        const prevDate = dayjs(`${year}/${month - 1}/01`);\r\n        const prevMonthDays = prevDate.daysInMonth();\r\n        // calculate the difference\r\n        const previousDifference = prevMonthDays - (result.current.start - 2);\r\n        totalDays += (prevMonthDays - previousDifference) + 1;\r\n\r\n        result.previous = {\r\n            from: previousDifference,\r\n            to: prevDate.daysInMonth()\r\n        }\r\n    }\r\n\r\n    if (totalDays < 42) {\r\n        // check if the total days to this moment (current month days + previous month days) is less than 42\r\n        // ? 42 => (the calendar has 6 rows with 7 days)\r\n        // calculate how many days should be taken from next month\r\n        result.next = {\r\n            to: 42 - totalDays\r\n        }\r\n    }\r\n\r\n    // ? example of the current result\r\n    /* \r\n        result = {\r\n            current: {\r\n                start: 4, // ? (number between 1 and 7 (1-Mon, 7-Sun))\r\n                max: 30, // ? max days the current month has\r\n                active: 5 // ? the current date\r\n            },\r\n            previous: {\r\n                from: 29, // ? start date from previous month\r\n                to: 31 // ? end date from previous month\r\n            },\r\n            next: {\r\n                to: 9 // ? end date of next month\r\n            },\r\n            month: 4, // ? current month\r\n            year: 2021 // ? current year\r\n        }\r\n    */\r\n\r\n    // return the result object transformed to dates array\r\n    return transformToArray(result);\r\n}\r\n\r\nfunction transformToArray(dateObject) {\r\n    // transforms dateObject to dates array\r\n    const days = [];\r\n\r\n    // get the current year and month and convert them to numbers\r\n    let { year, month } = dateObject;\r\n    year = Number(year);\r\n    month = Number(month);\r\n\r\n    // * generate objects if there are previous month days\r\n    if (dateObject.previous) {\r\n        let previousYear, previousMonth;\r\n\r\n        // get the previous month and year\r\n        if (month === 1) {\r\n            previousMonth = 12;\r\n            previousYear = year - 1;\r\n        } else {\r\n            previousMonth = month - 1;\r\n            if (previousMonth < 10) {\r\n                previousMonth = `0${previousMonth}`;\r\n            }\r\n            previousYear = year;\r\n        }\r\n\r\n        // generate the previous month dates\r\n        for (let i = dateObject.previous.from; i <= dateObject.previous.to; i++) {\r\n            days.push({\r\n                date: parseInt(`${previousYear}${previousMonth}${i}`),\r\n                currentMonth: false,\r\n                isActive: false,\r\n                day: i,\r\n                todos: []\r\n            });\r\n        }\r\n    }\r\n\r\n    // * generate current month days\r\n    let currentMonth = month;\r\n    if (currentMonth < 10) {\r\n        currentMonth = `0${month}`;\r\n    }\r\n\r\n    for (let i = 1; i <= dateObject.current.max; i++) {\r\n        // generate current month dates\r\n\r\n        let currentDate = i;\r\n        if (currentDate < 10) {\r\n            currentDate = `0${currentDate}`;\r\n        }\r\n\r\n        const currentDateObject = {\r\n            date: parseInt(`${year}${currentMonth}${currentDate}`),\r\n            currentMonth: true,\r\n            isActive: false,\r\n            day: i,\r\n            todos: []\r\n        };\r\n\r\n        // set the active flag to the current date\r\n        if (i === dateObject.current.active) {\r\n            currentDateObject.isActive = true;\r\n        }\r\n\r\n        days.push(currentDateObject);\r\n    }\r\n\r\n    // * generate objects if there are next month days\r\n    if (dateObject.next) {\r\n        // generate next month dates\r\n\r\n        // calculate next month and year\r\n        let nextYear, nextMonth;\r\n        if (month === 12) {\r\n            nextMonth = 1;\r\n            nextYear = year + 1;\r\n        } else {\r\n            nextMonth = month + 1;\r\n            nextYear = year;\r\n        }\r\n\r\n        if (nextMonth < 10) {\r\n            nextMonth = `0${nextMonth}`;\r\n        }\r\n\r\n        for (let i = 1; i <= dateObject.next.to; i++) {\r\n            // generate next month dates\r\n            const currentDate = i < 10 ? `0${i}` : i;\r\n            const currentDateObject = {\r\n                date: parseInt(`${nextYear}${nextMonth}${currentDate}`),\r\n                currentMonth: false,\r\n                isActive: false,\r\n                day: i,\r\n                todos: []\r\n            };\r\n\r\n            days.push(currentDateObject);\r\n        }\r\n    }\r\n\r\n    return days;\r\n}\r\n\r\nfunction getCurrentDate() {\r\n    const year = Number(dayjs().format('YYYY'));\r\n    const month = Number(dayjs().format('M'));\r\n    const day = Number(dayjs().format('D'));\r\n\r\n    return {\r\n        year,\r\n        month,\r\n        day\r\n    }\r\n}\r\n\r\nfunction getMonthRange(year, month) {\r\n    const monthDays = getCalendarDays(year, month);\r\n\r\n    return {\r\n        from: monthDays[0].date,\r\n        to: monthDays[monthDays.length - 1].date\r\n    };\r\n}\r\n\r\nfunction getCurrentYear() {\r\n    return dayjs().format('YYYY');\r\n}\r\n\r\nfunction getMonthData(year, month) {\r\n    const currentDate = dayjs(`${year}/${month}/01`);\r\n    let totalDays = currentDate.daysInMonth();\r\n    let convertedMonth = month < 10 ? `0${month}` : month;\r\n\r\n    const from = parseInt(`${year}${convertedMonth}0${1}`);\r\n    const to = parseInt(`${year}${convertedMonth}${totalDays}`);\r\n\r\n    return {\r\n        from,\r\n        to\r\n    };\r\n}\r\n\r\nfunction convertFromNumber(date) {\r\n    // get date as number (20210405) and returns '2021/04/05'\r\n\r\n    const stringDate = date.toString();\r\n    const year = stringDate.substr(0, 4);\r\n    const month = stringDate.substr(4, 2);\r\n    const day = stringDate.substr(6, 2);\r\n\r\n    return `${year}/${month}/${day}`;\r\n}\r\n\r\nconst calendarService = {\r\n    convertFromNumber,\r\n    getCalendarDays,\r\n    getCurrentDate,\r\n    getCurrentYear,\r\n    getMonthRange,\r\n    getMonthData\r\n};\r\n\r\nexport default calendarService;","import axios from '../axios.js';\r\n\r\nasync function getForDay(date) {\r\n    const requestData = buildRequestData({ date });\r\n    const response = await axios.post('/mood/getForDay', requestData);\r\n    return response;\r\n}\r\n\r\nasync function updateMood(date, mood) {\r\n    const requestData = buildRequestData({ date, mood });\r\n    const response = await axios.post('/mood/update', requestData);\r\n    return response;\r\n}\r\n\r\nasync function getForRange(startDate, endDate) {\r\n    const requestData = buildRequestData({ startDate, endDate });\r\n    const response = await axios.post('/mood/getForRange', requestData);\r\n    return response;\r\n}\r\n\r\nfunction buildRequestData(data) {\r\n    const authToken = localStorage.getItem('authToken');\r\n    data.authToken = authToken;\r\n    return data;\r\n}\r\n\r\nfunction getMoodColor(mood) {\r\n    switch(mood) {\r\n        case 'Excellent': return '#008000';\r\n        case 'Good': return '#38b000';\r\n        case 'Average': return '#ccff33';\r\n        case 'Bad': return '#f79d65';\r\n        case 'Miserable': return '#f27059';\r\n        default: return 'white';\r\n    }\r\n}\r\n\r\nconst moodService = {\r\n    getForDay,\r\n    updateMood,\r\n    getForRange,\r\n    getMoodColor\r\n};\r\n\r\nexport default moodService;","import axios from '../axios.js';\r\n\r\nasync function getDailyTodos(date) {\r\n    // get todos for a date\r\n    // send authentication token and current date\r\n    const requestData = buildRequestData({ date });\r\n    const response = await axios.post('/todo/daily', requestData);\r\n    \r\n    const todosResponse = response.data.response;\r\n    return todosResponse;\r\n}\r\n\r\nasync function getTodosForDates(startDate, endDate) {\r\n    // get todos for range of two dates\r\n    const data = {\r\n        startDate,\r\n        endDate\r\n    };\r\n    const requestData = buildRequestData(data);\r\n    // send authentication token, startDate and endDate\r\n    \r\n    const response = await axios.post('/todo/getForDateRange',requestData);\r\n    const todosResponse = response.data.response;\r\n    return todosResponse;\r\n}\r\n\r\nasync function create(data) {\r\n    const requestData = buildRequestData(data);\r\n    const response = await axios.post('/todo/create', requestData);\r\n    return response;\r\n}\r\n\r\nasync function changeTodoCheckedState(todoId, newCheckState) {\r\n    const requestData = buildRequestData({ todoId, newCheckState });\r\n    const response = await axios.post('/todo/updateCheck', requestData);\r\n    return response;\r\n}\r\n\r\nasync function deleteTodo(todoId) {\r\n    const requestData = buildRequestData({ todoId });\r\n    const response = await axios.post('/todo/delete', requestData);\r\n    return response;\r\n}\r\n\r\nasync function updateTodo(todoId, title, description) {\r\n    const requestData = buildRequestData({ todoId, title, description });\r\n    const response = await axios.post('/todo/update', requestData);\r\n    return response;\r\n}\r\n\r\nfunction buildRequestData(data) {\r\n    const authToken = localStorage.getItem('authToken');\r\n    data.authToken = authToken;\r\n    return data;\r\n}\r\n\r\nconst todoService = {\r\n    changeTodoCheckedState,\r\n    getTodosForDates,\r\n    getDailyTodos,\r\n    deleteTodo,\r\n    updateTodo,\r\n    create\r\n};\r\n\r\nexport default todoService;","import React, { Component } from \"react\";\r\nimport classes from \"./DateChanger.module.css\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faAngleLeft, faAngleRight } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass DateChanger extends Component {\r\n  render() {\r\n    return (\r\n      <div className={classes.DateContainer}>\r\n        <span>{this.props.dateLabel}: </span>\r\n        <FontAwesomeIcon\r\n          icon={faAngleLeft}\r\n          className={classes.Button}\r\n          onClick={() => this.props.updateDate(-1)}\r\n        />\r\n        <span>{this.props.dateValue}</span>\r\n        <FontAwesomeIcon\r\n          icon={faAngleRight}\r\n          className={classes.Button}\r\n          onClick={() => this.props.updateDate(1)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DateChanger;\r\n","import React, { Component } from 'react';\r\nimport classes from './SideBar.module.css';\r\n\r\nimport DateChanger from '../../DateChanger/DateChanger';\r\n\r\nclass SideBar extends Component {\r\n    state = {\r\n        year: this.props.date.year,\r\n        month: this.props.date.month\r\n    }\r\n\r\n    updateYear = (value) => {\r\n        const year = this.state.year + value;\r\n        this.setState({ year });\r\n\r\n        this.props.updateDate(year, this.state.month);\r\n    }\r\n\r\n    updateMonth = (value) => {\r\n        let month = this.state.month + value;\r\n        let year = this.state.year;\r\n\r\n        if(month === 0) {\r\n            month = 12;\r\n            year--;\r\n        } else if(month === 13) {\r\n            month = 1;\r\n            year++;\r\n        }\r\n\r\n        this.setState({ year, month });\r\n        this.props.updateDate(year, month);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.SideBar}>\r\n                <DateChanger dateLabel='Year' dateValue={this.state.year} updateDate={this.updateYear} />\r\n                <DateChanger dateLabel='Month' dateValue={this.state.month} updateDate={this.updateMonth} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SideBar;","import React, { Component } from 'react';\r\nimport classes from './CalendarHeaderRow.module.css';\r\n\r\nclass CalendarHeaderRow extends Component {\r\n\r\n    render() {\r\n        return(\r\n            <div className={classes.CalendarHeaderRow}>\r\n                <div className={`${classes.HeaderBox} ${classes.Mon}`}></div>\r\n                <div className={`${classes.HeaderBox} ${classes.Tue}`}></div>\r\n                <div className={`${classes.HeaderBox} ${classes.Wed}`}></div>\r\n                <div className={`${classes.HeaderBox} ${classes.Thu}`}></div>\r\n                <div className={`${classes.HeaderBox} ${classes.Fri}`}></div>\r\n                <div className={`${classes.HeaderBox} ${classes.Sat}`}></div>\r\n                <div className={`${classes.HeaderBox} ${classes.Sun}`}></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CalendarHeaderRow;","import React, { Component } from 'react';\r\nimport classes from './CalendarTodo.module.css';\r\n\r\nclass CalendarTodo extends Component {\r\n    render() {\r\n        const style = {\r\n            backgroundColor: this.props.backgroundColor\r\n        };\r\n\r\n        return (\r\n            <div style={style} className={classes.TodoRow}></div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CalendarTodo;","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport classes from './CalendarBox.module.css';\r\n\r\nimport moodService from '../../../../services/moodService.js';\r\n\r\nimport CalendarTodo from './CalendarTodo/CalendarTodo';\r\n\r\nclass CalendarBox extends Component {\r\n    state = {\r\n        showPopover: false,\r\n        moodColor: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        const moodColor = this.props.dateObject.moodColor || '#ebedf0';\r\n        this.setState({ moodColor: moodColor });\r\n    }\r\n\r\n    redirect = () => {\r\n        const date = this.props.dateObject.date;\r\n        this.props.redirect(this.props.history, `/Todo/${date}`);\r\n    }\r\n\r\n    showPopoverHandler = () => {\r\n        this.setState({ showPopover: true });\r\n    }\r\n\r\n    hidePopoverHandler = () => {\r\n        this.setState({ showPopover: false });\r\n    }\r\n\r\n    updateMoodHanlder = async (event, mood) => {\r\n        event.stopPropagation();\r\n        const newMoodColor = moodService.getMoodColor(mood);\r\n        this.setState({ moodColor: newMoodColor });\r\n        const date = this.props.dateObject.date;\r\n        moodService.updateMood(date, mood);\r\n    }\r\n\r\n    render() {\r\n        const todos = [];\r\n        if (this.props.dateObject.todos.length > 0) {\r\n            this.props.dateObject.todos.forEach((todo, index) => {\r\n                todos.push(<CalendarTodo backgroundColor={todo.label.backgroundColor} key={index} />)\r\n            });\r\n        }\r\n\r\n        const date = this.props.dateObject;\r\n        let boxClass = date.currentMonth ? classes.Current : classes.Box;\r\n        let numberClass = date.isActive ? classes.Active : classes.Number;\r\n\r\n        let popover = null;\r\n        if (this.state.showPopover) {\r\n            popover = (\r\n                <div className={classes.Popover}>\r\n                    <div onClick={(event) => this.updateMoodHanlder(event, 'Miserable')} className={`${classes.PopoverBox} ${classes.Miserable}`}></div>\r\n                    <div onClick={(event) => this.updateMoodHanlder(event, 'Bad')} className={`${classes.PopoverBox} ${classes.Bad}`}></div>\r\n                    <div onClick={(event) => this.updateMoodHanlder(event, 'Average')} className={`${classes.PopoverBox} ${classes.Average}`}></div>\r\n                    <div onClick={(event) => this.updateMoodHanlder(event, 'Good')} className={`${classes.PopoverBox} ${classes.Good}`}></div>\r\n                    <div onClick={(event) => this.updateMoodHanlder(event, 'Excellent')} className={`${classes.PopoverBox} ${classes.Excellent}`}></div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className={boxClass} onClick={this.redirect}>\r\n                <span className={classes.FirstRow}>\r\n                    <div className={classes.LeftBox}>\r\n                        <div onMouseLeave={this.hidePopoverHandler} onMouseOver={this.showPopoverHandler} style={{ backgroundColor: this.state.moodColor }} className={classes.ColorBox}>\r\n                            {popover}\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.RightBox}>\r\n                        <p className={numberClass}>{date.day}</p>\r\n                    </div>\r\n                </span>\r\n                <span className={classes.SecondRow}>\r\n                    {todos}\r\n                </span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(CalendarBox);","import React, { Component } from 'react';\r\nimport classes from './CalendarRow.module.css';\r\n\r\nimport CalendarBox from './CalendarBox/CalendarBox';\r\n\r\nclass CalendarRow extends Component {\r\n    render() {\r\n        const boxArray = [];\r\n        if(this.props.days.length > 0) {\r\n            for(let i = 0; i < this.props.days.length; i++) {\r\n                const date = this.props.days[i];\r\n                boxArray.push(<CalendarBox redirect={this.props.redirect} key={i} dateObject={date} />);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className={classes.Row}>\r\n                {boxArray}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CalendarRow;","import React, { Component } from \"react\";\r\nimport classes from \"./Calendar.module.css\";\r\n\r\nimport calendarService from \"../../services/calendarService.js\";\r\nimport moodService from \"../../services/moodService.js\";\r\nimport todoService from \"../../services/todoService.js\";\r\n\r\nimport SideBar from './SideBar/SideBar';\r\nimport CalendarHeaderRow from './CalendarHeaderRow/CalendarHeaderRow';\r\nimport CalendarRow from './CalendarRow/CalendarRow';\r\nimport Alert from '../Shared/Alert/Alert';\r\nimport Spinner from '../Shared/Spinner/Spinner';\r\n\r\nclass Calendar extends Component {\r\n\tstate = {\r\n\t\tisLoading: false,\r\n\t\terrorMessages: [],\r\n\t\tdays: [],\r\n\t\tdate: {},\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\t// * get current date\r\n\t\t// * get days for the calendar\r\n\t\t// * get todos for the days\r\n\r\n\t\tconst currentDate = calendarService.getCurrentDate();\r\n\t\tthis.setState({ date: currentDate }, async () => {\r\n\t\t\tawait this.updateCalendar();\r\n\t\t});\t\r\n\t}\r\n\r\n\tupdateCalendar = async () => {\r\n\t\tthis.setState({ isLoading: true });\r\n\t\tconst { year, month } = this.state.date;\r\n\r\n\t\tconst currentDays = calendarService.getCalendarDays(year, month);\r\n\r\n\t\tconst startDate = currentDays[0].date;\r\n\t\tconst endDate = currentDays[currentDays.length - 1].date;\r\n\t\t\r\n\t\tconst todosResponse = await todoService.getTodosForDates(\r\n\t\t\tstartDate,\r\n\t\t\tendDate\r\n\t\t);\r\n\t\tif (!todosResponse.successfull) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tisLoading: false,\r\n\t\t\t\terrorMessages: [...todosResponse.errorMessages],\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst dateTodos = todosResponse.data.todos;\r\n\t\tdateTodos.forEach((todo) => {\r\n\t\t\tconst day = currentDays.find((day) => day.date === todo.date);\r\n\t\t\t\r\n\t\t\tif (day.todos.length < 3) {\r\n\t\t\t\tday.todos.push(todo);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// update moods\r\n\t\tconst rawDayMoodsResponse = await moodService.getForRange(\r\n\t\t\tstartDate,\r\n\t\t\tendDate\r\n\t\t);\r\n\t\tconst dayMoodsResponse = rawDayMoodsResponse.data.response;\r\n\t\tconst dayMoods = dayMoodsResponse.data.dateMoods;\r\n\t\tdayMoods.forEach((dateMood) => {\r\n\t\t\tconst date = currentDays.find((day) => day.date === dateMood.date);\r\n\t\t\tdate.moodColor = moodService.getMoodColor(dateMood.mood);\r\n\t\t});\r\n\r\n\t\tthis.setState({\r\n\t\t\tisLoading: false,\r\n\t\t\tdays: [...currentDays]\r\n\t\t});\r\n\t}\r\n\r\n\tasync componentDidUpdate(prevProps, prevState) {\r\n\t\tconst prevDate = prevState.date;\r\n\r\n\t\tif(prevDate.year !== this.state.date.year || prevDate.month !== this.state.date.month) {\r\n\t\t\tawait this.updateCalendar();\r\n\t\t}\r\n\t}\r\n\r\n\tupdateDate = (year, month) => {\r\n\t\tconst { day } = this.state.date;\r\n\r\n\t\tthis.setState({\r\n\t\t\tdate: {\r\n\t\t\t\tyear,\r\n\t\t\t\tmonth,\r\n\t\t\t\tday\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\trender() {\r\n\t\tif (this.state.errorMessages.length > 0) {\r\n\t\t\tconst alerts = this.state.errorMessages.map((message, index) => {\r\n\t\t\t\treturn <Alert alert=\"danger\" message={message} key={index} />;\r\n\t\t\t});\r\n\r\n\t\t\treturn alerts;\r\n\t\t}\r\n\r\n\t\tif (this.state.isLoading) {\r\n\t\t\treturn <Spinner />;\r\n\t\t}\r\n\r\n\t\t// display days\r\n\t\tconst calendarRows = [];\r\n\t\tif (this.state.days.length !== 0) {\r\n\t\t\tlet next = 0;\r\n\t\t\tfor (let i = 0; i < 6; i++) {\r\n\t\t\t\tconst currentRowDays = [];\r\n\t\t\t\tfor (let j = 0; j < 7; j++) {\r\n\t\t\t\t\tcurrentRowDays.push(this.state.days[next++]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcalendarRows.push(\r\n\t\t\t\t\t<CalendarRow\r\n\t\t\t\t\t\tredirect={this.props.redirect}\r\n\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\tdays={currentRowDays}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst sideBarDateObject = {\r\n\t\t\tyear: this.state.date.year || 0,\r\n\t\t\tmonth: this.state.date.month || 0\r\n\t\t};\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<SideBar date={sideBarDateObject} updateDate={this.updateDate} />\r\n\t\t\t\t<div className={classes.Calendar}>\r\n\t\t\t\t\t<CalendarHeaderRow />\r\n\t\t\t\t\t{calendarRows}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Calendar;\r\n","import classes from './TodoForm.module.css';\r\n\r\nconst TodoForm = (props) => {\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        let title = event.target.title.value;\r\n        let description = event.target.description.value;\r\n\r\n        // validate title\r\n        if (!title) {\r\n            alert('Title is required!');\r\n            return;\r\n        } else {\r\n            title = title.trim();\r\n            if (title.length < 1) {\r\n                alert('Title is required!');\r\n                return;\r\n            }\r\n        }\r\n\r\n        // validate description\r\n        if (!description) {\r\n            alert('Description is required!');\r\n            return;\r\n        } else {\r\n            description = description.trim();\r\n            if (description.length < 1) {\r\n                alert('Description is required!');\r\n                return;\r\n            }\r\n        }\r\n\r\n        props.create(title, description);\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={onSubmit} className={classes.TodoForm}>\r\n            <label htmlFor='title' className={classes.TitleLabel}>Title</label>\r\n            <input \r\n                type='text' \r\n                placeholder='Something very important' \r\n                id='title' \r\n                className={classes.TitleInput} \r\n                name='title' \r\n            />\r\n            <textarea \r\n                className={classes.Textarea} \r\n                placeholder='Describe the very important thing' \r\n                name='description' \r\n            />\r\n            <button className={classes.CreateButton}>Create</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default TodoForm;","import { useState } from 'react';\r\nimport classes from './PresentationalTodo.module.css';\r\n\r\nimport todoService from '../../../../../../services/todoService';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheckSquare, faSquare, faTimes, faPen } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst PresentationalTodo = (props) => {\r\n    const [showDescription, setShowDescription] = useState(false);\r\n    const [isChecked, setIsChecked] = useState(props.todo.isChecked);\r\n\r\n    let descriptionElement = null;\r\n    if (showDescription) {\r\n        descriptionElement = (\r\n            <div className={classes.TodoDescription} >\r\n                <div className={classes.ButtonsContainer} >\r\n                    <FontAwesomeIcon\r\n                        onClick={props.toggleEdit}\r\n                        icon={faPen}\r\n                        className={classes.Icon}\r\n                    />\r\n                    <FontAwesomeIcon\r\n                        onClick={props.delete}\r\n                        icon={faTimes}\r\n                        className={classes.Icon}\r\n                    />\r\n                </div>\r\n                <p className={classes.Title}>{props.title}</p>\r\n                {props.description}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const toggleDescriptionHandler = () => {\r\n        setShowDescription((oldState) => !oldState);\r\n    }\r\n\r\n    const changeCheckedHandler = async (event) => {\r\n        event.stopPropagation();\r\n        setIsChecked((oldState) => !oldState);\r\n        await todoService.changeTodoCheckedState(props.todo.id, !isChecked);\r\n    }\r\n\r\n    const nextCheckIcon = isChecked ? faCheckSquare : faSquare;\r\n\r\n    return (\r\n        <div>\r\n            <div\r\n                onClick={toggleDescriptionHandler}\r\n                style={props.todo.label}\r\n                className={classes.Todo}\r\n            >\r\n                <div\r\n                    style={{ color: props.todo.label.color }}\r\n                    className={classes.TodoText}\r\n                >\r\n                    {props.title}\r\n                </div>\r\n                <FontAwesomeIcon\r\n                    onClick={changeCheckedHandler}\r\n                    icon={nextCheckIcon}\r\n                    className={classes.CheckIcon}\r\n                />\r\n            </div>\r\n            {descriptionElement}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PresentationalTodo;","import classes from './EditableTodo.module.css';\r\n\r\nimport todoService from '../../../../../../services/todoService';\r\n\r\nconst EditableTodo = (props) => {\r\n    const saveChangesHandler = (event) => {\r\n        event.preventDefault();\r\n        let title = event.target.title.value;\r\n        let description = event.target.description.value;\r\n\r\n        if (!title) {\r\n            alert('Title is required!');\r\n            return;\r\n        }\r\n\r\n        if (!description) {\r\n            alert('Description is required!');\r\n            return;\r\n        }\r\n\r\n        todoService.updateTodo(props.todo.id, title, description);\r\n        props.edit(title, description);\r\n    }\r\n    \r\n    const descriptionElement = (\r\n        <textarea\r\n            name='description'\r\n            defaultValue={props.description}\r\n            className={classes.DescriptionTextArea}\r\n            rows='5'\r\n        />\r\n    );\r\n\r\n    return (\r\n        <form onSubmit={saveChangesHandler}>\r\n            <div \r\n                style={props.todo.label}\r\n                className={classes.Todo}\r\n            >\r\n                <input \r\n                    name='title' \r\n                    type='text' \r\n                    className={classes.EditInput} \r\n                    defaultValue={props.title} \r\n                />\r\n            </div>\r\n\r\n            <div className={classes.EditButtonsContainer} >\r\n                <button className={`${classes.EditButton} ${classes.SaveChanges}`}>Save changes</button>\r\n\r\n                <button onClick={props.toggleEdit} className={`${classes.EditButton} ${classes.Cancel}`}>Cancel</button>\r\n            </div>\r\n            {descriptionElement}\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default EditableTodo;","import { useState } from 'react';\r\n\r\nimport PresentationalTodo from './PresentationalTodo/PresentationalTodo';\r\nimport EditableTodo from './EditableTodo/EditableTodo';\r\n\r\nconst Todo = (props) => {\r\n    const [title, setTitle] = useState(props.todo.title);\r\n    const [description, setDescrition] = useState(props.todo.description);\r\n    const [isEditable, setIsEditable] = useState(false);\r\n\r\n    const deleteTodoHandler = (event) => {\r\n        event.stopPropagation();\r\n        props.onDelete(props.todo.id);\r\n    }\r\n\r\n    const updateTodo = (title, description) => {\r\n        setTitle(title);\r\n        setDescrition(description);\r\n        setIsEditable(false);\r\n    }\r\n\r\n    const toggleEditableState = () => {\r\n        setIsEditable(oldState => !oldState);\r\n    }\r\n\r\n    if(isEditable) {\r\n        return (\r\n            <EditableTodo \r\n                title={title}\r\n                description={description}\r\n                todo={props.todo}\r\n                edit={updateTodo}\r\n                delete={deleteTodoHandler}\r\n            />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <PresentationalTodo \r\n            title={title}\r\n            description={description}\r\n            todo={props.todo}\r\n            toggleEdit={toggleEditableState}\r\n            delete={deleteTodoHandler}\r\n        />\r\n    );\r\n}\r\n\r\nexport default Todo;","import classes from './TodoList.module.css';\r\n\r\nimport Todo from './Todo/Todo';\r\n\r\nconst TodoList = (props) => {\r\n    if (props.todos.length === 0) {\r\n        return <h3>No created todos! Create one :)</h3>;\r\n    }\r\n\r\n    const todos = props.todos.map((todo) => {\r\n        return (\r\n            <Todo \r\n                todo={todo} \r\n                onDelete={props.deleteTodo} \r\n                key={todo.id} \r\n            />\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div className={classes.Todos}>\r\n            {todos}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoList;","import axios from '../axios.js';\r\n\r\nasync function getAll() {\r\n    const response = await axios.get('/labels/all');\r\n    const labelsResponse = response.data.response;\r\n    return labelsResponse;\r\n}\r\n\r\nconst labelService = {\r\n    getAll\r\n};\r\n\r\nexport default labelService;","import classes from './Label.module.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Label = (props) => {\r\n    const changeLabelHandler = () => {\r\n        props.change(props.label);\r\n    }\r\n\r\n    const style = {\r\n        backgroundColor: props.label.backgroundColor,\r\n        color: props.label.color\r\n    };\r\n\r\n    let checkedElement = null;\r\n    if (props.label.isSelected) {\r\n        checkedElement = (\r\n            <FontAwesomeIcon \r\n                icon={faCheck} \r\n                className={classes.Icon} \r\n                style={{ color: props.label.color }} \r\n            />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div onClick={changeLabelHandler} className={classes.Label}>\r\n            {checkedElement}\r\n            <p style={style} className={classes.LabelText}>{props.label.text}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Label;","import { useState, useEffect } from 'react';\r\nimport classes from './TodoLabels.module.css';\r\n\r\nimport labelsService from '../../../../services/labelService.js';\r\n\r\nimport Label from './Label/Label';\r\nimport Alert from '../../../Shared/Alert/Alert';\r\nimport Spinner from '../../../Shared/Spinner/Spinner';\r\n\r\nconst TodoLabels = (props) => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [errorMessages, setErrorMessages] = useState([]);\r\n    const [labels, setLabels] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchLabels() {\r\n            setIsLoading(true);\r\n            const labelsResponse = await labelsService.getAll();\r\n\r\n            if (!labelsResponse.successfull) {\r\n                setErrorMessages(labelsResponse.errorMessages);\r\n            } else {\r\n                const labels = labelsResponse.data.labels.map(label => {\r\n                    label.isSelected = false;\r\n                    return label;\r\n                })\r\n\r\n                setLabels(labels);\r\n            }\r\n\r\n            setIsLoading(false);\r\n        }\r\n\r\n        fetchLabels();\r\n    }, []);\r\n\r\n    const changeLabelHandler = (label) => {\r\n        const labelsCopy = labels.slice();\r\n        const selectedLabel = labelsCopy.find(labelCopy => labelCopy.backgroundColor === label.backgroundColor && labelCopy.color === label.color);\r\n\r\n        labelsCopy.forEach(label => label.isSelected = false);\r\n\r\n        selectedLabel.isSelected = true;\r\n        setLabels(labelsCopy);\r\n\r\n        props.change(label);\r\n    }\r\n\r\n    if (isLoading) {\r\n        return <Spinner />\r\n    }\r\n\r\n    if (errorMessages.length > 0) {\r\n        return errorMessages.map((message, index) => {\r\n            return <Alert key={index} alert='danger' message={message} />\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className={classes.TodoLabels}>\r\n            {labels.map((label, index) => {\r\n                return (\r\n                    <Label \r\n                        change={changeLabelHandler}\r\n                        key={index}\r\n                        label={label}\r\n                    />\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoLabels;","import { useState, useEffect } from 'react';\r\nimport classes from './TodoSection.module.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport todoService from '../../../services/todoService.js';\r\n\r\nimport Alert from '../../Shared/Alert/Alert';\r\nimport TodoForm from './TodoForm/TodoForm';\r\nimport TodoList from './TodoList/TodoList';\r\nimport TodoLabels from './TodoLabels/TodoLabels';\r\n\r\nconst TodoSection = (props) => {\r\n    const [errorMessages, setErrorMessages] = useState([]);\r\n    const [showCreateForm, setShowCreateForm] = useState(false);\r\n    const [selectedLabel, setSelectedLabel] = useState(null);\r\n    const [todos, setTodos] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchTodos() {\r\n            const todosResponse = await todoService.getDailyTodos(props.date);\r\n\r\n            if (!todosResponse.successfull) {\r\n                setErrorMessages(todosResponse.errorMessages);\r\n            } else {\r\n                setTodos(todosResponse.data.todos);\r\n            }\r\n        }\r\n\r\n        fetchTodos();\r\n    }, [props.date]);\r\n\r\n    const createTodoHandler = async (title, description) => {\r\n        if (selectedLabel === null) {\r\n            alert('Choose label');\r\n            return;\r\n        }\r\n\r\n        const createTodoResponse = await todoService.create({\r\n            title,\r\n            description,\r\n            labelText: selectedLabel.text,\r\n            date: props.date\r\n        });\r\n\r\n        const todoResponse = createTodoResponse.data.response;\r\n\r\n        if (!todoResponse.successfull) {\r\n            setErrorMessages(todoResponse.errorMessages);\r\n        } else {\r\n            const createdTodo = todoResponse.data.todo;\r\n            createdTodo.label = selectedLabel;\r\n            setTodos((oldTodos) => [...oldTodos, createdTodo]);\r\n        }\r\n\r\n        setSelectedLabel(null);\r\n        setShowCreateForm(false);\r\n    }\r\n\r\n    const deleteTodo = (todoId) => {\r\n        const todosCopy = todos.slice();\r\n        const todoIndex = todosCopy.findIndex(todo => todo.id === todoId);\r\n\r\n        if (todoIndex === -1) {\r\n            return;\r\n        }\r\n\r\n        todoService.deleteTodo(todoId);\r\n\r\n        todosCopy.splice(todoIndex, 1);\r\n        setTodos(todosCopy);\r\n    }\r\n  \r\n    const toggleShowCreateForm = () => {\r\n        setShowCreateForm((oldState) => !oldState);\r\n    }\r\n\r\n    const changeLabelHandler = (label) => {\r\n        setSelectedLabel(label);\r\n    }\r\n\r\n    if(errorMessages.length > 0) {\r\n        return errorMessages.map((message, index) => {\r\n            return <Alert key={index} alert='danger' message={message} />\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className={classes.TodoSection}>\r\n            <span className={classes.TodoSectionText}>Todo section:</span>\r\n            <FontAwesomeIcon onClick={toggleShowCreateForm} icon={faPlusCircle} className={classes.Add} />\r\n\r\n            {\r\n                showCreateForm ?\r\n                    (\r\n                        <div className={classes.Form}>\r\n                            <TodoForm create={createTodoHandler} />\r\n                            <TodoLabels change={changeLabelHandler} />\r\n                        </div>\r\n                    ) : null\r\n            }\r\n            <TodoList todos={todos} deleteTodo={deleteTodo} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoSection;","import { useEffect, useState } from 'react';\r\nimport classes from \"./MoodSelect.module.css\";\r\n\r\nimport moodService from '../../../services/moodService.js';\r\n\r\nimport Alert from '../../Shared/Alert/Alert';\r\n\r\nconst MoodSelect = (props) => {\r\n\tconst [errorMessages, setErrorMessages] = useState([]);\r\n\tconst [mood, setMood] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tasync function fetchMood() {\r\n\t\t\tconst rawMoodResponse = await moodService.getForDay(props.date);\r\n\t\t\tconst moodResponse = rawMoodResponse.data.response;\r\n\t\t\tif (!moodResponse.successfull) {\r\n\t\t\t\tsetErrorMessages(moodResponse.errorMessages);\r\n\t\t\t}\r\n\r\n\t\t\tconst mood = moodResponse.data.moodText;\r\n\t\t\tsetMood(mood);\r\n\t\t}\r\n\r\n\t\tfetchMood();\r\n\t}, [props.date]);\r\n\r\n\tconst updateMood = (event) => {\r\n\t\tconst selectedMood = event.target.value;\r\n\t\tmoodService.updateMood(props.date, selectedMood);\r\n\t\tsetMood(selectedMood);\r\n\t};\r\n\r\n\tif(errorMessages.length > 0) {\r\n\t\treturn errorMessages.map((message, index) => {\r\n\t\t\treturn <Alert key={index} alert='danger' message={message} />\r\n\t\t});\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.MoodContainer}>\r\n\t\t\t<span className={classes.MoodText}>How's your day going: </span>\r\n\t\t\t<select\r\n\t\t\t\tonChange={updateMood}\r\n\t\t\t\tdefaultValue={mood}\r\n\t\t\t\tclassName={classes.MoodSelect}\r\n\t\t\t>\r\n\t\t\t\t<option className={classes.Excellent}>Excellent</option>\r\n\t\t\t\t<option className={classes.Good}>Good</option>\r\n\t\t\t\t<option className={classes.Average}>Average</option>\r\n\t\t\t\t<option className={classes.Bad}>Bad</option>\r\n\t\t\t\t<option className={classes.Miserable}>Miserable</option>\r\n\t\t\t</select>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default MoodSelect;\r\n","import classes from './TodoContainer.module.css';\r\n\r\nimport calendarService from '../../services/calendarService.js';\r\n\r\nimport TodoSection from './TodoSection/TodoSection';\r\nimport MoodSelect from './MoodSelect/MoodSelect';\r\n\r\nconst TodoContainer = (props) => {\r\n    const date = props.match.params.date;\r\n    let stringDate = calendarService.convertFromNumber(date);\r\n\r\n    return (\r\n        <div className={classes.TodoContainer}>\r\n            <span className={classes.CurrentDate}>Current date: {stringDate}</span>\r\n            <MoodSelect date={date} />\r\n            <TodoSection date={date} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoContainer;","import React, { Component } from 'react';\r\nimport classes from './DayBox.module.css';\r\n\r\nimport calendarService from '../../../../../services/calendarService.js';\r\n\r\nclass DayBox extends Component {\r\n    state = {\r\n        showPopup: false\r\n    }\r\n\r\n    hoverHandler = () => {\r\n        this.setState({ showPopup: true });\r\n    }\r\n\r\n    hoverLeaveHandler = () => {\r\n        this.setState({ showPopup: false });\r\n    }\r\n\r\n    redirect = () => {\r\n        const date = this.props.date;\r\n        this.props.redirect(this.props.history, `/Todo/${date}`);\r\n    }\r\n\r\n    render() {\r\n        const moodColor = this.props.moodColor;\r\n        let popup = null;\r\n        if (this.state.showPopup) {\r\n            const stringDate = calendarService.convertFromNumber(this.props.date);\r\n\r\n            popup = (\r\n                <div className={classes.Popover}>{stringDate}</div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div\r\n                onMouseOver={this.hoverHandler}\r\n                onMouseLeave={this.hoverLeaveHandler}\r\n                onClick={this.redirect}\r\n                style={{ backgroundColor: moodColor }}\r\n                className={classes.DayBox}>\r\n                {popup}\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default DayBox;","import React, { Component } from 'react';\r\nimport classes from './WeekRow.module.css';\r\n\r\nimport moodService from '../../../../services/moodService.js';\r\n\r\nimport DayBox from './DayBox/DayBox';\r\n\r\nclass WeekRow extends Component {\r\n    render() {\r\n        const dayBoxes = [];\r\n        this.props.dayMoods.forEach(dayMood => {\r\n            const currentMood = moodService.getMoodColor(dayMood.mood);\r\n            dayBoxes.push(<DayBox {...this.props} key={dayMood.date} date={dayMood.date} moodColor={currentMood} />);\r\n        });\r\n\r\n        return (\r\n            <div className={classes.WeekRow}>\r\n                {dayBoxes}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WeekRow;","import React, { Component } from 'react';\r\nimport classes from './MonthBox.module.css';\r\n\r\nimport calendarService from '../../../services/calendarService.js';\r\nimport moodService from '../../../services/moodService.js';\r\n\r\nimport WeekRow from './WeekRow/WeekRow';\r\nimport Spinner from '../../Shared/Spinner/Spinner';\r\n\r\nclass MonthBox extends Component {\r\n    state = {\r\n        isLoading: false,\r\n        errorMessages: [],\r\n        monthDays: []\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.setState({ isLoading: true });\r\n\r\n        const { year, month } = this.props;\r\n        const { from, to } = calendarService.getMonthData(year, month);\r\n\r\n        const rawMoodResponse = await moodService.getForRange(from, to);\r\n        const moodResponse = rawMoodResponse.data.response;\r\n        const dateMoods = moodResponse.data.dateMoods;\r\n\r\n        const monthDays = [];\r\n        for (let i = from - 1; i <= to; i++) {\r\n            const currentDateMood = dateMoods.find(dateMood => dateMood.date === i);\r\n            let mood = 'Missing';\r\n            if (currentDateMood !== undefined) {\r\n                mood = currentDateMood.mood;\r\n            }\r\n\r\n            monthDays.push({\r\n                date: i,\r\n                mood\r\n            });\r\n        }\r\n\r\n        if (!moodResponse.successfull) {\r\n            this.setState({\r\n                isLoading: false,\r\n                errorMessages: [...moodResponse.errorMessages]\r\n            });\r\n        } else {\r\n            this.setState({\r\n                isLoading: false,\r\n                monthDays: [...monthDays]\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const spinner = this.state.isLoading ? <Spinner /> : null;\r\n        const weekRows = [];\r\n\r\n        if (this.state.monthDays.length > 0) {\r\n            let counter = 0;\r\n\r\n            for (let week = 0; week < 5; week++) {\r\n                const dayMoods = [];\r\n                for (let day = 0; day < 7; day++) {\r\n                    counter++;\r\n                    if (counter === this.state.monthDays.length) {\r\n                        break;\r\n                    }\r\n\r\n                    const { date, mood } = this.state.monthDays[counter];\r\n                    const dateMood = {\r\n                        date,\r\n                        mood\r\n                    };\r\n\r\n                    dayMoods.push(dateMood);\r\n                }\r\n\r\n                weekRows.push(<WeekRow {...this.props} dayMoods={dayMoods} key={week} />);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className={classes.MonthBox}>\r\n                {spinner}\r\n                {weekRows}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MonthBox;","import React, { Component } from 'react';\r\nimport classes from './MonthRow.module.css';\r\n\r\nimport MonthBox from '../MonthBox/MonthBox';\r\n\r\nclass MonthRow extends Component {\r\n\r\n    render() {\r\n        const monthBoxes = [];\r\n        for(let i = this.props.from; i <= this.props.to; i++) {\r\n            monthBoxes.push(<MonthBox {...this.props} year={this.props.year} key={i} month={i} />)\r\n        }\r\n\r\n        return (\r\n            <div className={classes.MonthRow}>\r\n                {monthBoxes}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MonthRow;","import React, { Component } from 'react';\r\n\r\nimport calendarService from '../../services/calendarService.js';\r\n\r\nimport MonthRow from './MonthRow/MonthRow';\r\n\r\nclass Overview extends Component {\r\n\r\n    render() {\r\n        const currentYear = calendarService.getCurrentYear();\r\n\r\n        return (\r\n            <div>\r\n                <MonthRow {...this.props} year={currentYear} from={1} to={4}/>\r\n                <MonthRow {...this.props} year={currentYear} from={5} to={8}/>\r\n                <MonthRow {...this.props} year={currentYear} from={9} to={12}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Overview;","import React, { Component } from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport authService from './services/authService.js';\n\nimport Navigation from './components/Navigation/Navigation';\nimport Login from './components/Login/Login';\nimport Register from './components/Register/Register';\nimport Calendar from './components/Calendar/Calendar';\nimport TodoContainer from './components/TodoContainer/TodoContainer';\nimport Overview from './components/Overview/Overview.js';\n\nclass App extends Component {\n  state = {\n    isAuthenticated: false\n  }\n\n  componentDidMount() {\n    const isAuthenticated = authService.isUserAuthenticated();\n    this.setState({ isAuthenticated: isAuthenticated });\n  }\n\n  redirect = (history, page, authenticate) => {\n    history.push(page);\n    sessionStorage.setItem('page', page);\n    if(authenticate !== undefined) {\n      this.setState({ isAuthenticated: authenticate });\n    }\n  }\n\n  render() {\n    const requireAuthentication = (Component, props) => {\n      // middleware function that checks if the user is authenticated\n      // if the user is not authenticated, he is redirected to Login page\n      // otherwise the desired component is rendered\n\n      if (!authService.isUserAuthenticated()) {\n        props.history.push('/Login');\n      }\n\n      return <Component redirect={this.redirect} {...props} />\n    }\n\n    const requireAnonymous = (Component, props) => {\n      // middleware function that checks if the user is not authenticated\n      // if he is not, then the app renderes the desired component\n      // if he is authenticated, he is redirected to Calendar component\n\n      if (authService.isUserAuthenticated()) {\n        props.history.push('/Calendar');\n      }\n\n      return <Component redirect={this.redirect} {...props} />\n    }\n\n    return (\n      <div>\n        <HashRouter>\n          <Navigation redirect={this.redirect} isAuthenticated={this.state.isAuthenticated} />\n          <Switch>\n            <Route path='/Login' exact render={(props) => requireAnonymous(Login, props)} />\n            <Route path='/Register' exact render={(props) => requireAnonymous(Register, props)} />\n            <Route path='/Calendar' exact render={(props) => requireAuthentication(Calendar, props)} />\n            <Route path='/Todo/:date' exact render={(props) => requireAuthentication(TodoContainer, props)} />\n            <Route path='/Overview' exact render={(props) => requireAuthentication(Overview, props)} />\n            <Route path='/' exact render={(props) => requireAuthentication(Calendar, props)} /> \n          </Switch>\n        </HashRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}