{"version":3,"sources":["components/Calendar/CalendarHeaderRow/CalendarHeaderRow.module.css","components/Calendar/CalendarRow/CalendarBox/TodoPopover/TodoPopover.module.css","components/Calendar/CalendarRow/CalendarBox/CalendarBox.module.css","components/TodoContainer/TodoSection/TodoList/Todo/PresentationalTodo/PresentationalTodo.module.css","components/TodoContainer/TodoSection/TodoList/Todo/EditableTodo/EditableTodo.module.css","components/TodoContainer/MoodSelect/MoodSelect.module.css","components/Navigation/Navigation.module.css","components/Navigation/BurgerButtons/BurgerButtons.module.css","components/Navigation/NavigationButtons/NavigationButtons.module.css","components/TodoContainer/TodoSection/TodoForm/TodoForm.module.css","components/TodoContainer/TodoSection/TodoSection.module.css","components/DateChanger/DateChanger.module.css","components/TodoContainer/TodoSection/TodoLabels/Label/Label.module.css","components/Login/Login.module.css","components/Register/Register.module.css","components/TodoContainer/TodoContainer.module.css","components/Overview/MonthBox/WeekRow/DayBox/DayBox.module.css","components/Shared/Spinner/Spinner.module.css","components/Calendar/Calendar.module.css","components/Calendar/SideBar/SideBar.module.css","components/Calendar/CalendarRow/CalendarRow.module.css","components/Calendar/CalendarRow/CalendarBox/CalendarTodo/CalendarTodo.module.css","components/TodoContainer/TodoSection/TodoList/TodoList.module.css","components/TodoContainer/TodoSection/TodoLabels/TodoLabels.module.css","components/Overview/MonthRow/MonthRow.module.css","components/Overview/MonthBox/MonthBox.module.css","components/Overview/MonthBox/WeekRow/WeekRow.module.css","axios.js","services/authService.js","components/Navigation/BurgerButtons/BurgerButtons.js","components/Navigation/NavigationButtons/NavigationButtons.js","components/Navigation/Navigation.js","components/Shared/Alert/Alert.js","components/Shared/Spinner/Spinner.js","components/Login/Login.js","components/Register/Register.js","services/calendarService.js","services/moodService.js","services/todoService.js","components/DateChanger/DateChanger.js","components/Calendar/SideBar/SideBar.js","components/Calendar/CalendarHeaderRow/CalendarHeaderRow.js","components/Calendar/CalendarRow/CalendarBox/CalendarTodo/CalendarTodo.js","components/Calendar/CalendarRow/CalendarBox/TodoPopover/TodoPopover.js","components/Calendar/CalendarRow/CalendarBox/CalendarBox.js","components/Calendar/CalendarRow/CalendarRow.js","components/Calendar/Calendar.js","components/TodoContainer/TodoSection/TodoForm/TodoForm.js","components/TodoContainer/TodoSection/TodoList/Todo/PresentationalTodo/PresentationalTodo.js","components/TodoContainer/TodoSection/TodoList/Todo/EditableTodo/EditableTodo.js","components/TodoContainer/TodoSection/TodoList/Todo/Todo.js","components/TodoContainer/TodoSection/TodoList/TodoList.js","services/labelService.js","components/TodoContainer/TodoSection/TodoLabels/Label/Label.js","components/TodoContainer/TodoSection/TodoLabels/TodoLabels.js","components/TodoContainer/TodoSection/TodoSection.js","components/TodoContainer/MoodSelect/MoodSelect.js","components/TodoContainer/TodoContainer.js","components/Overview/MonthBox/WeekRow/DayBox/DayBox.js","components/Overview/MonthBox/WeekRow/WeekRow.js","components/Overview/MonthBox/MonthBox.js","components/Overview/MonthRow/MonthRow.js","components/Overview/Overview.js","App.js","index.js"],"names":["module","exports","instance","axios","create","baseURL","interceptors","request","use","config","headers","common","localStorage","getItem","data","a","post","response","result","ok","persistUserData","authToken","setItem","authService","isUserAuthenticated","register","login","logout","removeItem","BurgerButtons","props","burgerButtons","isAuthenticated","onClick","redirect","className","classes","MobileLink","burgerButtonsStyle","display","showBurger","style","MobileButtons","NavigationButtons","NavigationButton","withRouter","useState","setShowBurger","page","history","Navigation","to","Logo","oldState","Burger","Slice","Alert","alert","role","message","Spinner","Loader","Login","isLoading","setIsLoading","errorMessages","setErrorMessages","onSubmit","event","preventDefault","email","target","value","password","length","alerts","forEach","index","push","LoginContainer","Slogan","htmlFor","id","type","placeholder","name","Register","RegisterContainer","trim","username","repeatPassword","dayjs","require","weekday","weekOfYear","getCalendarDays","year","month","current","currentDate","totalDays","daysInMonth","start","day","max","active","date","prevDate","prevMonthDays","previousDifference","previous","from","next","dateObject","days","Number","previousYear","previousMonth","i","parseInt","currentMonth","isActive","todos","currentDateObject","nextYear","nextMonth","transformToArray","extend","calendarService","convertFromNumber","stringDate","toString","substr","getCurrentDate","format","getCurrentYear","getMonthRange","monthDays","getMonthData","convertedMonth","get","mood","patch","startDate","endDate","moodService","getForDay","updateMood","getForRange","getMoodColor","todosResponse","todoId","newCheckState","delete","title","description","todoService","changeTodoCheckedState","getTodosForDates","getDailyTodos","deleteTodo","updateTodo","DateChanger","DateContainer","dateLabel","icon","faAngleLeft","Button","updateDate","dateValue","faAngleRight","SideBar","setYear","setMonth","newYear","newMonth","CalendarHeaderRow","HeaderBox","Mon","Tue","Wed","Thu","Fri","Sat","Sun","CalendarTodo","backgroundColor","TodoRow","TodoPopover","Popover","updateMoodHanlder","PopoverBox","Miserable","Bad","Average","Good","Excellent","showPopover","setShowPopover","moodColor","setMoodColor","useEffect","stopPropagation","newMoodColor","map","todo","label","boxClass","Current","Box","numberClass","Active","popover","FirstRow","LeftBox","onMouseLeave","onMouseOver","ColorBox","RightBox","SecondRow","CalendarRow","boxArray","Row","Calendar","setDays","setDate","Object","keys","currentDays","dayArr","find","rawDayMoodsResponse","dayMoodsResponse","dateMoods","dateMood","updateCalendar","calendarRows","currentRowDays","j","sideBarDateObject","dateDay","TodoForm","TitleLabel","TitleInput","Textarea","CreateButton","PresentationalTodo","showDescription","setShowDescription","isChecked","setIsChecked","descriptionElement","TodoDescription","ButtonsContainer","toggleEdit","faPen","Icon","faTimes","Title","changeCheckedHandler","nextCheckIcon","faCheckSquare","faSquare","Todo","color","TodoText","CheckIcon","EditableTodo","defaultValue","DescriptionTextArea","rows","edit","EditInput","EditButtonsContainer","EditButton","SaveChanges","Cancel","setTitle","setDescrition","isEditable","setIsEditable","deleteTodoHandler","onDelete","TodoList","Todos","labelsResponse","labelService","getAll","Label","checkedElement","isSelected","faCheck","change","LabelText","text","TodoLabels","labels","setLabels","labelsService","fetchLabels","changeLabelHandler","labelsCopy","slice","selectedLabel","labelCopy","TodoSection","showCreateForm","setShowCreateForm","setSelectedLabel","setTodos","fetchTodos","createTodoHandler","labelText","createTodoResponse","todoResponse","createdTodo","oldTodos","TodoSectionText","faPlusCircle","Add","Form","todosCopy","todoIndex","findIndex","splice","MoodSelect","setMood","rawMoodResponse","moodResponse","moodText","fetchMood","MoodContainer","MoodText","onChange","selectedMood","TodoContainer","match","params","CurrentDate","DayBox","showPopup","setShowPopup","popup","WeekRow","dayBoxes","dayMoods","dayMood","currentMood","key","MonthBox","setMonthDays","currentDateMood","undefined","fetchMonthDays","spinner","weekRows","counter","week","MonthRow","monthBoxes","Overview","currentYear","App","state","authenticate","sessionStorage","setState","this","requireAuthentication","Component","requireAnonymous","path","exact","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.95bcdde7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"CalendarHeaderRow\":\"CalendarHeaderRow_CalendarHeaderRow__3S2d1\",\"HeaderBox\":\"CalendarHeaderRow_HeaderBox__OD2i1\",\"Mon\":\"CalendarHeaderRow_Mon__2crmE\",\"Tue\":\"CalendarHeaderRow_Tue__2A6bi\",\"Wed\":\"CalendarHeaderRow_Wed__1bb0J\",\"Thu\":\"CalendarHeaderRow_Thu__1DhiX\",\"Fri\":\"CalendarHeaderRow_Fri__xam5U\",\"Sat\":\"CalendarHeaderRow_Sat__3j3kA\",\"Sun\":\"CalendarHeaderRow_Sun__2KCoD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PopoverBox\":\"TodoPopover_PopoverBox__1HGwV\",\"Excellent\":\"TodoPopover_Excellent__Oc1ov\",\"Good\":\"TodoPopover_Good__1GOC6\",\"Average\":\"TodoPopover_Average__12zaA\",\"Bad\":\"TodoPopover_Bad__2_1BM\",\"Miserable\":\"TodoPopover_Miserable__3RmIH\",\"Popover\":\"TodoPopover_Popover__2OaAP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Box\":\"CalendarBox_Box__1ED4f\",\"Current\":\"CalendarBox_Current__yueFT\",\"FirstRow\":\"CalendarBox_FirstRow__W-j9j\",\"SecondRow\":\"CalendarBox_SecondRow__-mX90\",\"LeftBox\":\"CalendarBox_LeftBox__3cclX\",\"RightBox\":\"CalendarBox_RightBox__3ltx7\",\"ColorBox\":\"CalendarBox_ColorBox__29Yol\",\"Number\":\"CalendarBox_Number__3nKFd\",\"Active\":\"CalendarBox_Active__3RoRU\",\"Popover\":\"CalendarBox_Popover__3uMHp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Todo\":\"PresentationalTodo_Todo__3LYpj\",\"Title\":\"PresentationalTodo_Title__2b3M_\",\"TodoText\":\"PresentationalTodo_TodoText__qH7-G\",\"Icon\":\"PresentationalTodo_Icon__3Gft4\",\"TodoDescription\":\"PresentationalTodo_TodoDescription__34-K1\",\"CheckIcon\":\"PresentationalTodo_CheckIcon__1sztL\",\"DescriptionTextArea\":\"PresentationalTodo_DescriptionTextArea__IyZc3\",\"ButtonsContainer\":\"PresentationalTodo_ButtonsContainer__3yLf-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Todo\":\"EditableTodo_Todo__2ZN2m\",\"Title\":\"EditableTodo_Title__lhflS\",\"TodoText\":\"EditableTodo_TodoText__1QzSG\",\"Icon\":\"EditableTodo_Icon__xL-lJ\",\"TodoDescription\":\"EditableTodo_TodoDescription__2Y3Kf\",\"CheckIcon\":\"EditableTodo_CheckIcon__3GcGe\",\"DescriptionTextArea\":\"EditableTodo_DescriptionTextArea__2iJ8K\",\"EditInput\":\"EditableTodo_EditInput__22hE-\",\"EditButtonsContainer\":\"EditableTodo_EditButtonsContainer__18N4z\",\"EditButton\":\"EditableTodo_EditButton__2pQ5o\",\"SaveChanges\":\"EditableTodo_SaveChanges__3ATbm\",\"Cancel\":\"EditableTodo_Cancel__MYRLR\",\"ButtonsContainer\":\"EditableTodo_ButtonsContainer__37MsX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MoodContainer\":\"MoodSelect_MoodContainer__3GNoy\",\"MoodSelect\":\"MoodSelect_MoodSelect__cPvjo\",\"MoodText\":\"MoodSelect_MoodText__EcV0e\",\"Excellent\":\"MoodSelect_Excellent__3hopn\",\"Good\":\"MoodSelect_Good__23LcC\",\"Average\":\"MoodSelect_Average__2qXFL\",\"Bad\":\"MoodSelect_Bad__1-cb_\",\"Miserable\":\"MoodSelect_Miserable__3DNd3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navigation\":\"Navigation_Navigation__1Vx2F\",\"Logo\":\"Navigation_Logo__3Eu3z\",\"Burger\":\"Navigation_Burger__29LEy\",\"Slice\":\"Navigation_Slice__2Dnj5\",\"NavigationButton\":\"Navigation_NavigationButton__12GEc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MobileButtons\":\"BurgerButtons_MobileButtons__DJ_vZ\",\"MobileLink\":\"BurgerButtons_MobileLink__2braj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationButton\":\"NavigationButtons_NavigationButton__12DgB\",\"Burger\":\"NavigationButtons_Burger__95Aeg\",\"Slice\":\"NavigationButtons_Slice__F412o\",\"MobileButtons\":\"NavigationButtons_MobileButtons__3PUoa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TodoForm\":\"TodoForm_TodoForm__1KQX-\",\"TitleInput\":\"TodoForm_TitleInput__3yDJL\",\"Textarea\":\"TodoForm_Textarea__2az40\",\"CreateButton\":\"TodoForm_CreateButton__2Dm6c\",\"TitleLabel\":\"TodoForm_TitleLabel__OGzAS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TodoSection\":\"TodoSection_TodoSection__CraQ9\",\"TodoSectionText\":\"TodoSection_TodoSectionText__4Lb6z\",\"Add\":\"TodoSection_Add__2tz3s\",\"Form\":\"TodoSection_Form__z4NYw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DateContainer\":\"DateChanger_DateContainer__tYqO2\",\"Button\":\"DateChanger_Button__2XsG0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"Label_Label__2DI8-\",\"LabelText\":\"Label_LabelText__2lTG6\",\"Icon\":\"Label_Icon__o3FW_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LoginContainer\":\"Login_LoginContainer__2XBSw\",\"Slogan\":\"Login_Slogan__1-Ycq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RegisterContainer\":\"Register_RegisterContainer__6PBdG\",\"Slogan\":\"Register_Slogan__2dRki\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TodoContainer\":\"TodoContainer_TodoContainer__3xrV0\",\"CurrentDate\":\"TodoContainer_CurrentDate__1TW6R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DayBox\":\"DayBox_DayBox__3H4-k\",\"Popover\":\"DayBox_Popover__tJP0z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__2JoOa\",\"load6\":\"Spinner_load6__tA7Lo\",\"round\":\"Spinner_round__28xsv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Calendar\":\"Calendar_Calendar__2_V_5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideBar\":\"SideBar_SideBar__t1vIZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Row\":\"CalendarRow_Row__1J3Va\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TodoRow\":\"CalendarTodo_TodoRow__1e8U0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Todos\":\"TodoList_Todos__lTK2q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TodoLabels\":\"TodoLabels_TodoLabels__3az9W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MonthRow\":\"MonthRow_MonthRow__zIp01\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MonthBox\":\"MonthBox_MonthBox__3lkh8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"WeekRow\":\"WeekRow_WeekRow__p0GTj\"};","import axios from 'axios';\r\n\r\n// * production\r\n//axios.defaults.baseURL = 'https://reactive-calendar.glitch.me';\r\n\r\nconst instance = axios.create({ baseURL: 'https://reactive-calendar.glitch.me' });\r\n\r\ninstance.interceptors.request.use(config => {\r\n    config.headers.common['x-authorization'] = localStorage.getItem('authToken');\r\n    return config;\r\n  });\r\n\r\nexport default instance;","import axios from '../axios.js';\r\n\r\nasync function register(data) {\r\n    // send post request with data to the back-end api\r\n    // if the response is successfull then the authentication token\r\n    // is saved to the localStorage\r\n\r\n    const response = await axios.post('/users/register', data);\r\n    const result = response.data.response;\r\n    if(result.ok) {\r\n        const authToken = result.data.authToken;\r\n        persistUserData(authToken);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nasync function login(data) {\r\n    // send post request with data to the back-end api\r\n    // if the response is successfull then the authentication token\r\n    // is saved to the localStorage\r\n\r\n    const response = await axios.post('/users/login', data);\r\n    const result = response.data.response;\r\n    if(result.ok) {\r\n        const authToken = result.data.authToken;\r\n        persistUserData(authToken);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction persistUserData(authToken) {\r\n    // save authentication token to the localStorage\r\n    localStorage.setItem('authToken', authToken);\r\n}\r\n\r\nfunction logout() {\r\n    // remove the authentication token from the localStorage\r\n    localStorage.removeItem('authToken');\r\n}\r\n\r\nfunction isUserAuthenticated() {\r\n    // check if the localStorage contains authentication token\r\n    const authToken = localStorage.getItem('authToken');\r\n    return authToken !== null;\r\n}\r\n\r\nconst authService = {\r\n    isUserAuthenticated,\r\n    register,\r\n    login,\r\n    logout\r\n};\r\n\r\nexport default authService;","import classes from './BurgerButtons.module.css';\r\n\r\nconst BurgerButtons = (props) => {\r\n    let burgerButtons = null;\r\n    if (props.isAuthenticated) {\r\n        burgerButtons = (\r\n            <span>\r\n                <div\r\n                    onClick={() => props.redirect('/Calendar')}\r\n                    className={classes.MobileLink}\r\n                >Calendar</div>\r\n\r\n                <div\r\n                    onClick={() => props.redirect('/Overview')}\r\n                    className={classes.MobileLink}\r\n                >Overview</div>\r\n\r\n                <div\r\n                    onClick={props.logout}\r\n                    className={classes.MobileLink}\r\n                >Logout</div>\r\n            </span>\r\n        );\r\n    } else {\r\n        burgerButtons = (\r\n            <span>\r\n                <div\r\n                    onClick={() => props.redirect('/Login')}\r\n                    className={classes.MobileLink}\r\n                >Login</div>\r\n\r\n                <div\r\n                    onClick={() => props.redirect('/Register')}\r\n                    className={classes.MobileLink}\r\n                >Register</div>\r\n            </span>\r\n        );\r\n    }\r\n\r\n    const burgerButtonsStyle = {\r\n        display: props.showBurger ? 'block' : 'none'\r\n    };\r\n\r\n    return (\r\n        <div style={burgerButtonsStyle} className={classes.MobileButtons}>\r\n            {burgerButtons}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BurgerButtons;","import classes from './NavigationButtons.module.css';\r\n\r\nconst NavigationButtons = (props) => {\r\n    let buttons = null;\r\n    if (props.isAuthenticated) {\r\n        buttons = (\r\n            <span>\r\n                <button\r\n                    onClick={props.logout}\r\n                    className={classes.NavigationButton}\r\n                >Logout</button>\r\n\r\n                <button\r\n                    onClick={() => props.redirect('/Overview')}\r\n                    className={classes.NavigationButton}\r\n                >Overview</button>\r\n\r\n                <button\r\n                    onClick={() => props.redirect('/Calendar')}\r\n                    className={classes.NavigationButton}\r\n                >Calendar</button>\r\n            </span>\r\n        );\r\n    } else {\r\n        buttons = (\r\n            <span>\r\n                <button\r\n                    onClick={() => props.redirect('/Register')}\r\n                    className={classes.NavigationButton}\r\n                >Register</button>\r\n\r\n                <button\r\n                    onClick={() => props.redirect('/Login')}\r\n                    className={classes.NavigationButton}\r\n                >Login</button>\r\n            </span>\r\n        );\r\n    }\r\n\r\n    return buttons;\r\n}\r\n\r\nexport default NavigationButtons;","import { useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport classes from './Navigation.module.css';\r\n\r\nimport authService from '../../services/authService.js';\r\n\r\nimport BurgerButtons from './BurgerButtons/BurgerButtons';\r\nimport NavigationButtons from './NavigationButtons/NavigationButtons';\r\n\r\nconst Navigation = (props) => {\r\n    const [showBurger, setShowBurger] = useState(false);\r\n\r\n    const redirect = (page) => {\r\n        props.redirect(props.history, page);\r\n    }\r\n\r\n    const logout = () => {\r\n        setShowBurger(false);\r\n        authService.logout();\r\n        props.redirect(props.history, '/Login', false);\r\n    }\r\n\r\n    const toggleBurgerButtons = () => {\r\n        setShowBurger(oldState => !oldState);\r\n    }\r\n\r\n    return (\r\n        <nav className={classes.Navigation}>\r\n            <span\r\n                to='/'\r\n                onClick={() => redirect('/')}\r\n                className={classes.Logo}\r\n            >Reactive Calendar</span>\r\n\r\n            <NavigationButtons \r\n                isAuthenticated={props.isAuthenticated}\r\n                logout={logout}\r\n                redirect={redirect}\r\n            />\r\n            \r\n            <div onClick={toggleBurgerButtons} className={classes.Burger}>\r\n                <div className={classes.Slice}></div>\r\n                <div className={classes.Slice}></div>\r\n                <div className={classes.Slice}></div>\r\n            </div>\r\n\r\n            <BurgerButtons \r\n                isAuthenticated={props.isAuthenticated}\r\n                logout={logout}\r\n                redirect={redirect}\r\n                showBurger={showBurger}\r\n            />\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default withRouter(Navigation);","const Alert = (props) => {\r\n    return (\r\n        <div className={`alert alert-${props.alert}`} role=\"alert\">\r\n            {props.message}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Alert;","import classes from './Spinner.module.css';\r\n\r\nconst Spinner = () => <div className={classes.Loader}>Loading...</div>;\r\n\r\nexport default Spinner;","import { useState } from 'react';\r\nimport classes from './Login.module.css';\r\n\r\nimport authService from '../../services/authService.js';\r\n\r\nimport Alert from '../Shared/Alert/Alert';\r\nimport Spinner from '../Shared/Spinner/Spinner';\r\n\r\nconst Login = (props) => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [errorMessages, setErrorMessages] = useState([]);\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const email = event.target.email.value;\r\n        const password = event.target.password.value;\r\n\r\n        // * validations\r\n        if (!email || email.length < 5) {\r\n            alert('Email is required!');\r\n            return;\r\n        }\r\n\r\n        if (!password || password.length < 6) {\r\n            alert('Password must be at least 6 symbols!');\r\n            return;\r\n        }\r\n\r\n        login({ email, password });\r\n    }\r\n\r\n    const login = async (data) => {\r\n        setIsLoading(true);\r\n\r\n        const result = await authService.login(data);\r\n\r\n        if (result.ok) {\r\n            props.redirect(props.history, '/Calendar', true);\r\n        } else {\r\n            setErrorMessages(result.errorMessages);\r\n        }\r\n\r\n        setIsLoading(false);\r\n    }\r\n\r\n    if (isLoading) {\r\n        return <Spinner />\r\n    }\r\n\r\n    const alerts = [];\r\n    errorMessages.forEach((message, index) => {\r\n        alerts.push(<Alert alert='danger' message={message} key={index} />);\r\n    });\r\n\r\n    return (\r\n        <div className={classes.LoginContainer}>\r\n            <p className={classes.Slogan}>Log in to your reactive account</p>\r\n            <form onSubmit={onSubmit}>\r\n                {alerts}\r\n                <div className=\"form-group\">\r\n                    <label htmlFor='email'>Email address</label>\r\n                    <input\r\n                        id='email'\r\n                        type=\"email\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Enter your email\"\r\n                        name='email'\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor='password'>Password</label>\r\n                    <input\r\n                        id='password'\r\n                        type=\"password\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Enter your password\"\r\n                        name='password'\r\n                    />\r\n                </div>\r\n\r\n                <button className=\"btn btn-primary w-100\">Log in</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;","import { useState } from 'react';\r\nimport authService from '../../services/authService.js';\r\nimport classes from './Register.module.css';\r\n\r\nimport Alert from '../Shared/Alert/Alert';\r\nimport Spinner from '../Shared/Spinner/Spinner';\r\n\r\nconst Register = (props) => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [errorMessages, setErrorMessages] = useState([]);\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const email = event.target.email.value.trim();\r\n        const username = event.target.username.value.trim();\r\n        const password = event.target.password.value.trim();\r\n        const repeatPassword = event.target.repeatPassword.value.trim();\r\n\r\n        // * validations\r\n        if (!email || email.length < 5) {\r\n            alert('Email is required!');\r\n            return;\r\n        }\r\n\r\n        if (!username || username.length < 5) {\r\n            alert('Username must be at least 5 symbols long!');\r\n            return;\r\n        }\r\n\r\n        if (!password || password.length < 6) {\r\n            alert('Password must be at least 6 symbols long!');\r\n            return;\r\n        }\r\n\r\n        if (password !== repeatPassword) {\r\n            alert('Passwords does not match!');\r\n            return;\r\n        }\r\n\r\n        register({ email, username, password });\r\n    }\r\n\r\n    const register = async (data) => {\r\n        setIsLoading(true);\r\n\r\n        const result = await authService.register(data);\r\n\r\n        if (result.ok) {\r\n            props.redirect(props.history, '/Calendar', true);\r\n        } else {\r\n            setErrorMessages(result.errorMessages);\r\n        }\r\n\r\n        setIsLoading(false);\r\n    }\r\n\r\n    if (isLoading) {\r\n        return <Spinner />\r\n    }\r\n\r\n    const alerts = [];\r\n    if (errorMessages.length > 0) {\r\n        alerts.push(errorMessages.forEach((message, index) => {\r\n            return <Alert alert='danger' message={message} key={index} />;\r\n        }));\r\n    }\r\n\r\n    return (\r\n        <div className={classes.RegisterContainer}>\r\n            <p className={classes.Slogan}>Register your reactive account</p>\r\n            <form onSubmit={onSubmit}>\r\n                {alerts}\r\n                <div className=\"form-group\">\r\n                    <label htmlFor='email'>Email address</label>\r\n                    <input\r\n                        id='email'\r\n                        type=\"email\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Enter your email\"\r\n                        name='email'\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor='username'>Username</label>\r\n                    <input\r\n                        id='username'\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Enter your username\"\r\n                        name='username'\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor='password'>Password</label>\r\n                    <input\r\n                        id='password'\r\n                        type=\"password\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Enter your password\"\r\n                        name='password'\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor='repeatPassword'>Repeat password</label>\r\n                    <input\r\n                        id='repeatPassword'\r\n                        type=\"password\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Repeat your password\"\r\n                        name='repeatPassword'\r\n                    />\r\n                </div>\r\n\r\n                <button className=\"btn btn-primary w-100\">Register</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Register;","const dayjs = require('dayjs');\r\nconst weekday = require(\"dayjs/plugin/weekday\");\r\nconst weekOfYear = require(\"dayjs/plugin/weekOfYear\");\r\n\r\ndayjs.extend(weekday);\r\ndayjs.extend(weekOfYear);\r\n\r\nfunction getCalendarDays(year, month) {\r\n    // get the current month days\r\n    // previous month last days and next month start days\r\n\r\n    const result = {\r\n        year,\r\n        month,\r\n        current: {}\r\n    }\r\n\r\n    // get the total days in the current month\r\n    const currentDate = dayjs(`${year}/${month}/01`);\r\n    let totalDays = currentDate.daysInMonth();\r\n\r\n    result.current = {\r\n        start: currentDate.day(),\r\n        max: currentDate.daysInMonth(),\r\n        active: dayjs().date()\r\n    }\r\n\r\n    if (result.current.start === 0) {\r\n        // if the start day is sunday\r\n        // change the number, so the calendar works correctly\r\n        result.current.start = 7;\r\n    }\r\n\r\n    if (result.current.start !== 1) {\r\n        // check if the current month does not start in monday\r\n        // calculate how many days should the function take from\r\n        // the previous month\r\n        // * example (current month starts in Wednesday)\r\n        // * then the function takes the last two days from \r\n        // * the previous day\r\n\r\n        // take the total days in the previous month\r\n        const prevDate = dayjs(`${year}/${month - 1}/01`);\r\n        const prevMonthDays = prevDate.daysInMonth();\r\n        // calculate the difference\r\n        const previousDifference = prevMonthDays - (result.current.start - 2);\r\n        totalDays += (prevMonthDays - previousDifference) + 1;\r\n\r\n        result.previous = {\r\n            from: previousDifference,\r\n            to: prevDate.daysInMonth()\r\n        }\r\n    }\r\n\r\n    if (totalDays < 42) {\r\n        // check if the total days to this moment (current month days + previous month days) is less than 42\r\n        // ? 42 => (the calendar has 6 rows with 7 days)\r\n        // calculate how many days should be taken from next month\r\n        result.next = {\r\n            to: 42 - totalDays\r\n        }\r\n    }\r\n\r\n    // ? example of the current result\r\n    /* \r\n        result = {\r\n            current: {\r\n                start: 4, // ? (number between 1 and 7 (1-Mon, 7-Sun))\r\n                max: 30, // ? max days the current month has\r\n                active: 5 // ? the current date\r\n            },\r\n            previous: {\r\n                from: 29, // ? start date from previous month\r\n                to: 31 // ? end date from previous month\r\n            },\r\n            next: {\r\n                to: 9 // ? end date of next month\r\n            },\r\n            month: 4, // ? current month\r\n            year: 2021 // ? current year\r\n        }\r\n    */\r\n\r\n    // return the result object transformed to dates array\r\n    return transformToArray(result);\r\n}\r\n\r\nfunction transformToArray(dateObject) {\r\n    // transforms dateObject to dates array\r\n    const days = [];\r\n\r\n    // get the current year and month and convert them to numbers\r\n    let { year, month } = dateObject;\r\n    year = Number(year);\r\n    month = Number(month);\r\n\r\n    // * generate objects if there are previous month days\r\n    if (dateObject.previous) {\r\n        let previousYear, previousMonth;\r\n\r\n        // get the previous month and year\r\n        if (month === 1) {\r\n            previousMonth = 12;\r\n            previousYear = year - 1;\r\n        } else {\r\n            previousMonth = month - 1;\r\n            if (previousMonth < 10) {\r\n                previousMonth = `0${previousMonth}`;\r\n            }\r\n            previousYear = year;\r\n        }\r\n\r\n        // generate the previous month dates\r\n        for (let i = dateObject.previous.from; i <= dateObject.previous.to; i++) {\r\n            days.push({\r\n                date: parseInt(`${previousYear}${previousMonth}${i}`),\r\n                currentMonth: false,\r\n                isActive: false,\r\n                day: i,\r\n                todos: []\r\n            });\r\n        }\r\n    }\r\n\r\n    // * generate current month days\r\n    let currentMonth = month;\r\n    if (currentMonth < 10) {\r\n        currentMonth = `0${month}`;\r\n    }\r\n\r\n    for (let i = 1; i <= dateObject.current.max; i++) {\r\n        // generate current month dates\r\n\r\n        let currentDate = i;\r\n        if (currentDate < 10) {\r\n            currentDate = `0${currentDate}`;\r\n        }\r\n\r\n        const currentDateObject = {\r\n            date: parseInt(`${year}${currentMonth}${currentDate}`),\r\n            currentMonth: true,\r\n            isActive: false,\r\n            day: i,\r\n            todos: []\r\n        };\r\n\r\n        // set the active flag to the current date\r\n        if (i === dateObject.current.active) {\r\n            currentDateObject.isActive = true;\r\n        }\r\n\r\n        days.push(currentDateObject);\r\n    }\r\n\r\n    // * generate objects if there are next month days\r\n    if (dateObject.next) {\r\n        // generate next month dates\r\n\r\n        // calculate next month and year\r\n        let nextYear, nextMonth;\r\n        if (month === 12) {\r\n            nextMonth = 1;\r\n            nextYear = year + 1;\r\n        } else {\r\n            nextMonth = month + 1;\r\n            nextYear = year;\r\n        }\r\n\r\n        if (nextMonth < 10) {\r\n            nextMonth = `0${nextMonth}`;\r\n        }\r\n\r\n        for (let i = 1; i <= dateObject.next.to; i++) {\r\n            // generate next month dates\r\n            const currentDate = i < 10 ? `0${i}` : i;\r\n            const currentDateObject = {\r\n                date: parseInt(`${nextYear}${nextMonth}${currentDate}`),\r\n                currentMonth: false,\r\n                isActive: false,\r\n                day: i,\r\n                todos: []\r\n            };\r\n\r\n            days.push(currentDateObject);\r\n        }\r\n    }\r\n\r\n    return days;\r\n}\r\n\r\nfunction getCurrentDate() {\r\n    const year = Number(dayjs().format('YYYY'));\r\n    const month = Number(dayjs().format('M'));\r\n    const day = Number(dayjs().format('D'));\r\n\r\n    return {\r\n        year,\r\n        month,\r\n        day\r\n    }\r\n}\r\n\r\nfunction getMonthRange(year, month) {\r\n    const monthDays = getCalendarDays(year, month);\r\n\r\n    return {\r\n        from: monthDays[0].date,\r\n        to: monthDays[monthDays.length - 1].date\r\n    };\r\n}\r\n\r\nfunction getCurrentYear() {\r\n    return dayjs().format('YYYY');\r\n}\r\n\r\nfunction getMonthData(year, month) {\r\n    const currentDate = dayjs(`${year}/${month}/01`);\r\n    let totalDays = currentDate.daysInMonth();\r\n    let convertedMonth = month < 10 ? `0${month}` : month;\r\n\r\n    const from = parseInt(`${year}${convertedMonth}0${1}`);\r\n    const to = parseInt(`${year}${convertedMonth}${totalDays}`);\r\n\r\n    return {\r\n        from,\r\n        to\r\n    };\r\n}\r\n\r\nfunction convertFromNumber(date) {\r\n    // get date as number (20210405) and returns '2021/04/05'\r\n\r\n    const stringDate = date.toString();\r\n    const year = stringDate.substr(0, 4);\r\n    const month = stringDate.substr(4, 2);\r\n    const day = stringDate.substr(6, 2);\r\n\r\n    return `${year}/${month}/${day}`;\r\n}\r\n\r\nconst calendarService = {\r\n    convertFromNumber,\r\n    getCalendarDays,\r\n    getCurrentDate,\r\n    getCurrentYear,\r\n    getMonthRange,\r\n    getMonthData\r\n};\r\n\r\nexport default calendarService;","import axios from '../axios.js';\r\n\r\nasync function getForDay(date) {\r\n    const response = await axios.get(`/mood/${date}`);\r\n    return response;\r\n}\r\n\r\nasync function updateMood(date, mood) {\r\n    const response = await axios.patch(`/mood/${date}`, { mood });\r\n    return response;\r\n}\r\n\r\nasync function getForRange(startDate, endDate) {\r\n    const response = await axios.get(`/mood/range?startDate=${startDate}&endDate=${endDate}`);\r\n    return response;\r\n}\r\n\r\nfunction getMoodColor(mood) {\r\n    switch(mood) {\r\n        case 'Excellent': return '#008000';\r\n        case 'Good': return '#38b000';\r\n        case 'Average': return '#ccff33';\r\n        case 'Bad': return '#f79d65';\r\n        case 'Miserable': return '#f27059';\r\n        default: return 'white';\r\n    }\r\n}\r\n\r\nconst moodService = {\r\n    getForDay,\r\n    updateMood,\r\n    getForRange,\r\n    getMoodColor\r\n};\r\n\r\nexport default moodService;","import axios from '../axios.js';\r\n\r\nasync function getDailyTodos(date) {\r\n    // get todos for a date\r\n    // send authentication token and current date\r\n    const response = await axios.get(`/todo/date/${date}`);\r\n    \r\n    const todosResponse = response.data.response;\r\n    return todosResponse;\r\n}\r\n\r\nasync function getTodosForDates(startDate, endDate) {\r\n    // get todos for range of two dates\r\n    // send authentication token, startDate and endDate\r\n    \r\n    const response = await axios.get(`/todo/range?startDate=${startDate}&endDate=${endDate}`);\r\n    const todosResponse = response.data.response;\r\n    return todosResponse;\r\n}\r\n\r\nasync function create(data) {\r\n    const response = await axios.post('/todo/', data);\r\n    return response;\r\n}\r\n\r\nasync function changeTodoCheckedState(todoId, newCheckState) {\r\n    const response = await axios.patch(`/todo/${todoId}/check`, { newCheckState });\r\n    return response;\r\n}\r\n\r\nasync function deleteTodo(todoId) {\r\n    const response = await axios.delete(`/todo/${todoId}`);\r\n    return response;\r\n}\r\n\r\nasync function updateTodo(todoId, title, description) {\r\n    const response = await axios.patch(`/todo/${todoId}`, { title, description });\r\n    return response;\r\n}\r\n\r\nconst todoService = {\r\n    changeTodoCheckedState,\r\n    getTodosForDates,\r\n    getDailyTodos,\r\n    deleteTodo,\r\n    updateTodo,\r\n    create\r\n};\r\n\r\nexport default todoService;","import classes from \"./DateChanger.module.css\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faAngleLeft, faAngleRight } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst DateChanger = (props) => {\r\n\treturn (\r\n\t\t<div className={classes.DateContainer}>\r\n\t\t\t<span>{props.dateLabel}: </span>\r\n\t\t\t<FontAwesomeIcon\r\n\t\t\t\ticon={faAngleLeft}\r\n\t\t\t\tclassName={classes.Button}\r\n\t\t\t\tonClick={() => props.updateDate(-1)}\r\n\t\t\t/>\r\n\t\t\t<span>{props.dateValue}</span>\r\n\t\t\t<FontAwesomeIcon\r\n\t\t\t\ticon={faAngleRight}\r\n\t\t\t\tclassName={classes.Button}\r\n\t\t\t\tonClick={() => props.updateDate(1)}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default DateChanger;\r\n","import { useState } from 'react';\r\nimport classes from './SideBar.module.css';\r\n\r\nimport DateChanger from '../../DateChanger/DateChanger';\r\n\r\nconst SideBar = (props) => {\r\n    const [year, setYear] = useState(props.date.year);\r\n    const [month, setMonth] = useState(props.date.month);\r\n\r\n    const updateYear = (value) => {\r\n        const newYear = year + value;\r\n        setYear(newYear);\r\n        props.updateDate(newYear, month);\r\n    }\r\n\r\n    const updateMonth = (value) => {\r\n        let newMonth = month + value;\r\n        let newYear = year;\r\n\r\n        if (month === 0) {\r\n            newMonth = 12;\r\n            newYear--;\r\n        } else if (month === 13) {\r\n            newMonth = 1;\r\n            newYear++;\r\n        }\r\n\r\n        setMonth(newMonth);\r\n        setYear(newYear);\r\n        props.updateDate(newYear, newMonth);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.SideBar}>\r\n            <DateChanger \r\n                dateLabel='Year' \r\n                dateValue={year} \r\n                updateDate={updateYear} \r\n            />\r\n\r\n            <DateChanger \r\n                dateLabel='Month' \r\n                dateValue={month} \r\n                updateDate={updateMonth} \r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SideBar;","import classes from './CalendarHeaderRow.module.css';\r\n\r\nconst CalendarHeaderRow = () => {\r\n    return (\r\n        <div className={classes.CalendarHeaderRow}>\r\n            <div className={`${classes.HeaderBox} ${classes.Mon}`}></div>\r\n            <div className={`${classes.HeaderBox} ${classes.Tue}`}></div>\r\n            <div className={`${classes.HeaderBox} ${classes.Wed}`}></div>\r\n            <div className={`${classes.HeaderBox} ${classes.Thu}`}></div>\r\n            <div className={`${classes.HeaderBox} ${classes.Fri}`}></div>\r\n            <div className={`${classes.HeaderBox} ${classes.Sat}`}></div>\r\n            <div className={`${classes.HeaderBox} ${classes.Sun}`}></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CalendarHeaderRow;","import classes from './CalendarTodo.module.css';\r\n\r\nconst CalendarTodo = (props) => {\r\n    const style = {\r\n        backgroundColor: props.backgroundColor\r\n    };\r\n\r\n    return (\r\n        <div style={style} className={classes.TodoRow}></div>\r\n    );\r\n}\r\n\r\nexport default CalendarTodo;","import classes from './TodoPopover.module.css';\r\n\r\nconst TodoPopover = (props) => {\r\n    return (\r\n        <div className={classes.Popover}>\r\n            <div \r\n                onClick={(event) => props.updateMoodHanlder(event, 'Miserable')} \r\n                className={`${classes.PopoverBox} ${classes.Miserable}`}\r\n            ></div>\r\n\r\n            <div \r\n                onClick={(event) => props.updateMoodHanlder(event, 'Bad')} className={`${classes.PopoverBox} ${classes.Bad}`}\r\n            ></div>\r\n\r\n            <div \r\n                onClick={(event) => props.updateMoodHanlder(event, 'Average')} className={`${classes.PopoverBox} ${classes.Average}`}\r\n            ></div>\r\n            \r\n            <div \r\n                onClick={(event) => props.updateMoodHanlder(event, 'Good')} className={`${classes.PopoverBox} ${classes.Good}`}\r\n            ></div>\r\n\r\n            <div \r\n                onClick={(event) => props.updateMoodHanlder(event, 'Excellent')} \r\n                className={`${classes.PopoverBox} ${classes.Excellent}`}\r\n            ></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoPopover;","import { useState, useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport classes from './CalendarBox.module.css';\r\n\r\nimport moodService from '../../../../services/moodService.js';\r\n\r\nimport CalendarTodo from './CalendarTodo/CalendarTodo';\r\nimport TodoPopover from './TodoPopover/TodoPopover';\r\n\r\nconst CalendarBox = (props) => {\r\n    const [showPopover, setShowPopover] = useState(false);\r\n    const [moodColor, setMoodColor] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const moodColor = props.dateObject.moodColor || '#ebedf0';\r\n        setMoodColor(moodColor);\r\n    }, [props]);\r\n\r\n\r\n    const redirect = () => {\r\n        const date = props.dateObject.date;\r\n        props.redirect(props.history, `/Todo/${date}`);\r\n    }\r\n\r\n    const showPopoverHandler = () => {\r\n        setShowPopover(true);\r\n    }\r\n\r\n    const hidePopoverHandler = () => {\r\n        setShowPopover(false);\r\n    }\r\n\r\n    const updateMoodHanlder = async (event, mood) => {\r\n        event.stopPropagation();\r\n        const newMoodColor = moodService.getMoodColor(mood);\r\n        setMoodColor(newMoodColor);\r\n        const date = props.dateObject.date;\r\n        moodService.updateMood(date, mood);\r\n    }\r\n\r\n    const todos = props.dateObject.todos.map((todo, index) => {\r\n        return (\r\n            <CalendarTodo\r\n                backgroundColor={todo.label.backgroundColor}\r\n                key={index}\r\n            />\r\n        );\r\n    });\r\n\r\n    const date = props.dateObject;\r\n    let boxClass = date.currentMonth ? classes.Current : classes.Box;\r\n    let numberClass = date.isActive ? classes.Active : classes.Number;\r\n\r\n    let popover = null;\r\n    if (showPopover) {\r\n        popover = (\r\n            <TodoPopover\r\n                updateMoodHanlder={updateMoodHanlder}\r\n            />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className={boxClass} onClick={redirect}>\r\n            <span className={classes.FirstRow}>\r\n                <div className={classes.LeftBox}>\r\n                    <div \r\n                        onMouseLeave={hidePopoverHandler} \r\n                        onMouseOver={showPopoverHandler} \r\n                        style={{ backgroundColor: moodColor }} \r\n                        className={classes.ColorBox}\r\n                    >\r\n                        {popover}\r\n                    </div>\r\n                </div>\r\n                <div className={classes.RightBox}>\r\n                    <p className={numberClass}>{date.day}</p>\r\n                </div>\r\n            </span>\r\n            <span className={classes.SecondRow}>\r\n                {todos}\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(CalendarBox);","import classes from './CalendarRow.module.css';\r\n\r\nimport CalendarBox from './CalendarBox/CalendarBox';\r\n\r\nconst CalendarRow = (props) => {\r\n    const boxArray = [];\r\n    if (props.days.length > 0) {\r\n        for (let i = 0; i < props.days.length; i++) {\r\n            const date = props.days[i];\r\n            boxArray.push(\r\n                <CalendarBox \r\n                    redirect={props.redirect} \r\n                    key={i} \r\n                    dateObject={date} \r\n                />\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Row}>\r\n            {boxArray}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CalendarRow;","import { useState, useEffect } from 'react';\r\nimport classes from \"./Calendar.module.css\";\r\n\r\nimport calendarService from \"../../services/calendarService.js\";\r\nimport moodService from \"../../services/moodService.js\";\r\nimport todoService from \"../../services/todoService.js\";\r\n\r\nimport SideBar from './SideBar/SideBar';\r\nimport CalendarHeaderRow from './CalendarHeaderRow/CalendarHeaderRow';\r\nimport CalendarRow from './CalendarRow/CalendarRow';\r\nimport Alert from '../Shared/Alert/Alert';\r\nimport Spinner from '../Shared/Spinner/Spinner';\r\n\r\nconst Calendar = (props) => {\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\tconst [errorMessages, setErrorMessages] = useState([]);\r\n\tconst [days, setDays] = useState([]);\r\n\tconst [date, setDate] = useState({});\r\n\r\n\tuseEffect(() => {\r\n\t\t// * get current date\r\n\t\t// * get days for the calendar\r\n\t\t// * get todos for the days\r\n\r\n\t\tconst currentDate = calendarService.getCurrentDate();\r\n\t\tsetDate(currentDate);\r\n\t}, [props]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst updateCalendar = async () => {\r\n\t\t\tif(Object.keys(date).length === 0) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tsetIsLoading(true);\r\n\t\t\tconst { year, month } = date;\r\n\r\n\t\t\tconst currentDays = calendarService.getCalendarDays(year, month);\r\n\t\r\n\t\t\tconst startDate = currentDays[0].date;\r\n\t\t\tconst endDate = currentDays[currentDays.length - 1].date;\r\n\t\r\n\t\t\tconst todosResponse = await todoService.getTodosForDates(\r\n\t\t\t\tstartDate,\r\n\t\t\t\tendDate\r\n\t\t\t);\r\n\t\t\tif (!todosResponse.ok) {\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t\tsetErrorMessages(todosResponse.errorMessages);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\r\n\t\t\tconst dateTodos = todosResponse.data.todos;\r\n\t\t\tdateTodos.forEach((todo) => {\r\n\t\t\t\tconst dayArr = currentDays.find((day) => day.date === todo.date);\r\n\t\r\n\t\t\t\tif (dayArr.todos.length < 3) {\r\n\t\t\t\t\tdayArr.todos.push(todo);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\r\n\t\t\t// update moods\r\n\t\t\tconst rawDayMoodsResponse = await moodService.getForRange(\r\n\t\t\t\tstartDate,\r\n\t\t\t\tendDate\r\n\t\t\t);\r\n\t\t\tconst dayMoodsResponse = rawDayMoodsResponse.data.response;\r\n\t\t\tconst dayMoods = dayMoodsResponse.data.dateMoods;\r\n\t\t\tdayMoods.forEach((dateMood) => {\r\n\t\t\t\tconst currentDate = currentDays.find((day) => day.date === dateMood.date);\r\n\t\t\t\tcurrentDate.moodColor = moodService.getMoodColor(dateMood.mood);\r\n\t\t\t});\r\n\t\r\n\t\t\tsetIsLoading(false);\r\n\t\t\tsetDays(currentDays);\r\n\t\t}\r\n\r\n\t\tupdateCalendar();\r\n\t}, [date]);\r\n\r\n\tconst updateDate = (year, month) => {\r\n\t\tconst dateDay = date.day;\r\n\r\n\t\tsetDate({\r\n\t\t\tyear,\r\n\t\t\tmonth,\r\n\t\t\tday: dateDay\r\n\t\t});\r\n\t};\r\n\r\n\tif (errorMessages.length > 0) {\r\n\t\treturn errorMessages.map((message, index) => {\r\n\t\t\treturn <Alert alert=\"danger\" message={message} key={index} />;\r\n\t\t});\r\n\t}\r\n\r\n\tif (isLoading) {\r\n\t\treturn <Spinner />;\r\n\t}\r\n\r\n\t// display days\r\n\tconst calendarRows = [];\r\n\tif (days.length !== 0) {\r\n\t\tlet next = 0;\r\n\t\tfor (let i = 0; i < 6; i++) {\r\n\t\t\tconst currentRowDays = [];\r\n\t\t\tfor (let j = 0; j < 7; j++) {\r\n\t\t\t\tcurrentRowDays.push(days[next++]);\r\n\t\t\t}\r\n\r\n\t\t\tcalendarRows.push(\r\n\t\t\t\t<CalendarRow\r\n\t\t\t\t\tredirect={props.redirect}\r\n\t\t\t\t\tkey={i}\r\n\t\t\t\t\tdays={currentRowDays}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tconst sideBarDateObject = {\r\n\t\tyear: date.year || 0,\r\n\t\tmonth: date.month || 0\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<SideBar date={sideBarDateObject} updateDate={updateDate} />\r\n\t\t\t<div className={classes.Calendar}>\r\n\t\t\t\t<CalendarHeaderRow />\r\n\t\t\t\t{calendarRows}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Calendar;\r\n","import classes from './TodoForm.module.css';\r\n\r\nconst TodoForm = (props) => {\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        let title = event.target.title.value;\r\n        let description = event.target.description.value;\r\n\r\n        // validate title\r\n        if (!title) {\r\n            alert('Title is required!');\r\n            return;\r\n        } else {\r\n            title = title.trim();\r\n            if (title.length < 1) {\r\n                alert('Title is required!');\r\n                return;\r\n            }\r\n        }\r\n\r\n        // validate description\r\n        if (!description) {\r\n            alert('Description is required!');\r\n            return;\r\n        } else {\r\n            description = description.trim();\r\n            if (description.length < 1) {\r\n                alert('Description is required!');\r\n                return;\r\n            }\r\n        }\r\n\r\n        props.create(title, description);\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={onSubmit} className={classes.TodoForm}>\r\n            <label htmlFor='title' className={classes.TitleLabel}>Title</label>\r\n            <input \r\n                type='text' \r\n                placeholder='Something very important' \r\n                id='title' \r\n                className={classes.TitleInput} \r\n                name='title' \r\n            />\r\n            <textarea \r\n                className={classes.Textarea} \r\n                placeholder='Describe the very important thing' \r\n                name='description' \r\n            />\r\n            <button className={classes.CreateButton}>Create</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default TodoForm;","import { useState } from 'react';\r\nimport classes from './PresentationalTodo.module.css';\r\n\r\nimport todoService from '../../../../../../services/todoService';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheckSquare, faSquare, faTimes, faPen } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst PresentationalTodo = (props) => {\r\n    const [showDescription, setShowDescription] = useState(false);\r\n    const [isChecked, setIsChecked] = useState(props.todo.isChecked);\r\n\r\n    let descriptionElement = null;\r\n    if (showDescription) {\r\n        descriptionElement = (\r\n            <div className={classes.TodoDescription} >\r\n                <div className={classes.ButtonsContainer} >\r\n                    <FontAwesomeIcon\r\n                        onClick={props.toggleEdit}\r\n                        icon={faPen}\r\n                        className={classes.Icon}\r\n                    />\r\n                    <FontAwesomeIcon\r\n                        onClick={props.delete}\r\n                        icon={faTimes}\r\n                        className={classes.Icon}\r\n                    />\r\n                </div>\r\n                <p className={classes.Title}>{props.title}</p>\r\n                {props.description}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const toggleDescriptionHandler = () => {\r\n        setShowDescription((oldState) => !oldState);\r\n    }\r\n\r\n    const changeCheckedHandler = async (event) => {\r\n        event.stopPropagation();\r\n        setIsChecked((oldState) => !oldState);\r\n        await todoService.changeTodoCheckedState(props.todo.id, !isChecked);\r\n    }\r\n\r\n    const nextCheckIcon = isChecked ? faCheckSquare : faSquare;\r\n\r\n    return (\r\n        <div>\r\n            <div\r\n                onClick={toggleDescriptionHandler}\r\n                style={props.todo.label}\r\n                className={classes.Todo}\r\n            >\r\n                <div\r\n                    style={{ color: props.todo.label.color }}\r\n                    className={classes.TodoText}\r\n                >\r\n                    {props.title}\r\n                </div>\r\n                <FontAwesomeIcon\r\n                    onClick={changeCheckedHandler}\r\n                    icon={nextCheckIcon}\r\n                    className={classes.CheckIcon}\r\n                />\r\n            </div>\r\n            {descriptionElement}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PresentationalTodo;","import classes from './EditableTodo.module.css';\r\n\r\nimport todoService from '../../../../../../services/todoService';\r\n\r\nconst EditableTodo = (props) => {\r\n    const saveChangesHandler = (event) => {\r\n        event.preventDefault();\r\n        let title = event.target.title.value;\r\n        let description = event.target.description.value;\r\n\r\n        if (!title) {\r\n            alert('Title is required!');\r\n            return;\r\n        }\r\n\r\n        if (!description) {\r\n            alert('Description is required!');\r\n            return;\r\n        }\r\n\r\n        todoService.updateTodo(props.todo.id, title, description);\r\n        props.edit(title, description);\r\n    }\r\n    \r\n    const descriptionElement = (\r\n        <textarea\r\n            name='description'\r\n            defaultValue={props.description}\r\n            className={classes.DescriptionTextArea}\r\n            rows='5'\r\n        />\r\n    );\r\n\r\n    return (\r\n        <form onSubmit={saveChangesHandler}>\r\n            <div \r\n                style={props.todo.label}\r\n                className={classes.Todo}\r\n            >\r\n                <input \r\n                    name='title' \r\n                    type='text' \r\n                    className={classes.EditInput} \r\n                    defaultValue={props.title} \r\n                />\r\n            </div>\r\n\r\n            <div className={classes.EditButtonsContainer} >\r\n                <button className={`${classes.EditButton} ${classes.SaveChanges}`}>Save changes</button>\r\n\r\n                <button onClick={props.toggleEdit} className={`${classes.EditButton} ${classes.Cancel}`}>Cancel</button>\r\n            </div>\r\n            {descriptionElement}\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default EditableTodo;","import { useState } from 'react';\r\n\r\nimport PresentationalTodo from './PresentationalTodo/PresentationalTodo';\r\nimport EditableTodo from './EditableTodo/EditableTodo';\r\n\r\nconst Todo = (props) => {\r\n    const [title, setTitle] = useState(props.todo.title);\r\n    const [description, setDescrition] = useState(props.todo.description);\r\n    const [isEditable, setIsEditable] = useState(false);\r\n\r\n    const deleteTodoHandler = (event) => {\r\n        event.stopPropagation();\r\n        props.onDelete(props.todo.id);\r\n    }\r\n\r\n    const updateTodo = (title, description) => {\r\n        setTitle(title);\r\n        setDescrition(description);\r\n        setIsEditable(false);\r\n    }\r\n\r\n    const toggleEditableState = () => {\r\n        setIsEditable(oldState => !oldState);\r\n    }\r\n\r\n    if(isEditable) {\r\n        return (\r\n            <EditableTodo \r\n                title={title}\r\n                description={description}\r\n                todo={props.todo}\r\n                edit={updateTodo}\r\n                delete={deleteTodoHandler}\r\n            />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <PresentationalTodo \r\n            title={title}\r\n            description={description}\r\n            todo={props.todo}\r\n            toggleEdit={toggleEditableState}\r\n            delete={deleteTodoHandler}\r\n        />\r\n    );\r\n}\r\n\r\nexport default Todo;","import classes from './TodoList.module.css';\r\n\r\nimport Todo from './Todo/Todo';\r\n\r\nconst TodoList = (props) => {\r\n    if (props.todos.length === 0) {\r\n        return <h3>No created todos! Create one :)</h3>;\r\n    }\r\n\r\n    const todos = props.todos.map((todo) => {\r\n        return (\r\n            <Todo \r\n                todo={todo} \r\n                onDelete={props.deleteTodo} \r\n                key={todo.id} \r\n            />\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div className={classes.Todos}>\r\n            {todos}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoList;","import axios from '../axios.js';\r\n\r\nasync function getAll() {\r\n    const response = await axios.get('/labels/all');\r\n    const labelsResponse = response.data.response;\r\n    return labelsResponse;\r\n}\r\n\r\nconst labelService = {\r\n    getAll\r\n};\r\n\r\nexport default labelService;","import classes from './Label.module.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Label = (props) => {\r\n    const changeLabelHandler = () => {\r\n        props.change(props.label);\r\n    }\r\n\r\n    const style = {\r\n        backgroundColor: props.label.backgroundColor,\r\n        color: props.label.color\r\n    };\r\n\r\n    let checkedElement = null;\r\n    if (props.label.isSelected) {\r\n        checkedElement = (\r\n            <FontAwesomeIcon \r\n                icon={faCheck} \r\n                className={classes.Icon} \r\n                style={{ color: props.label.color }} \r\n            />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div onClick={changeLabelHandler} className={classes.Label}>\r\n            {checkedElement}\r\n            <p style={style} className={classes.LabelText}>{props.label.text}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Label;","import { useState, useEffect } from 'react';\r\nimport classes from './TodoLabels.module.css';\r\n\r\nimport labelsService from '../../../../services/labelService.js';\r\n\r\nimport Label from './Label/Label';\r\nimport Alert from '../../../Shared/Alert/Alert';\r\nimport Spinner from '../../../Shared/Spinner/Spinner';\r\n\r\nconst TodoLabels = (props) => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [errorMessages, setErrorMessages] = useState([]);\r\n    const [labels, setLabels] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchLabels() {\r\n            setIsLoading(true);\r\n            const labelsResponse = await labelsService.getAll();\r\n\r\n            if (!labelsResponse.ok) {\r\n                setErrorMessages(labelsResponse.errorMessages);\r\n            } else {\r\n                const labels = labelsResponse.data.labels.map(label => {\r\n                    label.isSelected = false;\r\n                    return label;\r\n                })\r\n\r\n                setLabels(labels);\r\n            }\r\n\r\n            setIsLoading(false);\r\n        }\r\n\r\n        fetchLabels();\r\n    }, []);\r\n\r\n    const changeLabelHandler = (label) => {\r\n        const labelsCopy = labels.slice();\r\n        const selectedLabel = labelsCopy.find(labelCopy => labelCopy.backgroundColor === label.backgroundColor && labelCopy.color === label.color);\r\n\r\n        labelsCopy.forEach(label => label.isSelected = false);\r\n\r\n        selectedLabel.isSelected = true;\r\n        setLabels(labelsCopy);\r\n\r\n        props.change(label);\r\n    }\r\n\r\n    if (isLoading) {\r\n        return <Spinner />\r\n    }\r\n\r\n    if (errorMessages.length > 0) {\r\n        return errorMessages.map((message, index) => {\r\n            return <Alert key={index} alert='danger' message={message} />\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className={classes.TodoLabels}>\r\n            {labels.map((label, index) => {\r\n                return (\r\n                    <Label \r\n                        change={changeLabelHandler}\r\n                        key={index}\r\n                        label={label}\r\n                    />\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoLabels;","import { useState, useEffect } from 'react';\r\nimport classes from './TodoSection.module.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport todoService from '../../../services/todoService.js';\r\n\r\nimport Spinner from '../../Shared/Spinner/Spinner';\r\nimport Alert from '../../Shared/Alert/Alert';\r\nimport TodoForm from './TodoForm/TodoForm';\r\nimport TodoList from './TodoList/TodoList';\r\nimport TodoLabels from './TodoLabels/TodoLabels';\r\n\r\nconst TodoSection = (props) => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [errorMessages, setErrorMessages] = useState([]);\r\n    const [showCreateForm, setShowCreateForm] = useState(false);\r\n    const [selectedLabel, setSelectedLabel] = useState(null);\r\n    const [todos, setTodos] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchTodos() {\r\n            setIsLoading(true);\r\n            const todosResponse = await todoService.getDailyTodos(props.date);\r\n\r\n            if (!todosResponse.ok) {\r\n                setErrorMessages(todosResponse.errorMessages);\r\n            } else {\r\n                setTodos(todosResponse.data.todos);\r\n            }\r\n\r\n            setIsLoading(false);\r\n        }\r\n\r\n        fetchTodos();\r\n    }, [props.date]);\r\n\r\n    const createTodoHandler = async (title, description) => {\r\n        if (selectedLabel === null) {\r\n            alert('Choose label');\r\n            return;\r\n        }\r\n\r\n        setIsLoading(true);\r\n\r\n        const createTodoResponse = await todoService.create({\r\n            title,\r\n            description,\r\n            labelText: selectedLabel.text,\r\n            date: props.date\r\n        });\r\n\r\n        const todoResponse = createTodoResponse.data.response;\r\n\r\n        if (!todoResponse.ok) {\r\n            setErrorMessages(todoResponse.errorMessages);\r\n        } else {\r\n            const createdTodo = todoResponse.data.todo;\r\n            createdTodo.label = selectedLabel;\r\n            setTodos((oldTodos) => [...oldTodos, createdTodo]);\r\n        }\r\n\r\n        setIsLoading(false);\r\n        setSelectedLabel(null);\r\n        setShowCreateForm(false);\r\n    }\r\n\r\n    const deleteTodo = (todoId) => {\r\n        const todosCopy = todos.slice();\r\n        const todoIndex = todosCopy.findIndex(todo => todo.id === todoId);\r\n\r\n        if (todoIndex === -1) {\r\n            return;\r\n        }\r\n\r\n        todoService.deleteTodo(todoId);\r\n\r\n        todosCopy.splice(todoIndex, 1);\r\n        setTodos(todosCopy);\r\n    }\r\n  \r\n    const toggleShowCreateForm = () => {\r\n        setShowCreateForm((oldState) => !oldState);\r\n    }\r\n\r\n    const changeLabelHandler = (label) => {\r\n        setSelectedLabel(label);\r\n    }\r\n\r\n    if(isLoading) {\r\n        return <Spinner />\r\n    }\r\n\r\n    if(errorMessages.length > 0) {\r\n        return errorMessages.map((message, index) => {\r\n            return <Alert key={index} alert='danger' message={message} />\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className={classes.TodoSection}>\r\n            <span className={classes.TodoSectionText}>Todo section:</span>\r\n            <FontAwesomeIcon onClick={toggleShowCreateForm} icon={faPlusCircle} className={classes.Add} />\r\n\r\n            {\r\n                showCreateForm ?\r\n                    (\r\n                        <div className={classes.Form}>\r\n                            <TodoForm create={createTodoHandler} />\r\n                            <TodoLabels change={changeLabelHandler} />\r\n                        </div>\r\n                    ) : null\r\n            }\r\n            <TodoList todos={todos} deleteTodo={deleteTodo} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoSection;","import { useEffect, useState } from 'react';\r\nimport classes from \"./MoodSelect.module.css\";\r\n\r\nimport moodService from '../../../services/moodService.js';\r\n\r\nimport Alert from '../../Shared/Alert/Alert';\r\n\r\nconst MoodSelect = (props) => {\r\n\tconst [errorMessages, setErrorMessages] = useState([]);\r\n\tconst [mood, setMood] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tasync function fetchMood() {\r\n\t\t\tconst rawMoodResponse = await moodService.getForDay(props.date);\r\n\t\t\tconst moodResponse = rawMoodResponse.data.response;\r\n\t\t\tif (!moodResponse.ok) {\r\n\t\t\t\tsetErrorMessages(moodResponse.errorMessages);\r\n\t\t\t}\r\n\r\n\t\t\tconst mood = moodResponse.data.moodText;\r\n\t\t\tsetMood(mood);\r\n\t\t}\r\n\r\n\t\tfetchMood();\r\n\t}, [props.date]);\r\n\r\n\tconst updateMood = (event) => {\r\n\t\tconst selectedMood = event.target.value;\r\n\t\tmoodService.updateMood(props.date, selectedMood);\r\n\t\tsetMood(selectedMood);\r\n\t};\r\n\r\n\tif(errorMessages.length > 0) {\r\n\t\treturn errorMessages.map((message, index) => {\r\n\t\t\treturn <Alert key={index} alert='danger' message={message} />\r\n\t\t});\r\n\t}\r\n\r\n\tif(mood === null) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.MoodContainer}>\r\n\t\t\t<span className={classes.MoodText}>How's your day going: </span>\r\n\t\t\t<select\r\n\t\t\t\tonChange={updateMood}\r\n\t\t\t\tdefaultValue={mood}\r\n\t\t\t\tclassName={classes.MoodSelect}\r\n\t\t\t>\r\n\t\t\t\t<option className={classes.Excellent}>Excellent</option>\r\n\t\t\t\t<option className={classes.Good}>Good</option>\r\n\t\t\t\t<option className={classes.Average}>Average</option>\r\n\t\t\t\t<option className={classes.Bad}>Bad</option>\r\n\t\t\t\t<option className={classes.Miserable}>Miserable</option>\r\n\t\t\t</select>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default MoodSelect;\r\n","import classes from './TodoContainer.module.css';\r\n\r\nimport calendarService from '../../services/calendarService.js';\r\n\r\nimport TodoSection from './TodoSection/TodoSection';\r\nimport MoodSelect from './MoodSelect/MoodSelect';\r\n\r\nconst TodoContainer = (props) => {\r\n    const date = props.match.params.date;\r\n    let stringDate = calendarService.convertFromNumber(date);\r\n\r\n    return (\r\n        <div className={classes.TodoContainer}>\r\n            <span className={classes.CurrentDate}>Current date: {stringDate}</span>\r\n            <MoodSelect date={date} />\r\n            <TodoSection date={date} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoContainer;","import { useState } from 'react';\r\nimport classes from './DayBox.module.css';\r\n\r\nimport calendarService from '../../../../../services/calendarService.js';\r\n\r\nconst DayBox = (props) => {\r\n    const [showPopup, setShowPopup] = useState(false);\r\n\r\n    const hoverHandler = () => {\r\n        setShowPopup(true);\r\n    }\r\n\r\n    const hoverLeaveHandler = () => {\r\n        setShowPopup(false);\r\n    }\r\n\r\n    const redirect = () => {\r\n        const date = props.date;\r\n        props.redirect(props.history, `/Todo/${date}`);\r\n    }\r\n\r\n    let popup = null;\r\n    if (showPopup) {\r\n        const stringDate = calendarService.convertFromNumber(props.date);\r\n        popup = (\r\n            <div className={classes.Popover}>{stringDate}</div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div\r\n            onMouseOver={hoverHandler}\r\n            onMouseLeave={hoverLeaveHandler}\r\n            onClick={redirect}\r\n            style={{ backgroundColor: props.moodColor }}\r\n            className={classes.DayBox}>\r\n            {popup}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DayBox;","import classes from './WeekRow.module.css';\r\n\r\nimport moodService from '../../../../services/moodService.js';\r\n\r\nimport DayBox from './DayBox/DayBox';\r\n\r\nconst WeekRow = (props) => {\r\n    const dayBoxes = props.dayMoods.map(dayMood => {\r\n        const currentMood = moodService.getMoodColor(dayMood.mood);\r\n        \r\n        return (\r\n            <DayBox \r\n                {...props} \r\n                key={dayMood.date} \r\n                date={dayMood.date} \r\n                moodColor={currentMood} \r\n            />\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div className={classes.WeekRow}>\r\n            {dayBoxes}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WeekRow;","import { useState, useEffect } from 'react';\r\nimport classes from './MonthBox.module.css';\r\n\r\nimport calendarService from '../../../services/calendarService.js';\r\nimport moodService from '../../../services/moodService.js';\r\n\r\nimport WeekRow from './WeekRow/WeekRow';\r\nimport Spinner from '../../Shared/Spinner/Spinner';\r\nimport Alert from '../../Shared/Alert/Alert';\r\n\r\nconst MonthBox = (props) => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [errorMessages, setErrorMessages] = useState([]);\r\n    const [monthDays, setMonthDays] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchMonthDays() {\r\n            setIsLoading(true);\r\n\r\n            const { year, month } = props;\r\n            const { from, to } = calendarService.getMonthData(year, month);\r\n\r\n            const rawMoodResponse = await moodService.getForRange(from, to);\r\n            const moodResponse = rawMoodResponse.data.response;\r\n            const dateMoods = moodResponse.data.dateMoods;\r\n\r\n            const monthDays = [];\r\n            for (let i = from - 1; i <= to; i++) {\r\n                const currentDateMood = dateMoods.find(dateMood => dateMood.date === i);\r\n                let mood = 'Missing';\r\n                if (currentDateMood !== undefined) {\r\n                    mood = currentDateMood.mood;\r\n                }\r\n\r\n                monthDays.push({\r\n                    date: i,\r\n                    mood\r\n                });\r\n            }\r\n\r\n            if (!moodResponse.ok) {\r\n                setErrorMessages(moodResponse.errorMessages);\r\n            } else {\r\n                setMonthDays(monthDays);\r\n            }\r\n\r\n            setIsLoading(false);\r\n        }\r\n\r\n        fetchMonthDays();\r\n    }, [props]);\r\n\r\n    if(errorMessages.length > 0) {\r\n        return errorMessages.map((message, index) => {\r\n            return <Alert alert='danger' key={index} message={message} />;\r\n        });\r\n    }\r\n\r\n    const spinner = isLoading ? <Spinner /> : null;\r\n    const weekRows = [];\r\n\r\n    if (monthDays.length > 0) {\r\n        let counter = 0;\r\n\r\n        for (let week = 0; week < 5; week++) {\r\n            const dayMoods = [];\r\n            for (let day = 0; day < 7; day++) {\r\n                counter++;\r\n                if (counter === monthDays.length) {\r\n                    break;\r\n                }\r\n\r\n                const { date, mood } = monthDays[counter];\r\n                const dateMood = {\r\n                    date,\r\n                    mood\r\n                };\r\n\r\n                dayMoods.push(dateMood);\r\n            }\r\n\r\n            weekRows.push(\r\n                <WeekRow \r\n                    {...props} \r\n                    dayMoods={dayMoods} \r\n                    key={week} \r\n                />\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.MonthBox}>\r\n            {spinner}\r\n            {weekRows}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MonthBox;","import classes from './MonthRow.module.css';\r\n\r\nimport MonthBox from '../MonthBox/MonthBox';\r\n\r\nconst MonthRow = (props) => {\r\n    const monthBoxes = [];\r\n    for (let i = props.from; i <= props.to; i++) {\r\n        monthBoxes.push(\r\n            <MonthBox \r\n                {...props} \r\n                year={props.year} \r\n                key={i} \r\n                month={i}\r\n            />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className={classes.MonthRow}>\r\n            {monthBoxes}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MonthRow;","import calendarService from '../../services/calendarService.js';\r\n\r\nimport MonthRow from './MonthRow/MonthRow';\r\n\r\nconst Overview = (props) => {\r\n    const currentYear = calendarService.getCurrentYear();\r\n\r\n    return (\r\n        <div>\r\n            <MonthRow {...props} year={currentYear} from={1} to={4} />\r\n            <MonthRow {...props} year={currentYear} from={5} to={8} />\r\n            <MonthRow {...props} year={currentYear} from={9} to={12} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Overview;","import React, { Component } from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport authService from './services/authService.js';\n\nimport Navigation from './components/Navigation/Navigation';\nimport Login from './components/Login/Login';\nimport Register from './components/Register/Register';\nimport Calendar from './components/Calendar/Calendar';\nimport TodoContainer from './components/TodoContainer/TodoContainer';\nimport Overview from './components/Overview/Overview.js';\n\nclass App extends Component {\n  state = {\n    isAuthenticated: false\n  }\n\n  componentDidMount() {\n    const isAuthenticated = authService.isUserAuthenticated();\n    this.setState({ isAuthenticated: isAuthenticated });\n  }\n\n  redirect = (history, page, authenticate) => {\n    history.push(page);\n    sessionStorage.setItem('page', page);\n    if(authenticate !== undefined) {\n      this.setState({ isAuthenticated: authenticate });\n    }\n  }\n\n  render() {\n    const requireAuthentication = (Component, props) => {\n      // middleware function that checks if the user is authenticated\n      // if the user is not authenticated, he is redirected to Login page\n      // otherwise the desired component is rendered\n\n      if (!authService.isUserAuthenticated()) {\n        props.history.push('/Login');\n      }\n\n      return <Component redirect={this.redirect} {...props} />\n    }\n\n    const requireAnonymous = (Component, props) => {\n      // middleware function that checks if the user is not authenticated\n      // if he is not, then the app renderes the desired component\n      // if he is authenticated, he is redirected to Calendar component\n\n      if (authService.isUserAuthenticated()) {\n        props.history.push('/Calendar');\n      }\n\n      return <Component redirect={this.redirect} {...props} />\n    }\n\n    return (\n      <div>\n        <HashRouter>\n          <Navigation redirect={this.redirect} isAuthenticated={this.state.isAuthenticated} />\n          <Switch>\n            <Route path='/Login' exact render={(props) => requireAnonymous(Login, props)} />\n            <Route path='/Register' exact render={(props) => requireAnonymous(Register, props)} />\n            <Route path='/Calendar' exact render={(props) => requireAuthentication(Calendar, props)} />\n            <Route path='/Todo/:date' exact render={(props) => requireAuthentication(TodoContainer, props)} />\n            <Route path='/Overview' exact render={(props) => requireAuthentication(Overview, props)} />\n            <Route path='/' exact render={(props) => requireAuthentication(Calendar, props)} /> \n          </Switch>\n        </HashRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}